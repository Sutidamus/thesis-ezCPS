/**@license
 *   __ __                          __
 *  / / \ \       _    _  ___  ___  \ \
 * | |   \ \     | |  | || . \/ __>  | |
 * | |    > \    | |_ | ||  _/\__ \  | |
 * | |   / ^ \   |___||_||_|  <___/  | |
 *  \_\ /_/ \_\                     /_/ v. 1.0.0-beta.16
 *
 * LIPS is Pretty Simple - Scheme based Powerful LISP in JavaScript
 *
 * Copyright (c) 2018-2021 Jakub T. Jankiewicz <https://jcubic.pl/me>
 * Released under the MIT license
 *
 * includes:
 *
 * unfetch by Jason Miller (@developit) MIT License
 *
 * contentloaded.js
 *
 * Author: Diego Perini (diego.perini at gmail.com)
 * Summary: cross-browser wrapper for DOMContentLoaded
 * Updated: 20101020
 * License: MIT
 * Version: 1.2
 *
 * URL:
 * http://javascript.nwbox.com/ContentLoaded/
 * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
 *
 * dist file generated by Babel includes code
 * Copyright (c) 2014-present, Facebook, Inc.
 * released under MIT license
 *
 * build: Mon, 15 Nov 2021 19:33:52 +0000
 */
(function (e, t) {
  typeof exports === "object" && typeof module !== "undefined"
    ? (module.exports = t())
    : typeof define === "function" && define.amd
    ? define(t)
    : ((e = typeof globalThis !== "undefined" ? globalThis : e || self),
      (e.lips = t()));
})(this, function () {
  "use strict";
  function i(e) {
    if (e === void 0) {
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    }
    return e;
  }
  function o(e, t) {
    o =
      Object.setPrototypeOf ||
      function e(t, r) {
        t.__proto__ = r;
        return t;
      };
    return o(e, t);
  }
  function n() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      );
      return true;
    } catch (e) {
      return false;
    }
  }
  function p(e, t, r) {
    if (n()) {
      p = Reflect.construct;
    } else {
      p = function e(t, r, n) {
        var i = [null];
        i.push.apply(i, r);
        var u = Function.bind.apply(t, i);
        var a = new u();
        if (n) o(a, n.prototype);
        return a;
      };
    }
    return p.apply(null, arguments);
  }
  function u(e, t) {
    if (typeof t !== "function" && t !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    e.prototype = Object.create(t && t.prototype, {
      constructor: { value: e, writable: true, configurable: true },
    });
    if (t) o(e, t);
  }
  function _(e) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _ = function e(t) {
        return typeof t;
      };
    } else {
      _ = function e(t) {
        return t &&
          typeof Symbol === "function" &&
          t.constructor === Symbol &&
          t !== Symbol.prototype
          ? "symbol"
          : typeof t;
      };
    }
    return _(e);
  }
  function a(e, t) {
    if (t && (_(t) === "object" || typeof t === "function")) {
      return t;
    } else if (t !== void 0) {
      throw new TypeError(
        "Derived constructors may only return object or undefined"
      );
    }
    return i(e);
  }
  function s(e) {
    s = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function e(t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        };
    return s(e);
  }
  function r(e) {
    if (Array.isArray(e)) return e;
  }
  function t(e) {
    if (
      (typeof Symbol !== "undefined" && e[Symbol.iterator] != null) ||
      e["@@iterator"] != null
    )
      return Array.from(e);
  }
  function c(e, t) {
    if (t == null || t > e.length) t = e.length;
    for (var r = 0, n = new Array(t); r < t; r++) {
      n[r] = e[r];
    }
    return n;
  }
  function f(e, t) {
    if (!e) return;
    if (typeof e === "string") return c(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor) r = e.constructor.name;
    if (r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))
      return c(e, t);
  }
  function l() {
    throw new TypeError(
      "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
  function h(e) {
    return r(e) || t(e) || f(e) || l();
  }
  function d(e) {
    if (Array.isArray(e)) return c(e);
  }
  function v() {
    throw new TypeError(
      "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
  function k(e) {
    return d(e) || t(e) || f(e) || v();
  }
  function m(e, t, r, n, i, u, a) {
    try {
      var o = e[u](a);
      var s = o.value;
    } catch (e) {
      r(e);
      return;
    }
    if (o.done) {
      t(s);
    } else {
      Promise.resolve(s).then(n, i);
    }
  }
  function O(o) {
    return function () {
      var e = this,
        a = arguments;
      return new Promise(function (t, r) {
        var n = o.apply(e, a);
        function i(e) {
          m(n, t, r, i, u, "next", e);
        }
        function u(e) {
          m(n, t, r, i, u, "throw", e);
        }
        i(undefined);
      });
    };
  }
  function y(e, t) {
    if (!(e instanceof t)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function g(e, t) {
    for (var r = 0; r < t.length; r++) {
      var n = t[r];
      n.enumerable = n.enumerable || false;
      n.configurable = true;
      if ("value" in n) n.writable = true;
      Object.defineProperty(e, n.key, n);
    }
  }
  function b(e, t, r) {
    if (t) g(e.prototype, t);
    if (r) g(e, r);
    return e;
  }
  function L(e, t, r) {
    if (t in e) {
      Object.defineProperty(e, t, {
        value: r,
        enumerable: true,
        configurable: true,
        writable: true,
      });
    } else {
      e[t] = r;
    }
    return e;
  }
  function w(e, t) {
    if (e == null) return {};
    var r = {};
    var n = Object.keys(e);
    var i, u;
    for (u = 0; u < n.length; u++) {
      i = n[u];
      if (t.indexOf(i) >= 0) continue;
      r[i] = e[i];
    }
    return r;
  }
  function D(e, t) {
    if (e == null) return {};
    var r = w(e, t);
    var n, i;
    if (Object.getOwnPropertySymbols) {
      var u = Object.getOwnPropertySymbols(e);
      for (i = 0; i < u.length; i++) {
        n = u[i];
        if (t.indexOf(n) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
        r[n] = e[n];
      }
    }
    return r;
  }
  function E(e, t) {
    var r =
      e == null
        ? null
        : (typeof Symbol !== "undefined" && e[Symbol.iterator]) ||
          e["@@iterator"];
    if (r == null) return;
    var n = [];
    var i = true;
    var u = false;
    var a, o;
    try {
      for (r = r.call(e); !(i = (a = r.next()).done); i = true) {
        n.push(a.value);
        if (t && n.length === t) break;
      }
    } catch (e) {
      u = true;
      o = e;
    } finally {
      try {
        if (!i && r["return"] != null) r["return"]();
      } finally {
        if (u) throw o;
      }
    }
    return n;
  }
  function A(e, t) {
    return r(e) || E(e, t) || f(e, t) || l();
  }
  function F(e) {
    var t;
    if (typeof Symbol !== "undefined") {
      if (Symbol.asyncIterator) t = e[Symbol.asyncIterator];
      if (t == null && Symbol.iterator) t = e[Symbol.iterator];
    }
    if (t == null) t = e["@@asyncIterator"];
    if (t == null) t = e["@@iterator"];
    if (t == null) throw new TypeError("Object is not async iterable");
    return t.call(e);
  }
  function x(e) {
    this.wrapped = e;
  }
  function C(e) {
    return new x(e);
  }
  function S(u) {
    var a, o;
    function e(n, i) {
      return new Promise(function (e, t) {
        var r = { key: n, arg: i, resolve: e, reject: t, next: null };
        if (o) {
          o = o.next = r;
        } else {
          a = o = r;
          s(n, i);
        }
      });
    }
    function s(t, e) {
      try {
        var r = u[t](e);
        var n = r.value;
        var i = n instanceof x;
        Promise.resolve(i ? n.wrapped : n).then(
          function (e) {
            if (i) {
              s(t === "return" ? "return" : "next", e);
              return;
            }
            c(r.done ? "return" : "normal", e);
          },
          function (e) {
            s("throw", e);
          }
        );
      } catch (e) {
        c("throw", e);
      }
    }
    function c(e, t) {
      switch (e) {
        case "return":
          a.resolve({ value: t, done: true });
          break;
        case "throw":
          a.reject(t);
          break;
        default:
          a.resolve({ value: t, done: false });
          break;
      }
      a = a.next;
      if (a) {
        s(a.key, a.arg);
      } else {
        o = null;
      }
    }
    this._invoke = e;
    if (typeof u["return"] !== "function") {
      this["return"] = undefined;
    }
  }
  S.prototype[
    (typeof Symbol === "function" && Symbol.asyncIterator) || "@@asyncIterator"
  ] = function () {
    return this;
  };
  S.prototype.next = function (e) {
    return this._invoke("next", e);
  };
  S.prototype["throw"] = function (e) {
    return this._invoke("throw", e);
  };
  S.prototype["return"] = function (e) {
    return this._invoke("return", e);
  };
  function e(e) {
    return function () {
      return new S(e.apply(this, arguments));
    };
  }
  var B = { exports: {} };
  (function (e) {
    var t = (function (a) {
      var e = Object.prototype;
      var f = e.hasOwnProperty;
      var s;
      var t = typeof Symbol === "function" ? Symbol : {};
      var i = t.iterator || "@@iterator";
      var r = t.asyncIterator || "@@asyncIterator";
      var n = t.toStringTag || "@@toStringTag";
      function u(e, t, r) {
        Object.defineProperty(e, t, {
          value: r,
          enumerable: true,
          configurable: true,
          writable: true,
        });
        return e[t];
      }
      try {
        u({}, "");
      } catch (e) {
        u = function (e, t, r) {
          return (e[t] = r);
        };
      }
      function o(e, t, r, n) {
        var i = t && t.prototype instanceof c ? t : c;
        var u = Object.create(i.prototype);
        var a = new O(n || []);
        u._invoke = F(e, r, a);
        return u;
      }
      a.wrap = o;
      function l(e, t, r) {
        try {
          return { type: "normal", arg: e.call(t, r) };
        } catch (e) {
          return { type: "throw", arg: e };
        }
      }
      var h = "suspendedStart";
      var p = "suspendedYield";
      var _ = "executing";
      var d = "completed";
      var v = {};
      function c() {}
      function m() {}
      function y() {}
      var g = {};
      u(g, i, function () {
        return this;
      });
      var b = Object.getPrototypeOf;
      var w = b && b(b(S([])));
      if (w && w !== e && f.call(w, i)) {
        g = w;
      }
      var D = (y.prototype = c.prototype = Object.create(g));
      m.prototype = y;
      u(D, "constructor", y);
      u(y, "constructor", m);
      m.displayName = u(y, n, "GeneratorFunction");
      function E(e) {
        ["next", "throw", "return"].forEach(function (t) {
          u(e, t, function (e) {
            return this._invoke(t, e);
          });
        });
      }
      a.isGeneratorFunction = function (e) {
        var t = typeof e === "function" && e.constructor;
        return t
          ? t === m || (t.displayName || t.name) === "GeneratorFunction"
          : false;
      };
      a.mark = function (e) {
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(e, y);
        } else {
          e.__proto__ = y;
          u(e, n, "GeneratorFunction");
        }
        e.prototype = Object.create(D);
        return e;
      };
      a.awrap = function (e) {
        return { __await: e };
      };
      function A(o, s) {
        function c(e, t, r, n) {
          var i = l(o[e], o, t);
          if (i.type === "throw") {
            n(i.arg);
          } else {
            var u = i.arg;
            var a = u.value;
            if (a && typeof a === "object" && f.call(a, "__await")) {
              return s.resolve(a.__await).then(
                function (e) {
                  c("next", e, r, n);
                },
                function (e) {
                  c("throw", e, r, n);
                }
              );
            }
            return s.resolve(a).then(
              function (e) {
                u.value = e;
                r(u);
              },
              function (e) {
                return c("throw", e, r, n);
              }
            );
          }
        }
        var t;
        function e(r, n) {
          function e() {
            return new s(function (e, t) {
              c(r, n, e, t);
            });
          }
          return (t = t ? t.then(e, e) : e());
        }
        this._invoke = e;
      }
      E(A.prototype);
      u(A.prototype, r, function () {
        return this;
      });
      a.AsyncIterator = A;
      a.async = function (e, t, r, n, i) {
        if (i === void 0) i = Promise;
        var u = new A(o(e, t, r, n), i);
        return a.isGeneratorFunction(t)
          ? u
          : u.next().then(function (e) {
              return e.done ? e.value : u.next();
            });
      };
      function F(a, o, s) {
        var c = h;
        return function e(t, r) {
          if (c === _) {
            throw new Error("Generator is already running");
          }
          if (c === d) {
            if (t === "throw") {
              throw r;
            }
            return B();
          }
          s.method = t;
          s.arg = r;
          while (true) {
            var n = s.delegate;
            if (n) {
              var i = x(n, s);
              if (i) {
                if (i === v) continue;
                return i;
              }
            }
            if (s.method === "next") {
              s.sent = s._sent = s.arg;
            } else if (s.method === "throw") {
              if (c === h) {
                c = d;
                throw s.arg;
              }
              s.dispatchException(s.arg);
            } else if (s.method === "return") {
              s.abrupt("return", s.arg);
            }
            c = _;
            var u = l(a, o, s);
            if (u.type === "normal") {
              c = s.done ? d : p;
              if (u.arg === v) {
                continue;
              }
              return { value: u.arg, done: s.done };
            } else if (u.type === "throw") {
              c = d;
              s.method = "throw";
              s.arg = u.arg;
            }
          }
        };
      }
      function x(e, t) {
        var r = e.iterator[t.method];
        if (r === s) {
          t.delegate = null;
          if (t.method === "throw") {
            if (e.iterator["return"]) {
              t.method = "return";
              t.arg = s;
              x(e, t);
              if (t.method === "throw") {
                return v;
              }
            }
            t.method = "throw";
            t.arg = new TypeError(
              "The iterator does not provide a 'throw' method"
            );
          }
          return v;
        }
        var n = l(r, e.iterator, t.arg);
        if (n.type === "throw") {
          t.method = "throw";
          t.arg = n.arg;
          t.delegate = null;
          return v;
        }
        var i = n.arg;
        if (!i) {
          t.method = "throw";
          t.arg = new TypeError("iterator result is not an object");
          t.delegate = null;
          return v;
        }
        if (i.done) {
          t[e.resultName] = i.value;
          t.next = e.nextLoc;
          if (t.method !== "return") {
            t.method = "next";
            t.arg = s;
          }
        } else {
          return i;
        }
        t.delegate = null;
        return v;
      }
      E(D);
      u(D, n, "Generator");
      u(D, i, function () {
        return this;
      });
      u(D, "toString", function () {
        return "[object Generator]";
      });
      function C(e) {
        var t = { tryLoc: e[0] };
        if (1 in e) {
          t.catchLoc = e[1];
        }
        if (2 in e) {
          t.finallyLoc = e[2];
          t.afterLoc = e[3];
        }
        this.tryEntries.push(t);
      }
      function k(e) {
        var t = e.completion || {};
        t.type = "normal";
        delete t.arg;
        e.completion = t;
      }
      function O(e) {
        this.tryEntries = [{ tryLoc: "root" }];
        e.forEach(C, this);
        this.reset(true);
      }
      a.keys = function (r) {
        var n = [];
        for (var e in r) {
          n.push(e);
        }
        n.reverse();
        return function e() {
          while (n.length) {
            var t = n.pop();
            if (t in r) {
              e.value = t;
              e.done = false;
              return e;
            }
          }
          e.done = true;
          return e;
        };
      };
      function S(t) {
        if (t) {
          var e = t[i];
          if (e) {
            return e.call(t);
          }
          if (typeof t.next === "function") {
            return t;
          }
          if (!isNaN(t.length)) {
            var r = -1,
              n = function e() {
                while (++r < t.length) {
                  if (f.call(t, r)) {
                    e.value = t[r];
                    e.done = false;
                    return e;
                  }
                }
                e.value = s;
                e.done = true;
                return e;
              };
            return (n.next = n);
          }
        }
        return { next: B };
      }
      a.values = S;
      function B() {
        return { value: s, done: true };
      }
      O.prototype = {
        constructor: O,
        reset: function (e) {
          this.prev = 0;
          this.next = 0;
          this.sent = this._sent = s;
          this.done = false;
          this.delegate = null;
          this.method = "next";
          this.arg = s;
          this.tryEntries.forEach(k);
          if (!e) {
            for (var t in this) {
              if (
                t.charAt(0) === "t" &&
                f.call(this, t) &&
                !isNaN(+t.slice(1))
              ) {
                this[t] = s;
              }
            }
          }
        },
        stop: function () {
          this.done = true;
          var e = this.tryEntries[0];
          var t = e.completion;
          if (t.type === "throw") {
            throw t.arg;
          }
          return this.rval;
        },
        dispatchException: function (r) {
          if (this.done) {
            throw r;
          }
          var n = this;
          function e(e, t) {
            u.type = "throw";
            u.arg = r;
            n.next = e;
            if (t) {
              n.method = "next";
              n.arg = s;
            }
            return !!t;
          }
          for (var t = this.tryEntries.length - 1; t >= 0; --t) {
            var i = this.tryEntries[t];
            var u = i.completion;
            if (i.tryLoc === "root") {
              return e("end");
            }
            if (i.tryLoc <= this.prev) {
              var a = f.call(i, "catchLoc");
              var o = f.call(i, "finallyLoc");
              if (a && o) {
                if (this.prev < i.catchLoc) {
                  return e(i.catchLoc, true);
                } else if (this.prev < i.finallyLoc) {
                  return e(i.finallyLoc);
                }
              } else if (a) {
                if (this.prev < i.catchLoc) {
                  return e(i.catchLoc, true);
                }
              } else if (o) {
                if (this.prev < i.finallyLoc) {
                  return e(i.finallyLoc);
                }
              } else {
                throw new Error("try statement without catch or finally");
              }
            }
          }
        },
        abrupt: function (e, t) {
          for (var r = this.tryEntries.length - 1; r >= 0; --r) {
            var n = this.tryEntries[r];
            if (
              n.tryLoc <= this.prev &&
              f.call(n, "finallyLoc") &&
              this.prev < n.finallyLoc
            ) {
              var i = n;
              break;
            }
          }
          if (
            i &&
            (e === "break" || e === "continue") &&
            i.tryLoc <= t &&
            t <= i.finallyLoc
          ) {
            i = null;
          }
          var u = i ? i.completion : {};
          u.type = e;
          u.arg = t;
          if (i) {
            this.method = "next";
            this.next = i.finallyLoc;
            return v;
          }
          return this.complete(u);
        },
        complete: function (e, t) {
          if (e.type === "throw") {
            throw e.arg;
          }
          if (e.type === "break" || e.type === "continue") {
            this.next = e.arg;
          } else if (e.type === "return") {
            this.rval = this.arg = e.arg;
            this.method = "return";
            this.next = "end";
          } else if (e.type === "normal" && t) {
            this.next = t;
          }
          return v;
        },
        finish: function (e) {
          for (var t = this.tryEntries.length - 1; t >= 0; --t) {
            var r = this.tryEntries[t];
            if (r.finallyLoc === e) {
              this.complete(r.completion, r.afterLoc);
              k(r);
              return v;
            }
          }
        },
        catch: function (e) {
          for (var t = this.tryEntries.length - 1; t >= 0; --t) {
            var r = this.tryEntries[t];
            if (r.tryLoc === e) {
              var n = r.completion;
              if (n.type === "throw") {
                var i = n.arg;
                k(r);
              }
              return i;
            }
          }
          throw new Error("illegal catch attempt");
        },
        delegateYield: function (e, t, r) {
          this.delegate = { iterator: S(e), resultName: t, nextLoc: r };
          if (this.method === "next") {
            this.arg = s;
          }
          return v;
        },
      };
      return a;
    })(e.exports);
    try {
      regeneratorRuntime = t;
    } catch (e) {
      if (typeof globalThis === "object") {
        globalThis.regeneratorRuntime = t;
      } else {
        Function("r", "regeneratorRuntime = r")(t);
      }
    }
  })(B);
  var j = B.exports;
  var I =
    typeof global !== "undefined"
      ? global
      : typeof self !== "undefined"
      ? self
      : typeof window !== "undefined"
      ? window
      : {};
  var P = [];
  var N = [];
  var R = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
  var T = false;
  function U() {
    T = true;
    var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var t = 0, r = e.length; t < r; ++t) {
      P[t] = e[t];
      N[e.charCodeAt(t)] = t;
    }
    N["-".charCodeAt(0)] = 62;
    N["_".charCodeAt(0)] = 63;
  }
  function q(e) {
    if (!T) {
      U();
    }
    var t, r, n, i, u, a;
    var o = e.length;
    if (o % 4 > 0) {
      throw new Error("Invalid string. Length must be a multiple of 4");
    }
    u = e[o - 2] === "=" ? 2 : e[o - 1] === "=" ? 1 : 0;
    a = new R((o * 3) / 4 - u);
    n = u > 0 ? o - 4 : o;
    var s = 0;
    for (t = 0, r = 0; t < n; t += 4, r += 3) {
      i =
        (N[e.charCodeAt(t)] << 18) |
        (N[e.charCodeAt(t + 1)] << 12) |
        (N[e.charCodeAt(t + 2)] << 6) |
        N[e.charCodeAt(t + 3)];
      a[s++] = (i >> 16) & 255;
      a[s++] = (i >> 8) & 255;
      a[s++] = i & 255;
    }
    if (u === 2) {
      i = (N[e.charCodeAt(t)] << 2) | (N[e.charCodeAt(t + 1)] >> 4);
      a[s++] = i & 255;
    } else if (u === 1) {
      i =
        (N[e.charCodeAt(t)] << 10) |
        (N[e.charCodeAt(t + 1)] << 4) |
        (N[e.charCodeAt(t + 2)] >> 2);
      a[s++] = (i >> 8) & 255;
      a[s++] = i & 255;
    }
    return a;
  }
  function M(e) {
    return P[(e >> 18) & 63] + P[(e >> 12) & 63] + P[(e >> 6) & 63] + P[e & 63];
  }
  function Y(e, t, r) {
    var n;
    var i = [];
    for (var u = t; u < r; u += 3) {
      n = (e[u] << 16) + (e[u + 1] << 8) + e[u + 2];
      i.push(M(n));
    }
    return i.join("");
  }
  function $(e) {
    if (!T) {
      U();
    }
    var t;
    var r = e.length;
    var n = r % 3;
    var i = "";
    var u = [];
    var a = 16383;
    for (var o = 0, s = r - n; o < s; o += a) {
      u.push(Y(e, o, o + a > s ? s : o + a));
    }
    if (n === 1) {
      t = e[r - 1];
      i += P[t >> 2];
      i += P[(t << 4) & 63];
      i += "==";
    } else if (n === 2) {
      t = (e[r - 2] << 8) + e[r - 1];
      i += P[t >> 10];
      i += P[(t >> 4) & 63];
      i += P[(t << 2) & 63];
      i += "=";
    }
    u.push(i);
    return u.join("");
  }
  function z(e, t, r, n, i) {
    var u, a;
    var o = i * 8 - n - 1;
    var s = (1 << o) - 1;
    var c = s >> 1;
    var f = -7;
    var l = r ? i - 1 : 0;
    var h = r ? -1 : 1;
    var p = e[t + l];
    l += h;
    u = p & ((1 << -f) - 1);
    p >>= -f;
    f += o;
    for (; f > 0; u = u * 256 + e[t + l], l += h, f -= 8) {}
    a = u & ((1 << -f) - 1);
    u >>= -f;
    f += n;
    for (; f > 0; a = a * 256 + e[t + l], l += h, f -= 8) {}
    if (u === 0) {
      u = 1 - c;
    } else if (u === s) {
      return a ? NaN : (p ? -1 : 1) * Infinity;
    } else {
      a = a + Math.pow(2, n);
      u = u - c;
    }
    return (p ? -1 : 1) * a * Math.pow(2, u - n);
  }
  function V(e, t, r, n, i, u) {
    var a, o, s;
    var c = u * 8 - i - 1;
    var f = (1 << c) - 1;
    var l = f >> 1;
    var h = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var p = n ? 0 : u - 1;
    var _ = n ? 1 : -1;
    var d = t < 0 || (t === 0 && 1 / t < 0) ? 1 : 0;
    t = Math.abs(t);
    if (isNaN(t) || t === Infinity) {
      o = isNaN(t) ? 1 : 0;
      a = f;
    } else {
      a = Math.floor(Math.log(t) / Math.LN2);
      if (t * (s = Math.pow(2, -a)) < 1) {
        a--;
        s *= 2;
      }
      if (a + l >= 1) {
        t += h / s;
      } else {
        t += h * Math.pow(2, 1 - l);
      }
      if (t * s >= 2) {
        a++;
        s /= 2;
      }
      if (a + l >= f) {
        o = 0;
        a = f;
      } else if (a + l >= 1) {
        o = (t * s - 1) * Math.pow(2, i);
        a = a + l;
      } else {
        o = t * Math.pow(2, l - 1) * Math.pow(2, i);
        a = 0;
      }
    }
    for (; i >= 8; e[r + p] = o & 255, p += _, o /= 256, i -= 8) {}
    a = (a << i) | o;
    c += i;
    for (; c > 0; e[r + p] = a & 255, p += _, a /= 256, c -= 8) {}
    e[r + p - _] |= d * 128;
  }
  var J = {}.toString;
  var G =
    Array.isArray ||
    function (e) {
      return J.call(e) == "[object Array]";
    };
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
   * @license  MIT
   */ var H = 50;
  Z.TYPED_ARRAY_SUPPORT =
    I.TYPED_ARRAY_SUPPORT !== undefined ? I.TYPED_ARRAY_SUPPORT : true;
  function W() {
    return Z.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
  }
  function Q(e, t) {
    if (W() < t) {
      throw new RangeError("Invalid typed array length");
    }
    if (Z.TYPED_ARRAY_SUPPORT) {
      e = new Uint8Array(t);
      e.__proto__ = Z.prototype;
    } else {
      if (e === null) {
        e = new Z(t);
      }
      e.length = t;
    }
    return e;
  }
  function Z(e, t, r) {
    if (!Z.TYPED_ARRAY_SUPPORT && !(this instanceof Z)) {
      return new Z(e, t, r);
    }
    if (typeof e === "number") {
      if (typeof t === "string") {
        throw new Error(
          "If encoding is specified then the first argument must be a string"
        );
      }
      return te(this, e);
    }
    return K(this, e, t, r);
  }
  Z.poolSize = 8192;
  Z._augment = function (e) {
    e.__proto__ = Z.prototype;
    return e;
  };
  function K(e, t, r, n) {
    if (typeof t === "number") {
      throw new TypeError('"value" argument must not be a number');
    }
    if (typeof ArrayBuffer !== "undefined" && t instanceof ArrayBuffer) {
      return ie(e, t, r, n);
    }
    if (typeof t === "string") {
      return re(e, t, r);
    }
    return ue(e, t);
  }
  Z.from = function (e, t, r) {
    return K(null, e, t, r);
  };
  if (Z.TYPED_ARRAY_SUPPORT) {
    Z.prototype.__proto__ = Uint8Array.prototype;
    Z.__proto__ = Uint8Array;
  }
  function X(e) {
    if (typeof e !== "number") {
      throw new TypeError('"size" argument must be a number');
    } else if (e < 0) {
      throw new RangeError('"size" argument must not be negative');
    }
  }
  function ee(e, t, r, n) {
    X(t);
    if (t <= 0) {
      return Q(e, t);
    }
    if (r !== undefined) {
      return typeof n === "string" ? Q(e, t).fill(r, n) : Q(e, t).fill(r);
    }
    return Q(e, t);
  }
  Z.alloc = function (e, t, r) {
    return ee(null, e, t, r);
  };
  function te(e, t) {
    X(t);
    e = Q(e, t < 0 ? 0 : ae(t) | 0);
    if (!Z.TYPED_ARRAY_SUPPORT) {
      for (var r = 0; r < t; ++r) {
        e[r] = 0;
      }
    }
    return e;
  }
  Z.allocUnsafe = function (e) {
    return te(null, e);
  };
  Z.allocUnsafeSlow = function (e) {
    return te(null, e);
  };
  function re(e, t, r) {
    if (typeof r !== "string" || r === "") {
      r = "utf8";
    }
    if (!Z.isEncoding(r)) {
      throw new TypeError('"encoding" must be a valid string encoding');
    }
    var n = se(t, r) | 0;
    e = Q(e, n);
    var i = e.write(t, r);
    if (i !== n) {
      e = e.slice(0, i);
    }
    return e;
  }
  function ne(e, t) {
    var r = t.length < 0 ? 0 : ae(t.length) | 0;
    e = Q(e, r);
    for (var n = 0; n < r; n += 1) {
      e[n] = t[n] & 255;
    }
    return e;
  }
  function ie(e, t, r, n) {
    t.byteLength;
    if (r < 0 || t.byteLength < r) {
      throw new RangeError("'offset' is out of bounds");
    }
    if (t.byteLength < r + (n || 0)) {
      throw new RangeError("'length' is out of bounds");
    }
    if (r === undefined && n === undefined) {
      t = new Uint8Array(t);
    } else if (n === undefined) {
      t = new Uint8Array(t, r);
    } else {
      t = new Uint8Array(t, r, n);
    }
    if (Z.TYPED_ARRAY_SUPPORT) {
      e = t;
      e.__proto__ = Z.prototype;
    } else {
      e = ne(e, t);
    }
    return e;
  }
  function ue(e, t) {
    if (oe(t)) {
      var r = ae(t.length) | 0;
      e = Q(e, r);
      if (e.length === 0) {
        return e;
      }
      t.copy(e, 0, 0, r);
      return e;
    }
    if (t) {
      if (
        (typeof ArrayBuffer !== "undefined" &&
          t.buffer instanceof ArrayBuffer) ||
        "length" in t
      ) {
        if (typeof t.length !== "number" || $e(t.length)) {
          return Q(e, 0);
        }
        return ne(e, t);
      }
      if (t.type === "Buffer" && G(t.data)) {
        return ne(e, t.data);
      }
    }
    throw new TypeError(
      "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
    );
  }
  function ae(e) {
    if (e >= W()) {
      throw new RangeError(
        "Attempt to allocate Buffer larger than maximum " +
          "size: 0x" +
          W().toString(16) +
          " bytes"
      );
    }
    return e | 0;
  }
  Z.isBuffer = ze;
  function oe(e) {
    return !!(e != null && e._isBuffer);
  }
  Z.compare = function e(t, r) {
    if (!oe(t) || !oe(r)) {
      throw new TypeError("Arguments must be Buffers");
    }
    if (t === r) return 0;
    var n = t.length;
    var i = r.length;
    for (var u = 0, a = Math.min(n, i); u < a; ++u) {
      if (t[u] !== r[u]) {
        n = t[u];
        i = r[u];
        break;
      }
    }
    if (n < i) return -1;
    if (i < n) return 1;
    return 0;
  };
  Z.isEncoding = function e(t) {
    switch (String(t).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  };
  Z.concat = function e(t, r) {
    if (!G(t)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }
    if (t.length === 0) {
      return Z.alloc(0);
    }
    var n;
    if (r === undefined) {
      r = 0;
      for (n = 0; n < t.length; ++n) {
        r += t[n].length;
      }
    }
    var i = Z.allocUnsafe(r);
    var u = 0;
    for (n = 0; n < t.length; ++n) {
      var a = t[n];
      if (!oe(a)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      a.copy(i, u);
      u += a.length;
    }
    return i;
  };
  function se(e, t) {
    if (oe(e)) {
      return e.length;
    }
    if (
      typeof ArrayBuffer !== "undefined" &&
      typeof ArrayBuffer.isView === "function" &&
      (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
    ) {
      return e.byteLength;
    }
    if (typeof e !== "string") {
      e = "" + e;
    }
    var r = e.length;
    if (r === 0) return 0;
    var n = false;
    for (;;) {
      switch (t) {
        case "ascii":
        case "latin1":
        case "binary":
          return r;
        case "utf8":
        case "utf-8":
        case undefined:
          return Le(e).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return r * 2;
        case "hex":
          return r >>> 1;
        case "base64":
          return Me(e).length;
        default:
          if (n) return Le(e).length;
          t = ("" + t).toLowerCase();
          n = true;
      }
    }
  }
  Z.byteLength = se;
  function ce(e, t, r) {
    var n = false;
    if (t === undefined || t < 0) {
      t = 0;
    }
    if (t > this.length) {
      return "";
    }
    if (r === undefined || r > this.length) {
      r = this.length;
    }
    if (r <= 0) {
      return "";
    }
    r >>>= 0;
    t >>>= 0;
    if (r <= t) {
      return "";
    }
    if (!e) e = "utf8";
    while (true) {
      switch (e) {
        case "hex":
          return Fe(this, t, r);
        case "utf8":
        case "utf-8":
          return be(this, t, r);
        case "ascii":
          return Ee(this, t, r);
        case "latin1":
        case "binary":
          return Ae(this, t, r);
        case "base64":
          return ge(this, t, r);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return xe(this, t, r);
        default:
          if (n) throw new TypeError("Unknown encoding: " + e);
          e = (e + "").toLowerCase();
          n = true;
      }
    }
  }
  Z.prototype._isBuffer = true;
  function fe(e, t, r) {
    var n = e[t];
    e[t] = e[r];
    e[r] = n;
  }
  Z.prototype.swap16 = function e() {
    var t = this.length;
    if (t % 2 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    }
    for (var r = 0; r < t; r += 2) {
      fe(this, r, r + 1);
    }
    return this;
  };
  Z.prototype.swap32 = function e() {
    var t = this.length;
    if (t % 4 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    }
    for (var r = 0; r < t; r += 4) {
      fe(this, r, r + 3);
      fe(this, r + 1, r + 2);
    }
    return this;
  };
  Z.prototype.swap64 = function e() {
    var t = this.length;
    if (t % 8 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    }
    for (var r = 0; r < t; r += 8) {
      fe(this, r, r + 7);
      fe(this, r + 1, r + 6);
      fe(this, r + 2, r + 5);
      fe(this, r + 3, r + 4);
    }
    return this;
  };
  Z.prototype.toString = function e() {
    var t = this.length | 0;
    if (t === 0) return "";
    if (arguments.length === 0) return be(this, 0, t);
    return ce.apply(this, arguments);
  };
  Z.prototype.equals = function e(t) {
    if (!oe(t)) throw new TypeError("Argument must be a Buffer");
    if (this === t) return true;
    return Z.compare(this, t) === 0;
  };
  Z.prototype.inspect = function e() {
    var t = "";
    var r = H;
    if (this.length > 0) {
      t = this.toString("hex", 0, r).match(/.{2}/g).join(" ");
      if (this.length > r) t += " ... ";
    }
    return "<Buffer " + t + ">";
  };
  Z.prototype.compare = function e(t, r, n, i, u) {
    if (!oe(t)) {
      throw new TypeError("Argument must be a Buffer");
    }
    if (r === undefined) {
      r = 0;
    }
    if (n === undefined) {
      n = t ? t.length : 0;
    }
    if (i === undefined) {
      i = 0;
    }
    if (u === undefined) {
      u = this.length;
    }
    if (r < 0 || n > t.length || i < 0 || u > this.length) {
      throw new RangeError("out of range index");
    }
    if (i >= u && r >= n) {
      return 0;
    }
    if (i >= u) {
      return -1;
    }
    if (r >= n) {
      return 1;
    }
    r >>>= 0;
    n >>>= 0;
    i >>>= 0;
    u >>>= 0;
    if (this === t) return 0;
    var a = u - i;
    var o = n - r;
    var s = Math.min(a, o);
    var c = this.slice(i, u);
    var f = t.slice(r, n);
    for (var l = 0; l < s; ++l) {
      if (c[l] !== f[l]) {
        a = c[l];
        o = f[l];
        break;
      }
    }
    if (a < o) return -1;
    if (o < a) return 1;
    return 0;
  };
  function le(e, t, r, n, i) {
    if (e.length === 0) return -1;
    if (typeof r === "string") {
      n = r;
      r = 0;
    } else if (r > 2147483647) {
      r = 2147483647;
    } else if (r < -2147483648) {
      r = -2147483648;
    }
    r = +r;
    if (isNaN(r)) {
      r = i ? 0 : e.length - 1;
    }
    if (r < 0) r = e.length + r;
    if (r >= e.length) {
      if (i) return -1;
      else r = e.length - 1;
    } else if (r < 0) {
      if (i) r = 0;
      else return -1;
    }
    if (typeof t === "string") {
      t = Z.from(t, n);
    }
    if (oe(t)) {
      if (t.length === 0) {
        return -1;
      }
      return he(e, t, r, n, i);
    } else if (typeof t === "number") {
      t = t & 255;
      if (
        Z.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === "function"
      ) {
        if (i) {
          return Uint8Array.prototype.indexOf.call(e, t, r);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(e, t, r);
        }
      }
      return he(e, [t], r, n, i);
    }
    throw new TypeError("val must be string, number or Buffer");
  }
  function he(e, t, r, n, i) {
    var u = 1;
    var a = e.length;
    var o = t.length;
    if (n !== undefined) {
      n = String(n).toLowerCase();
      if (
        n === "ucs2" ||
        n === "ucs-2" ||
        n === "utf16le" ||
        n === "utf-16le"
      ) {
        if (e.length < 2 || t.length < 2) {
          return -1;
        }
        u = 2;
        a /= 2;
        o /= 2;
        r /= 2;
      }
    }
    function s(e, t) {
      if (u === 1) {
        return e[t];
      } else {
        return e.readUInt16BE(t * u);
      }
    }
    var c;
    if (i) {
      var f = -1;
      for (c = r; c < a; c++) {
        if (s(e, c) === s(t, f === -1 ? 0 : c - f)) {
          if (f === -1) f = c;
          if (c - f + 1 === o) return f * u;
        } else {
          if (f !== -1) c -= c - f;
          f = -1;
        }
      }
    } else {
      if (r + o > a) r = a - o;
      for (c = r; c >= 0; c--) {
        var l = true;
        for (var h = 0; h < o; h++) {
          if (s(e, c + h) !== s(t, h)) {
            l = false;
            break;
          }
        }
        if (l) return c;
      }
    }
    return -1;
  }
  Z.prototype.includes = function e(t, r, n) {
    return this.indexOf(t, r, n) !== -1;
  };
  Z.prototype.indexOf = function e(t, r, n) {
    return le(this, t, r, n, true);
  };
  Z.prototype.lastIndexOf = function e(t, r, n) {
    return le(this, t, r, n, false);
  };
  function pe(e, t, r, n) {
    r = Number(r) || 0;
    var i = e.length - r;
    if (!n) {
      n = i;
    } else {
      n = Number(n);
      if (n > i) {
        n = i;
      }
    }
    var u = t.length;
    if (u % 2 !== 0) throw new TypeError("Invalid hex string");
    if (n > u / 2) {
      n = u / 2;
    }
    for (var a = 0; a < n; ++a) {
      var o = parseInt(t.substr(a * 2, 2), 16);
      if (isNaN(o)) return a;
      e[r + a] = o;
    }
    return a;
  }
  function _e(e, t, r, n) {
    return Ye(Le(t, e.length - r), e, r, n);
  }
  function de(e, t, r, n) {
    return Ye(Ue(t), e, r, n);
  }
  function ve(e, t, r, n) {
    return de(e, t, r, n);
  }
  function me(e, t, r, n) {
    return Ye(Me(t), e, r, n);
  }
  function ye(e, t, r, n) {
    return Ye(qe(t, e.length - r), e, r, n);
  }
  Z.prototype.write = function e(t, r, n, i) {
    if (r === undefined) {
      i = "utf8";
      n = this.length;
      r = 0;
    } else if (n === undefined && typeof r === "string") {
      i = r;
      n = this.length;
      r = 0;
    } else if (isFinite(r)) {
      r = r | 0;
      if (isFinite(n)) {
        n = n | 0;
        if (i === undefined) i = "utf8";
      } else {
        i = n;
        n = undefined;
      }
    } else {
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    }
    var u = this.length - r;
    if (n === undefined || n > u) n = u;
    if ((t.length > 0 && (n < 0 || r < 0)) || r > this.length) {
      throw new RangeError("Attempt to write outside buffer bounds");
    }
    if (!i) i = "utf8";
    var a = false;
    for (;;) {
      switch (i) {
        case "hex":
          return pe(this, t, r, n);
        case "utf8":
        case "utf-8":
          return _e(this, t, r, n);
        case "ascii":
          return de(this, t, r, n);
        case "latin1":
        case "binary":
          return ve(this, t, r, n);
        case "base64":
          return me(this, t, r, n);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return ye(this, t, r, n);
        default:
          if (a) throw new TypeError("Unknown encoding: " + i);
          i = ("" + i).toLowerCase();
          a = true;
      }
    }
  };
  Z.prototype.toJSON = function e() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0),
    };
  };
  function ge(e, t, r) {
    if (t === 0 && r === e.length) {
      return $(e);
    } else {
      return $(e.slice(t, r));
    }
  }
  function be(e, t, r) {
    r = Math.min(e.length, r);
    var n = [];
    var i = t;
    while (i < r) {
      var u = e[i];
      var a = null;
      var o = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;
      if (i + o <= r) {
        var s, c, f, l;
        switch (o) {
          case 1:
            if (u < 128) {
              a = u;
            }
            break;
          case 2:
            s = e[i + 1];
            if ((s & 192) === 128) {
              l = ((u & 31) << 6) | (s & 63);
              if (l > 127) {
                a = l;
              }
            }
            break;
          case 3:
            s = e[i + 1];
            c = e[i + 2];
            if ((s & 192) === 128 && (c & 192) === 128) {
              l = ((u & 15) << 12) | ((s & 63) << 6) | (c & 63);
              if (l > 2047 && (l < 55296 || l > 57343)) {
                a = l;
              }
            }
            break;
          case 4:
            s = e[i + 1];
            c = e[i + 2];
            f = e[i + 3];
            if ((s & 192) === 128 && (c & 192) === 128 && (f & 192) === 128) {
              l =
                ((u & 15) << 18) |
                ((s & 63) << 12) |
                ((c & 63) << 6) |
                (f & 63);
              if (l > 65535 && l < 1114112) {
                a = l;
              }
            }
        }
      }
      if (a === null) {
        a = 65533;
        o = 1;
      } else if (a > 65535) {
        a -= 65536;
        n.push(((a >>> 10) & 1023) | 55296);
        a = 56320 | (a & 1023);
      }
      n.push(a);
      i += o;
    }
    return De(n);
  }
  var we = 4096;
  function De(e) {
    var t = e.length;
    if (t <= we) {
      return String.fromCharCode.apply(String, e);
    }
    var r = "";
    var n = 0;
    while (n < t) {
      r += String.fromCharCode.apply(String, e.slice(n, (n += we)));
    }
    return r;
  }
  function Ee(e, t, r) {
    var n = "";
    r = Math.min(e.length, r);
    for (var i = t; i < r; ++i) {
      n += String.fromCharCode(e[i] & 127);
    }
    return n;
  }
  function Ae(e, t, r) {
    var n = "";
    r = Math.min(e.length, r);
    for (var i = t; i < r; ++i) {
      n += String.fromCharCode(e[i]);
    }
    return n;
  }
  function Fe(e, t, r) {
    var n = e.length;
    if (!t || t < 0) t = 0;
    if (!r || r < 0 || r > n) r = n;
    var i = "";
    for (var u = t; u < r; ++u) {
      i += Te(e[u]);
    }
    return i;
  }
  function xe(e, t, r) {
    var n = e.slice(t, r);
    var i = "";
    for (var u = 0; u < n.length; u += 2) {
      i += String.fromCharCode(n[u] + n[u + 1] * 256);
    }
    return i;
  }
  Z.prototype.slice = function e(t, r) {
    var n = this.length;
    t = ~~t;
    r = r === undefined ? n : ~~r;
    if (t < 0) {
      t += n;
      if (t < 0) t = 0;
    } else if (t > n) {
      t = n;
    }
    if (r < 0) {
      r += n;
      if (r < 0) r = 0;
    } else if (r > n) {
      r = n;
    }
    if (r < t) r = t;
    var i;
    if (Z.TYPED_ARRAY_SUPPORT) {
      i = this.subarray(t, r);
      i.__proto__ = Z.prototype;
    } else {
      var u = r - t;
      i = new Z(u, undefined);
      for (var a = 0; a < u; ++a) {
        i[a] = this[a + t];
      }
    }
    return i;
  };
  function Ce(e, t, r) {
    if (e % 1 !== 0 || e < 0) throw new RangeError("offset is not uint");
    if (e + t > r)
      throw new RangeError("Trying to access beyond buffer length");
  }
  Z.prototype.readUIntLE = function e(t, r, n) {
    t = t | 0;
    r = r | 0;
    if (!n) Ce(t, r, this.length);
    var i = this[t];
    var u = 1;
    var a = 0;
    while (++a < r && (u *= 256)) {
      i += this[t + a] * u;
    }
    return i;
  };
  Z.prototype.readUIntBE = function e(t, r, n) {
    t = t | 0;
    r = r | 0;
    if (!n) {
      Ce(t, r, this.length);
    }
    var i = this[t + --r];
    var u = 1;
    while (r > 0 && (u *= 256)) {
      i += this[t + --r] * u;
    }
    return i;
  };
  Z.prototype.readUInt8 = function e(t, r) {
    if (!r) Ce(t, 1, this.length);
    return this[t];
  };
  Z.prototype.readUInt16LE = function e(t, r) {
    if (!r) Ce(t, 2, this.length);
    return this[t] | (this[t + 1] << 8);
  };
  Z.prototype.readUInt16BE = function e(t, r) {
    if (!r) Ce(t, 2, this.length);
    return (this[t] << 8) | this[t + 1];
  };
  Z.prototype.readUInt32LE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return (
      (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
      this[t + 3] * 16777216
    );
  };
  Z.prototype.readUInt32BE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return (
      this[t] * 16777216 +
      ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
    );
  };
  Z.prototype.readIntLE = function e(t, r, n) {
    t = t | 0;
    r = r | 0;
    if (!n) Ce(t, r, this.length);
    var i = this[t];
    var u = 1;
    var a = 0;
    while (++a < r && (u *= 256)) {
      i += this[t + a] * u;
    }
    u *= 128;
    if (i >= u) i -= Math.pow(2, 8 * r);
    return i;
  };
  Z.prototype.readIntBE = function e(t, r, n) {
    t = t | 0;
    r = r | 0;
    if (!n) Ce(t, r, this.length);
    var i = r;
    var u = 1;
    var a = this[t + --i];
    while (i > 0 && (u *= 256)) {
      a += this[t + --i] * u;
    }
    u *= 128;
    if (a >= u) a -= Math.pow(2, 8 * r);
    return a;
  };
  Z.prototype.readInt8 = function e(t, r) {
    if (!r) Ce(t, 1, this.length);
    if (!(this[t] & 128)) return this[t];
    return (255 - this[t] + 1) * -1;
  };
  Z.prototype.readInt16LE = function e(t, r) {
    if (!r) Ce(t, 2, this.length);
    var n = this[t] | (this[t + 1] << 8);
    return n & 32768 ? n | 4294901760 : n;
  };
  Z.prototype.readInt16BE = function e(t, r) {
    if (!r) Ce(t, 2, this.length);
    var n = this[t + 1] | (this[t] << 8);
    return n & 32768 ? n | 4294901760 : n;
  };
  Z.prototype.readInt32LE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return (
      this[t] | (this[t + 1] << 8) | (this[t + 2] << 16) | (this[t + 3] << 24)
    );
  };
  Z.prototype.readInt32BE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return (
      (this[t] << 24) | (this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3]
    );
  };
  Z.prototype.readFloatLE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return z(this, t, true, 23, 4);
  };
  Z.prototype.readFloatBE = function e(t, r) {
    if (!r) Ce(t, 4, this.length);
    return z(this, t, false, 23, 4);
  };
  Z.prototype.readDoubleLE = function e(t, r) {
    if (!r) Ce(t, 8, this.length);
    return z(this, t, true, 52, 8);
  };
  Z.prototype.readDoubleBE = function e(t, r) {
    if (!r) Ce(t, 8, this.length);
    return z(this, t, false, 52, 8);
  };
  function ke(e, t, r, n, i, u) {
    if (!oe(e))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (t > i || t < u)
      throw new RangeError('"value" argument is out of bounds');
    if (r + n > e.length) throw new RangeError("Index out of range");
  }
  Z.prototype.writeUIntLE = function e(t, r, n, i) {
    t = +t;
    r = r | 0;
    n = n | 0;
    if (!i) {
      var u = Math.pow(2, 8 * n) - 1;
      ke(this, t, r, n, u, 0);
    }
    var a = 1;
    var o = 0;
    this[r] = t & 255;
    while (++o < n && (a *= 256)) {
      this[r + o] = (t / a) & 255;
    }
    return r + n;
  };
  Z.prototype.writeUIntBE = function e(t, r, n, i) {
    t = +t;
    r = r | 0;
    n = n | 0;
    if (!i) {
      var u = Math.pow(2, 8 * n) - 1;
      ke(this, t, r, n, u, 0);
    }
    var a = n - 1;
    var o = 1;
    this[r + a] = t & 255;
    while (--a >= 0 && (o *= 256)) {
      this[r + a] = (t / o) & 255;
    }
    return r + n;
  };
  Z.prototype.writeUInt8 = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 1, 255, 0);
    if (!Z.TYPED_ARRAY_SUPPORT) t = Math.floor(t);
    this[r] = t & 255;
    return r + 1;
  };
  function Oe(e, t, r, n) {
    if (t < 0) t = 65535 + t + 1;
    for (var i = 0, u = Math.min(e.length - r, 2); i < u; ++i) {
      e[r + i] = (t & (255 << (8 * (n ? i : 1 - i)))) >>> ((n ? i : 1 - i) * 8);
    }
  }
  Z.prototype.writeUInt16LE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 2, 65535, 0);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t & 255;
      this[r + 1] = t >>> 8;
    } else {
      Oe(this, t, r, true);
    }
    return r + 2;
  };
  Z.prototype.writeUInt16BE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 2, 65535, 0);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t >>> 8;
      this[r + 1] = t & 255;
    } else {
      Oe(this, t, r, false);
    }
    return r + 2;
  };
  function Se(e, t, r, n) {
    if (t < 0) t = 4294967295 + t + 1;
    for (var i = 0, u = Math.min(e.length - r, 4); i < u; ++i) {
      e[r + i] = (t >>> ((n ? i : 3 - i) * 8)) & 255;
    }
  }
  Z.prototype.writeUInt32LE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 4, 4294967295, 0);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r + 3] = t >>> 24;
      this[r + 2] = t >>> 16;
      this[r + 1] = t >>> 8;
      this[r] = t & 255;
    } else {
      Se(this, t, r, true);
    }
    return r + 4;
  };
  Z.prototype.writeUInt32BE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 4, 4294967295, 0);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t >>> 24;
      this[r + 1] = t >>> 16;
      this[r + 2] = t >>> 8;
      this[r + 3] = t & 255;
    } else {
      Se(this, t, r, false);
    }
    return r + 4;
  };
  Z.prototype.writeIntLE = function e(t, r, n, i) {
    t = +t;
    r = r | 0;
    if (!i) {
      var u = Math.pow(2, 8 * n - 1);
      ke(this, t, r, n, u - 1, -u);
    }
    var a = 0;
    var o = 1;
    var s = 0;
    this[r] = t & 255;
    while (++a < n && (o *= 256)) {
      if (t < 0 && s === 0 && this[r + a - 1] !== 0) {
        s = 1;
      }
      this[r + a] = (((t / o) >> 0) - s) & 255;
    }
    return r + n;
  };
  Z.prototype.writeIntBE = function e(t, r, n, i) {
    t = +t;
    r = r | 0;
    if (!i) {
      var u = Math.pow(2, 8 * n - 1);
      ke(this, t, r, n, u - 1, -u);
    }
    var a = n - 1;
    var o = 1;
    var s = 0;
    this[r + a] = t & 255;
    while (--a >= 0 && (o *= 256)) {
      if (t < 0 && s === 0 && this[r + a + 1] !== 0) {
        s = 1;
      }
      this[r + a] = (((t / o) >> 0) - s) & 255;
    }
    return r + n;
  };
  Z.prototype.writeInt8 = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 1, 127, -128);
    if (!Z.TYPED_ARRAY_SUPPORT) t = Math.floor(t);
    if (t < 0) t = 255 + t + 1;
    this[r] = t & 255;
    return r + 1;
  };
  Z.prototype.writeInt16LE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 2, 32767, -32768);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t & 255;
      this[r + 1] = t >>> 8;
    } else {
      Oe(this, t, r, true);
    }
    return r + 2;
  };
  Z.prototype.writeInt16BE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 2, 32767, -32768);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t >>> 8;
      this[r + 1] = t & 255;
    } else {
      Oe(this, t, r, false);
    }
    return r + 2;
  };
  Z.prototype.writeInt32LE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 4, 2147483647, -2147483648);
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t & 255;
      this[r + 1] = t >>> 8;
      this[r + 2] = t >>> 16;
      this[r + 3] = t >>> 24;
    } else {
      Se(this, t, r, true);
    }
    return r + 4;
  };
  Z.prototype.writeInt32BE = function e(t, r, n) {
    t = +t;
    r = r | 0;
    if (!n) ke(this, t, r, 4, 2147483647, -2147483648);
    if (t < 0) t = 4294967295 + t + 1;
    if (Z.TYPED_ARRAY_SUPPORT) {
      this[r] = t >>> 24;
      this[r + 1] = t >>> 16;
      this[r + 2] = t >>> 8;
      this[r + 3] = t & 255;
    } else {
      Se(this, t, r, false);
    }
    return r + 4;
  };
  function Be(e, t, r, n, i, u) {
    if (r + n > e.length) throw new RangeError("Index out of range");
    if (r < 0) throw new RangeError("Index out of range");
  }
  function je(e, t, r, n, i) {
    if (!i) {
      Be(e, t, r, 4);
    }
    V(e, t, r, n, 23, 4);
    return r + 4;
  }
  Z.prototype.writeFloatLE = function e(t, r, n) {
    return je(this, t, r, true, n);
  };
  Z.prototype.writeFloatBE = function e(t, r, n) {
    return je(this, t, r, false, n);
  };
  function Ie(e, t, r, n, i) {
    if (!i) {
      Be(e, t, r, 8);
    }
    V(e, t, r, n, 52, 8);
    return r + 8;
  }
  Z.prototype.writeDoubleLE = function e(t, r, n) {
    return Ie(this, t, r, true, n);
  };
  Z.prototype.writeDoubleBE = function e(t, r, n) {
    return Ie(this, t, r, false, n);
  };
  Z.prototype.copy = function e(t, r, n, i) {
    if (!n) n = 0;
    if (!i && i !== 0) i = this.length;
    if (r >= t.length) r = t.length;
    if (!r) r = 0;
    if (i > 0 && i < n) i = n;
    if (i === n) return 0;
    if (t.length === 0 || this.length === 0) return 0;
    if (r < 0) {
      throw new RangeError("targetStart out of bounds");
    }
    if (n < 0 || n >= this.length)
      throw new RangeError("sourceStart out of bounds");
    if (i < 0) throw new RangeError("sourceEnd out of bounds");
    if (i > this.length) i = this.length;
    if (t.length - r < i - n) {
      i = t.length - r + n;
    }
    var u = i - n;
    var a;
    if (this === t && n < r && r < i) {
      for (a = u - 1; a >= 0; --a) {
        t[a + r] = this[a + n];
      }
    } else if (u < 1e3 || !Z.TYPED_ARRAY_SUPPORT) {
      for (a = 0; a < u; ++a) {
        t[a + r] = this[a + n];
      }
    } else {
      Uint8Array.prototype.set.call(t, this.subarray(n, n + u), r);
    }
    return u;
  };
  Z.prototype.fill = function e(t, r, n, i) {
    if (typeof t === "string") {
      if (typeof r === "string") {
        i = r;
        r = 0;
        n = this.length;
      } else if (typeof n === "string") {
        i = n;
        n = this.length;
      }
      if (t.length === 1) {
        var u = t.charCodeAt(0);
        if (u < 256) {
          t = u;
        }
      }
      if (i !== undefined && typeof i !== "string") {
        throw new TypeError("encoding must be a string");
      }
      if (typeof i === "string" && !Z.isEncoding(i)) {
        throw new TypeError("Unknown encoding: " + i);
      }
    } else if (typeof t === "number") {
      t = t & 255;
    }
    if (r < 0 || this.length < r || this.length < n) {
      throw new RangeError("Out of range index");
    }
    if (n <= r) {
      return this;
    }
    r = r >>> 0;
    n = n === undefined ? this.length : n >>> 0;
    if (!t) t = 0;
    var a;
    if (typeof t === "number") {
      for (a = r; a < n; ++a) {
        this[a] = t;
      }
    } else {
      var o = oe(t) ? t : Le(new Z(t, i).toString());
      var s = o.length;
      for (a = 0; a < n - r; ++a) {
        this[a + r] = o[a % s];
      }
    }
    return this;
  };
  var Pe = /[^+\/0-9A-Za-z-_]/g;
  function Ne(e) {
    e = Re(e).replace(Pe, "");
    if (e.length < 2) return "";
    while (e.length % 4 !== 0) {
      e = e + "=";
    }
    return e;
  }
  function Re(e) {
    if (e.trim) return e.trim();
    return e.replace(/^\s+|\s+$/g, "");
  }
  function Te(e) {
    if (e < 16) return "0" + e.toString(16);
    return e.toString(16);
  }
  function Le(e, t) {
    t = t || Infinity;
    var r;
    var n = e.length;
    var i = null;
    var u = [];
    for (var a = 0; a < n; ++a) {
      r = e.charCodeAt(a);
      if (r > 55295 && r < 57344) {
        if (!i) {
          if (r > 56319) {
            if ((t -= 3) > -1) u.push(239, 191, 189);
            continue;
          } else if (a + 1 === n) {
            if ((t -= 3) > -1) u.push(239, 191, 189);
            continue;
          }
          i = r;
          continue;
        }
        if (r < 56320) {
          if ((t -= 3) > -1) u.push(239, 191, 189);
          i = r;
          continue;
        }
        r = (((i - 55296) << 10) | (r - 56320)) + 65536;
      } else if (i) {
        if ((t -= 3) > -1) u.push(239, 191, 189);
      }
      i = null;
      if (r < 128) {
        if ((t -= 1) < 0) break;
        u.push(r);
      } else if (r < 2048) {
        if ((t -= 2) < 0) break;
        u.push((r >> 6) | 192, (r & 63) | 128);
      } else if (r < 65536) {
        if ((t -= 3) < 0) break;
        u.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (r & 63) | 128);
      } else if (r < 1114112) {
        if ((t -= 4) < 0) break;
        u.push(
          (r >> 18) | 240,
          ((r >> 12) & 63) | 128,
          ((r >> 6) & 63) | 128,
          (r & 63) | 128
        );
      } else {
        throw new Error("Invalid code point");
      }
    }
    return u;
  }
  function Ue(e) {
    var t = [];
    for (var r = 0; r < e.length; ++r) {
      t.push(e.charCodeAt(r) & 255);
    }
    return t;
  }
  function qe(e, t) {
    var r, n, i;
    var u = [];
    for (var a = 0; a < e.length; ++a) {
      if ((t -= 2) < 0) break;
      r = e.charCodeAt(a);
      n = r >> 8;
      i = r % 256;
      u.push(i);
      u.push(n);
    }
    return u;
  }
  function Me(e) {
    return q(Ne(e));
  }
  function Ye(e, t, r, n) {
    for (var i = 0; i < n; ++i) {
      if (i + r >= t.length || i >= e.length) break;
      t[i + r] = e[i];
    }
    return i;
  }
  function $e(e) {
    return e !== e;
  }
  function ze(e) {
    return e != null && (!!e._isBuffer || Ve(e) || Je(e));
  }
  function Ve(e) {
    return (
      !!e.constructor &&
      typeof e.constructor.isBuffer === "function" &&
      e.constructor.isBuffer(e)
    );
  }
  function Je(e) {
    return (
      typeof e.readFloatLE === "function" &&
      typeof e.slice === "function" &&
      Ve(e.slice(0, 0))
    );
  }
  let Ge;
  try {
    Ge = new TextDecoder();
  } catch (e) {}
  let He;
  let We;
  let Qe = 0;
  const Ze = 105;
  const Ke = {};
  let Xe = {};
  let et;
  let tt;
  let rt = 0;
  let nt = 0;
  let it;
  let ut = [];
  let at;
  let ot;
  let st = { useRecords: false, mapsAsObjects: true };
  let ct = false;
  class ft {
    constructor(e) {
      if (e) {
        if (e.useRecords === false && e.mapsAsObjects === undefined)
          e.mapsAsObjects = true;
        if (e.getStructures && !e.structures)
          (e.structures = []).uninitialized = true;
      }
      Object.assign(this, e);
    }
    decode(e, t) {
      if (He) {
        return Bt(() => {
          jt();
          return this ? this.decode(e, t) : ft.prototype.decode.call(st, e, t);
        });
      }
      We = t > -1 ? t : e.length;
      Qe = 0;
      nt = 0;
      tt = null;
      He = e;
      at =
        e.dataView ||
        (e.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength));
      if (this) {
        Xe = this;
        if (this.structures) {
          et = this.structures;
          return lt();
        } else if (!et || et.length > 0) {
          et = [];
        }
      } else {
        Xe = st;
        if (!et || et.length > 0) et = [];
      }
      return lt();
    }
    decodeMultiple(r, n) {
      let i,
        u = 0;
      try {
        let e = r.length;
        ct = true;
        let t = this ? this.decode(r, e) : Nt.decode(r, e);
        if (n) {
          n(t);
          while (Qe < e) {
            u = Qe;
            if (n(lt()) === false) {
              return;
            }
          }
        } else {
          i = [t];
          while (Qe < e) {
            u = Qe;
            i.push(lt());
          }
          return i;
        }
      } catch (e) {
        e.lastPosition = u;
        e.values = i;
        throw e;
      } finally {
        ct = false;
        jt();
      }
    }
  }
  function lt() {
    try {
      let e = ht();
      if (Qe == We) {
        et = null;
        He = null;
        if (it) it = null;
      } else if (Qe > We) {
        let e = new Error("Unexpected end of CBOR data");
        e.incomplete = true;
        throw e;
      } else if (!ct) {
        throw new Error("Data read, but end of buffer not reached");
      }
      return e;
    } catch (e) {
      jt();
      if (
        e instanceof RangeError ||
        e.message.startsWith("Unexpected end of buffer")
      ) {
        e.incomplete = true;
      }
      throw e;
    }
  }
  function ht() {
    let r = He[Qe++];
    let i = r >> 5;
    r = r & 31;
    if (r > 23) {
      switch (r) {
        case 24:
          r = He[Qe++];
          break;
        case 25:
          if (i == 7) {
            return Dt();
          }
          r = at.getUint16(Qe);
          Qe += 2;
          break;
        case 26:
          if (i == 7) {
            let t = at.getFloat32(Qe);
            if (Xe.useFloat32 > 2) {
              let e = Pt[((He[Qe] & 127) << 1) | (He[Qe + 1] >> 7)];
              Qe += 4;
              return ((e * t + (t > 0 ? 0.5 : -0.5)) >> 0) / e;
            }
            Qe += 4;
            return t;
          }
          r = at.getUint32(Qe);
          Qe += 4;
          break;
        case 27:
          if (i == 7) {
            let e = at.getFloat64(Qe);
            Qe += 8;
            return e;
          }
          if (Xe.uint64AsNumber)
            return (
              He[Qe++] * 72057594037927940 +
              He[Qe++] * 281474976710656 +
              He[Qe++] * 1099511627776 +
              He[Qe++] * 4294967296 +
              He[Qe++] * 16777216 +
              (He[Qe++] << 16) +
              (He[Qe++] << 8) +
              He[Qe++]
            );
          r = at.getBigUint64(Qe);
          Qe += 8;
          break;
        case 31:
          switch (i) {
            case 2:
            case 3:
            case 4:
              let e = [];
              let t,
                r = 0;
              while ((t = ht()) != Ke) {
                e[r++] = t;
              }
              return i == 4 ? e : i == 3 ? e.join("") : Z.concat(e);
            case 5:
              let n;
              if (Xe.mapsAsObjects) {
                let e = {};
                while ((n = At()) != Ke) e[n] = ht();
                return e;
              } else {
                if (ot) {
                  Xe.mapsAsObjects = true;
                  ot = false;
                }
                let e = new Map();
                while ((n = ht()) != Ke) e.set(n, ht());
                return e;
              }
            case 7:
              return Ke;
            default:
              throw new Error("Invalid major type for indefinite length " + i);
          }
        default:
          throw new Error("Unknown token " + r);
      }
    }
    switch (i) {
      case 0:
        return r;
      case 1:
        return ~r;
      case 2:
        return wt(r);
      case 3:
        if (nt >= Qe) {
          return tt.slice(Qe - rt, (Qe += r) - rt);
        }
        if (nt == 0 && We < 140 && r < 32) {
          let e = r < 16 ? bt(r) : gt(r);
          if (e != null) return e;
        }
        return vt(r);
      case 4:
        let t = new Array(r);
        for (let e = 0; e < r; e++) {
          t[e] = ht();
        }
        return t;
      case 5:
        if (Xe.mapsAsObjects) {
          let t = {};
          for (let e = 0; e < r; e++) {
            t[At()] = ht();
          }
          return t;
        } else {
          if (ot) {
            Xe.mapsAsObjects = true;
            ot = false;
          }
          let t = new Map();
          for (let e = 0; e < r; e++) {
            t.set(ht(), ht());
          }
          return t;
        }
      case 6:
        if (r >> 8 == Ze) {
          let t = et[r & 255];
          if (t) {
            if (!t.read) t.read = _t(t);
            return t.read();
          } else if (Xe.getStructures) {
            let e = Bt(() => {
              He = null;
              return Xe.getStructures();
            });
            if (et === true) Xe.structures = et = e;
            else et.splice.apply(et, [0, e.length].concat(e));
            t = et[r & 255];
            if (t) {
              if (!t.read) t.read = _t(t);
              return t.read();
            } else return r;
          } else return r;
        } else {
          let e = ut[r];
          if (e) {
            if (e.handlesRead) return e(ht);
            else return e(ht());
          } else return new Ft(ht());
        }
      case 7:
        switch (r) {
          case 20:
            return false;
          case 21:
            return true;
          case 22:
            return null;
          case 23:
            return;
          case 31:
          default:
            throw new Error("Unknown token " + r);
        }
      default:
        if (isNaN(r)) {
          let e = new Error("Unexpected end of CBOR data");
          e.incomplete = true;
          throw e;
        }
        throw new Error("Unknown CBOR token " + r);
    }
  }
  const pt = /^[a-zA-Z_$][a-zA-Z\d_$]*$/;
  function _t(n) {
    let e = n.length;
    function t() {
      if (t.count++ > 2) {
        this.read = new Function(
          "a",
          "r",
          "return function(){a();return {" +
            n
              .map((e) =>
                pt.test(e) ? e + ":r()" : "[" + JSON.stringify(e) + "]:r()"
              )
              .join(",") +
            "}}"
        )(dt, ht);
        return this.read();
      }
      dt();
      let r = {};
      for (let t = 0; t < e; t++) {
        let e = n[t];
        r[e] = ht();
      }
      return r;
    }
    t.count = 0;
    return t;
  }
  function dt(e) {
    let t = He[Qe++];
    t = t & 31;
    if (t > 23) {
      switch (t) {
        case 24:
          Qe++;
          break;
        case 25:
          Qe += 2;
          break;
        case 26:
          Qe += 4;
      }
    }
  }
  let vt = mt;
  function mt(e) {
    let t;
    if (e < 16) {
      if ((t = bt(e))) return t;
    }
    if (e > 64 && Ge) return Ge.decode(He.subarray(Qe, (Qe += e)));
    const r = Qe + e;
    const n = [];
    t = "";
    while (Qe < r) {
      const i = He[Qe++];
      if ((i & 128) === 0) {
        n.push(i);
      } else if ((i & 224) === 192) {
        const u = He[Qe++] & 63;
        n.push(((i & 31) << 6) | u);
      } else if ((i & 240) === 224) {
        const u = He[Qe++] & 63;
        const a = He[Qe++] & 63;
        n.push(((i & 31) << 12) | (u << 6) | a);
      } else if ((i & 248) === 240) {
        const u = He[Qe++] & 63;
        const a = He[Qe++] & 63;
        const o = He[Qe++] & 63;
        let e = ((i & 7) << 18) | (u << 12) | (a << 6) | o;
        if (e > 65535) {
          e -= 65536;
          n.push(((e >>> 10) & 1023) | 55296);
          e = 56320 | (e & 1023);
        }
        n.push(e);
      } else {
        n.push(i);
      }
      if (n.length >= 4096) {
        t += yt.apply(String, n);
        n.length = 0;
      }
    }
    if (n.length > 0) {
      t += yt.apply(String, n);
    }
    return t;
  }
  let yt = String.fromCharCode;
  function gt(t) {
    let r = Qe;
    let n = new Array(t);
    for (let e = 0; e < t; e++) {
      const i = He[Qe++];
      if ((i & 128) > 0) {
        Qe = r;
        return;
      }
      n[e] = i;
    }
    return yt.apply(String, n);
  }
  function bt(d) {
    if (d < 4) {
      if (d < 2) {
        if (d === 0) return "";
        else {
          let e = He[Qe++];
          if ((e & 128) > 1) {
            Qe -= 1;
            return;
          }
          return yt(e);
        }
      } else {
        let e = He[Qe++];
        let t = He[Qe++];
        if ((e & 128) > 0 || (t & 128) > 0) {
          Qe -= 2;
          return;
        }
        if (d < 3) return yt(e, t);
        let r = He[Qe++];
        if ((r & 128) > 0) {
          Qe -= 3;
          return;
        }
        return yt(e, t, r);
      }
    } else {
      let l = He[Qe++];
      let h = He[Qe++];
      let p = He[Qe++];
      let _ = He[Qe++];
      if ((l & 128) > 0 || (h & 128) > 0 || (p & 128) > 0 || (_ & 128) > 0) {
        Qe -= 4;
        return;
      }
      if (d < 6) {
        if (d === 4) return yt(l, h, p, _);
        else {
          let e = He[Qe++];
          if ((e & 128) > 0) {
            Qe -= 5;
            return;
          }
          return yt(l, h, p, _, e);
        }
      } else if (d < 8) {
        let e = He[Qe++];
        let t = He[Qe++];
        if ((e & 128) > 0 || (t & 128) > 0) {
          Qe -= 6;
          return;
        }
        if (d < 7) return yt(l, h, p, _, e, t);
        let r = He[Qe++];
        if ((r & 128) > 0) {
          Qe -= 7;
          return;
        }
        return yt(l, h, p, _, e, t, r);
      } else {
        let o = He[Qe++];
        let s = He[Qe++];
        let c = He[Qe++];
        let f = He[Qe++];
        if ((o & 128) > 0 || (s & 128) > 0 || (c & 128) > 0 || (f & 128) > 0) {
          Qe -= 8;
          return;
        }
        if (d < 10) {
          if (d === 8) return yt(l, h, p, _, o, s, c, f);
          else {
            let e = He[Qe++];
            if ((e & 128) > 0) {
              Qe -= 9;
              return;
            }
            return yt(l, h, p, _, o, s, c, f, e);
          }
        } else if (d < 12) {
          let e = He[Qe++];
          let t = He[Qe++];
          if ((e & 128) > 0 || (t & 128) > 0) {
            Qe -= 10;
            return;
          }
          if (d < 11) return yt(l, h, p, _, o, s, c, f, e, t);
          let r = He[Qe++];
          if ((r & 128) > 0) {
            Qe -= 11;
            return;
          }
          return yt(l, h, p, _, o, s, c, f, e, t, r);
        } else {
          let n = He[Qe++];
          let i = He[Qe++];
          let u = He[Qe++];
          let a = He[Qe++];
          if (
            (n & 128) > 0 ||
            (i & 128) > 0 ||
            (u & 128) > 0 ||
            (a & 128) > 0
          ) {
            Qe -= 12;
            return;
          }
          if (d < 14) {
            if (d === 12) return yt(l, h, p, _, o, s, c, f, n, i, u, a);
            else {
              let e = He[Qe++];
              if ((e & 128) > 0) {
                Qe -= 13;
                return;
              }
              return yt(l, h, p, _, o, s, c, f, n, i, u, a, e);
            }
          } else {
            let e = He[Qe++];
            let t = He[Qe++];
            if ((e & 128) > 0 || (t & 128) > 0) {
              Qe -= 14;
              return;
            }
            if (d < 15) return yt(l, h, p, _, o, s, c, f, n, i, u, a, e, t);
            let r = He[Qe++];
            if ((r & 128) > 0) {
              Qe -= 15;
              return;
            }
            return yt(l, h, p, _, o, s, c, f, n, i, u, a, e, t, r);
          }
        }
      }
    }
  }
  function wt(e) {
    return Xe.copyBuffers
      ? Uint8Array.prototype.slice.call(He, Qe, (Qe += e))
      : He.subarray(Qe, (Qe += e));
  }
  function Dt() {
    let e = He[Qe++];
    let t = He[Qe++];
    let r = (e << 8) + t;
    let n = (r >> 10) & 31;
    let i = r & 1023;
    let u;
    if (n == 0) u = Math.exp(i, -24);
    else if (n != 31) u = Math.exp(i + 1024, n - 25);
    else u = i == 0 ? Infinity : NaN;
    return r & 32768 ? -u : u;
  }
  let Et = new Array(4096);
  function At() {
    let e = He[Qe++];
    if (e >= 96 && e < 120) {
      e = e - 96;
      if (nt >= Qe) return tt.slice(Qe - rt, (Qe += e) - rt);
      else if (!(nt == 0 && We < 180)) return vt(e);
    } else {
      Qe--;
      return ht();
    }
    let t = ((e << 5) ^ (e > 1 ? at.getUint16(Qe) : e > 0 ? He[Qe] : 0)) & 4095;
    let r = Et[t];
    let n = Qe;
    let i = Qe + e - 3;
    let u;
    let a = 0;
    if (r && r.bytes == e) {
      while (n < i) {
        u = at.getUint32(n);
        if (u != r[a++]) {
          n = 1879048192;
          break;
        }
        n += 4;
      }
      i += 3;
      while (n < i) {
        u = He[n++];
        if (u != r[a++]) {
          n = 1879048192;
          break;
        }
      }
      if (n === i) {
        Qe = n;
        return r.string;
      }
      i -= 3;
      n = Qe;
    }
    r = [];
    Et[t] = r;
    r.bytes = e;
    while (n < i) {
      u = at.getUint32(n);
      r.push(u);
      n += 4;
    }
    i += 3;
    while (n < i) {
      u = He[n++];
      r.push(u);
    }
    let o = e < 16 ? bt(e) : gt(e);
    if (o != null) return (r.string = o);
    return (r.string = vt(e));
  }
  class Ft {
    constructor(e) {
      this.value = e;
    }
  }
  let xt = typeof window == "object" ? window : I;
  ut[0] = (e) => {
    return new Date(e);
  };
  ut[1] = (e) => {
    return new Date(e * 1e3);
  };
  ut[2] = (e) => {
    return new DataView(e.buffer, e.byteOffset, e.byteLength).getBigUint64(0);
  };
  ut[3] = (e) => {
    return (
      BigInt(-1) -
      new DataView(e.buffer, e.byteOffset, e.byteLength).getBigUint64(0)
    );
  };
  const Ct = () => {
    let r = ht();
    let n = r[0];
    let e = r[1];
    et[e & 255] = n;
    n.read = _t(n);
    let i = {};
    for (let t = 2, e = r.length; t < e; t++) {
      let e = n[t - 2];
      i[e] = r[t];
    }
    return i;
  };
  Ct.handlesRead = true;
  ut[Ze] = Ct;
  ut[27] = (e) => {
    return (xt[e[0]] || Error)(e[1], e[2]);
  };
  ut[40009] = (e) => {
    if (!it) it = new Map();
    let t = He[Qe];
    let r;
    if (t >> 5 == 4) r = [];
    else r = {};
    let n = { target: r };
    it.set(e, n);
    let i = ht();
    if (n.used) return Object.assign(r, i);
    n.target = i;
    return i;
  };
  ut[40010] = (e) => {
    let t = it.get(e);
    t.used = true;
    return t.target;
  };
  ut[258] = (e) => new Set(e);
  (ut[259] = (e) => {
    if (Xe.mapsAsObjects) {
      Xe.mapsAsObjects = false;
      ot = true;
    }
    return e();
  }).handlesRead = true;
  const kt = [
    "Uint8",
    "Uint8Clamped",
    "Uint16",
    "Uint32",
    "BigUint64",
    "Int8",
    "Int16",
    "Int32",
    "BigInt64",
    "Float32",
    "Float64",
  ].map((e) => e + "Array");
  const Ot = [64, 68, 69, 70, 71, 72, 77, 78, 79, 81, 82];
  for (let e = 0; e < kt.length; e++) {
    St(kt[e], Ot[e]);
  }
  function St(t, e) {
    ut[e] = (e) => {
      if (!t)
        throw new Error("Could not find typed array for code " + typeCode);
      return new xt[t](Uint8Array.prototype.slice.call(e, 0).buffer);
    };
  }
  function Bt(e) {
    let t = We;
    let r = Qe;
    let n = rt;
    let i = nt;
    let u = tt;
    let a = it;
    let o = new Uint8Array(He.slice(0, We));
    let s = et;
    let c = Xe;
    let f = ct;
    let l = e();
    We = t;
    Qe = r;
    rt = n;
    nt = i;
    tt = u;
    it = a;
    He = o;
    ct = f;
    et = s;
    Xe = c;
    at = new DataView(He.buffer, He.byteOffset, He.byteLength);
    return l;
  }
  function jt() {
    He = null;
    it = null;
    et = null;
  }
  function It(e) {
    ut[e.tag] = e.decode;
  }
  let Pt = new Array(147);
  for (let e = 0; e < 256; e++) {
    Pt[e] = +("1e" + Math.floor(45.15 - e * 0.30103));
  }
  let Nt = new ft({ useRecords: false });
  Nt.decode;
  Nt.decodeMultiple;
  let Rt;
  try {
    Rt = new TextEncoder();
  } catch (e) {}
  let Tt, Lt;
  const Ut = typeof Z !== "undefined";
  const qt = Ut ? Z.allocUnsafeSlow : Uint8Array;
  const Mt = Ut ? Z : Uint8Array;
  const Yt = 105;
  const $t = 256;
  const zt = Ut ? 4294967296 : 2144337920;
  let Vt;
  let Jt;
  let Gt = 0;
  let Ht;
  const Wt = Symbol("record-id");
  class Qt extends ft {
    constructor(e) {
      super(e);
      this.offset = 0;
      let i;
      let o;
      let s;
      let c;
      let r;
      let n = 0;
      let t = Mt.prototype.utf8Write
        ? function (e, t, r) {
            return Vt.utf8Write(e, t, r);
          }
        : Rt && Rt.encodeInto
        ? function (e, t) {
            return Rt.encodeInto(e, Vt.subarray(t)).written;
          }
        : false;
      let u = this;
      let f = 64;
      let a = e && e.sequential;
      if (a) {
        f = 0;
        this.structures = [];
      }
      let l = [];
      let h = 0;
      let p = 0;
      if (this.structures && this.structures.length > f) {
        throw new Error("Too many shared structures");
      }
      this.encode = function (e) {
        if (!Vt) {
          Vt = new qt(8192);
          Jt = new DataView(Vt.buffer, 0, 8192);
          Gt = 0;
        }
        Ht = Vt.length - 10;
        if (Ht - Gt < 2048) {
          Vt = new qt(Vt.length);
          Jt = new DataView(Vt.buffer, 0, Vt.length);
          Ht = Vt.length - 10;
          Gt = 0;
        }
        i = Gt;
        r = u.structuredClone ? new Map() : null;
        o = u.structures;
        if (o) {
          if (o.uninitialized) u.structures = o = u.getStructures();
          let t = o.length;
          if (t > f && !a) t = f;
          if (!o.transitions) {
            o.transitions = Object.create(null);
            for (let e = 0; e < t; e++) {
              let r = o[e];
              if (!r) continue;
              let n,
                i = o.transitions;
              for (let t = 0, e = r.length; t < e; t++) {
                let e = r[t];
                n = i[e];
                if (!n) {
                  n = i[e] = Object.create(null);
                }
                i = n;
              }
              i[Wt] = e;
            }
            n = o.length;
          }
          if (!a) o.nextId = t;
        }
        if (s) s = false;
        c = o || [];
        try {
          _(e);
          u.offset = Gt;
          if (r && r.idsToInsert) {
            Gt += r.idsToInsert.length * 8;
            if (Gt > Ht) v(Gt);
            u.offset = Gt;
            let e = er(Vt.subarray(i, Gt), r.idsToInsert);
            r = null;
            return e;
          }
          return Vt.subarray(i, Gt);
        } finally {
          if (o) {
            if (p < 10) p++;
            if (h > 1e4) {
              o.transitions = null;
              p = 0;
              h = 0;
              if (l.length > 0) l = [];
            } else if (l.length > 0 && !a) {
              for (let e = 0, t = l.length; e < t; e++) {
                l[e][Wt] = undefined;
              }
              l = [];
            }
            if (s && u.saveStructures) {
              if (u.structures.length > f) {
                u.structures = u.structures.slice(0, f);
              }
              if (u.saveStructures(u.structures, n) === false) {
                u.structures = u.getStructures() || [];
                return u.encode(e);
              }
              n = u.structures.length;
            }
          }
        }
      };
      const _ = (a) => {
        if (Gt > Ht) Vt = v(Gt);
        var e = typeof a;
        var o;
        if (e === "string") {
          let i = a.length;
          let u;
          if (i < 32) {
            u = 1;
          } else if (i < 256) {
            u = 2;
          } else if (i < 65536) {
            u = 3;
          } else {
            u = 5;
          }
          let e = i * 3;
          if (Gt + e > Ht) Vt = v(Gt + e);
          if (i < 64 || !t) {
            let e,
              t,
              r,
              n = Gt + u;
            for (e = 0; e < i; e++) {
              t = a.charCodeAt(e);
              if (t < 128) {
                Vt[n++] = t;
              } else if (t < 2048) {
                Vt[n++] = (t >> 6) | 192;
                Vt[n++] = (t & 63) | 128;
              } else if (
                (t & 64512) === 55296 &&
                ((r = a.charCodeAt(e + 1)) & 64512) === 56320
              ) {
                t = 65536 + ((t & 1023) << 10) + (r & 1023);
                e++;
                Vt[n++] = (t >> 18) | 240;
                Vt[n++] = ((t >> 12) & 63) | 128;
                Vt[n++] = ((t >> 6) & 63) | 128;
                Vt[n++] = (t & 63) | 128;
              } else {
                Vt[n++] = (t >> 12) | 224;
                Vt[n++] = ((t >> 6) & 63) | 128;
                Vt[n++] = (t & 63) | 128;
              }
            }
            o = n - Gt - u;
          } else {
            o = t(a, Gt + u, e);
          }
          if (o < 24) {
            Vt[Gt++] = 96 | o;
          } else if (o < 256) {
            if (u < 2) {
              Vt.copyWithin(Gt + 2, Gt + 1, Gt + 1 + o);
            }
            Vt[Gt++] = 120;
            Vt[Gt++] = o;
          } else if (o < 65536) {
            if (u < 3) {
              Vt.copyWithin(Gt + 3, Gt + 2, Gt + 2 + o);
            }
            Vt[Gt++] = 121;
            Vt[Gt++] = o >> 8;
            Vt[Gt++] = o & 255;
          } else {
            if (u < 5) {
              Vt.copyWithin(Gt + 5, Gt + 3, Gt + 3 + o);
            }
            Vt[Gt++] = 122;
            Jt.setUint32(Gt, o);
            Gt += 4;
          }
          Gt += o;
        } else if (e === "number") {
          if (a >>> 0 === a) {
            if (a < 24) {
              Vt[Gt++] = a;
            } else if (a < 256) {
              Vt[Gt++] = 24;
              Vt[Gt++] = a;
            } else if (a < 65536) {
              Vt[Gt++] = 25;
              Vt[Gt++] = a >> 8;
              Vt[Gt++] = a & 255;
            } else {
              Vt[Gt++] = 26;
              Jt.setUint32(Gt, a);
              Gt += 4;
            }
          } else if (a >> 0 === a) {
            if (a >= -24) {
              Vt[Gt++] = 31 - a;
            } else if (a >= -256) {
              Vt[Gt++] = 56;
              Vt[Gt++] = ~a;
            } else if (a >= -65536) {
              Vt[Gt++] = 57;
              Jt.setUint16(Gt, ~a);
              Gt += 2;
            } else {
              Vt[Gt++] = 58;
              Jt.setUint32(Gt, ~a);
              Gt += 4;
            }
          } else {
            let t;
            if (
              (t = this.useFloat32) > 0 &&
              a < 4294967296 &&
              a >= -2147483648
            ) {
              Vt[Gt++] = 250;
              Jt.setFloat32(Gt, a);
              let e;
              if (
                t < 4 ||
                (e = a * Pt[((Vt[Gt] & 127) << 1) | (Vt[Gt + 1] >> 7)]) >> 0 ===
                  e
              ) {
                Gt += 4;
                return;
              } else Gt--;
            }
            Vt[Gt++] = 251;
            Jt.setFloat64(Gt, a);
            Gt += 8;
          }
        } else if (e === "object") {
          if (!a) Vt[Gt++] = 246;
          else {
            if (r) {
              let t = r.get(a);
              if (t) {
                if (!t.id) {
                  let e = r.idsToInsert || (r.idsToInsert = []);
                  t.id = e.push(t);
                }
                Vt[Gt++] = 217;
                Vt[Gt++] = 40010 >> 8;
                Vt[Gt++] = 40010 & 255;
                Vt[Gt++] = 26;
                Jt.setUint32(Gt, t.id);
                Gt += 4;
                return;
              } else r.set(a, { offset: Gt - i });
            }
            let e = a.constructor;
            if (e === Object) {
              d(a, true);
            } else if (e === Array) {
              o = a.length;
              if (o < 24) {
                Vt[Gt++] = 128 | o;
              } else {
                Zt(o);
              }
              for (let e = 0; e < o; e++) {
                _(a[e]);
              }
            } else if (e === Map) {
              if (
                this.mapsAsObjects
                  ? this.useTag259ForMaps !== false
                  : this.useTag259ForMaps
              ) {
                Vt[Gt++] = 217;
                Vt[Gt++] = 1;
                Vt[Gt++] = 3;
              }
              o = a.size;
              if (o < 24) {
                Vt[Gt++] = 160 | o;
              } else if (o < 256) {
                Vt[Gt++] = 184;
                Vt[Gt++] = o;
              } else if (o < 65536) {
                Vt[Gt++] = 185;
                Vt[Gt++] = o >> 8;
                Vt[Gt++] = o & 255;
              } else {
                Vt[Gt++] = 186;
                Jt.setUint32(Gt, o);
                Gt += 4;
              }
              for (let [e, t] of a) {
                _(e);
                _(t);
              }
            } else {
              for (let r = 0, e = Tt.length; r < e; r++) {
                let e = Lt[r];
                if (a instanceof e) {
                  let e = Tt[r];
                  let t = e.tag;
                  if (t < 24) {
                    Vt[Gt++] = 192 | t;
                  } else if (t < 256) {
                    Vt[Gt++] = 216;
                    Vt[Gt++] = t;
                  } else if (t < 65536) {
                    Vt[Gt++] = 217;
                    Vt[Gt++] = t >> 8;
                    Vt[Gt++] = t & 255;
                  } else if (t > -1) {
                    Vt[Gt++] = 218;
                    Jt.setUint32(Gt, t);
                    Gt += 4;
                  }
                  e.encode.call(this, a, _, v);
                  return;
                }
              }
              if (a[Symbol.iterator]) {
                Vt[Gt++] = 159;
                for (let e of a) {
                  _(e);
                }
                Vt[Gt++] = 255;
                return;
              }
              d(a, !a.hasOwnProperty);
            }
          }
        } else if (e === "boolean") {
          Vt[Gt++] = a ? 245 : 244;
        } else if (e === "bigint") {
          if (a < BigInt(1) << BigInt(64) && a >= 0) {
            Vt[Gt++] = 27;
            Jt.setBigUint64(Gt, a);
          } else if (a > -(BigInt(1) << BigInt(64)) && a < 0) {
            Vt[Gt++] = 59;
            Jt.setBigUint64(Gt, -a - BigInt(1));
          } else {
            if (this.largeBigIntToFloat) {
              Vt[Gt++] = 251;
              Jt.setFloat64(Gt, Number(a));
            } else {
              throw new RangeError(
                a +
                  " was too large to fit in CBOR 64-bit integer format, set largeBigIntToFloat to convert to float-64"
              );
            }
          }
          Gt += 8;
        } else if (e === "undefined") {
          Vt[Gt++] = 247;
        } else {
          throw new Error("Unknown type " + e);
        }
      };
      const d =
        this.useRecords === false
          ? this.variableMapSize
            ? (t) => {
                let r = Object.keys(t);
                let n = r.length;
                if (n < 24) {
                  Vt[Gt++] = 160 | n;
                } else if (n < 256) {
                  Vt[Gt++] = 184;
                  Vt[Gt++] = n;
                } else if (n < 65536) {
                  Vt[Gt++] = 185;
                  Vt[Gt++] = n >> 8;
                  Vt[Gt++] = n & 255;
                } else {
                  Vt[Gt++] = 186;
                  Jt.setUint32(Gt, n);
                  Gt += 4;
                }
                let i;
                for (let e = 0; e < n; e++) {
                  _((i = r[e]));
                  _(t[i]);
                }
              }
            : (t, r) => {
                Vt[Gt++] = 185;
                let e = Gt - i;
                Gt += 2;
                let n = 0;
                for (let e in t) {
                  if (r || t.hasOwnProperty(e)) {
                    _(e);
                    _(t[e]);
                    n++;
                  }
                }
                Vt[e++ + i] = n >> 8;
                Vt[e + i] = n & 255;
              }
          : (t) => {
              let r = Object.keys(t);
              let n,
                i = c.transitions || (c.transitions = Object.create(null));
              let u = 0;
              let a = r.length;
              for (let t = 0; t < a; t++) {
                let e = r[t];
                n = i[e];
                if (!n) {
                  n = i[e] = Object.create(null);
                  u++;
                }
                i = n;
              }
              let e = i[Wt];
              if (e !== undefined) {
                Vt[Gt++] = 217;
                Vt[Gt++] = Yt;
                Vt[Gt++] = e;
              } else {
                e = c.nextId++;
                if (!e) {
                  e = 0;
                  c.nextId = 1;
                }
                if (e >= $t) {
                  c.nextId = (e = f) + 1;
                }
                i[Wt] = e;
                c[e] = r;
                if (o && o.length <= f) {
                  Vt[Gt++] = 217;
                  Vt[Gt++] = Yt;
                  Vt[Gt++] = e;
                  s = true;
                } else {
                  Vt[Gt++] = 216;
                  Vt[Gt++] = Yt;
                  if (u) h += p * u;
                  if (l.length >= $t - f) l.shift()[Wt] = undefined;
                  l.push(i);
                  if (a < 22) Vt[Gt++] = 130 + a;
                  else Zt(a + 2);
                  _(r);
                  Vt[Gt++] = 25;
                  Vt[Gt++] = Yt;
                  Vt[Gt++] = e;
                  for (let e = 0; e < a; e++) _(t[r[e]]);
                  return;
                }
              }
              if (a < 24) {
                Vt[Gt++] = 128 | a;
              } else {
                Zt(a);
              }
              for (let e = 0; e < a; e++) _(t[r[e]]);
            };
      const v = (e) => {
        let t;
        if (e > 16777216) {
          if (e - i > zt)
            throw new Error(
              "Encoded buffer would be larger than maximum buffer size"
            );
          t = Math.min(
            zt,
            Math.round(
              Math.max((e - i) * (e > 67108864 ? 1.25 : 2), 16777216) / 4096
            ) * 4096
          );
        } else t = ((Math.max((e - i) << 2, Vt.length - 1) >> 12) + 1) << 12;
        let r = new qt(t);
        Jt = new DataView(r.buffer, 0, t);
        if (Vt.copy) Vt.copy(r, 0, i, e);
        else r.set(Vt.slice(i, e));
        Gt -= i;
        i = 0;
        Ht = r.length - 10;
        return (Vt = r);
      };
    }
    useBuffer(e) {
      Vt = e;
      Jt = new DataView(Vt.buffer, Vt.byteOffset, Vt.byteLength);
      Gt = 0;
    }
  }
  function Zt(e) {
    if (e < 256) {
      Vt[Gt++] = 152;
      Vt[Gt++] = e;
    } else if (e < 65536) {
      Vt[Gt++] = 153;
      Vt[Gt++] = e >> 8;
      Vt[Gt++] = e & 255;
    } else {
      Vt[Gt++] = 154;
      Jt.setUint32(Gt, e);
      Gt += 4;
    }
  }
  Lt = [
    Date,
    Set,
    Error,
    RegExp,
    ArrayBuffer,
    Mt,
    Uint8Array,
    Uint8ClampedArray,
    Uint16Array,
    Uint32Array,
    BigUint64Array,
    Int8Array,
    Int16Array,
    Int32Array,
    BigInt64Array,
    Float32Array,
    Float64Array,
  ];
  Tt = [
    {
      tag: 1,
      encode(e, t) {
        let r = e.getTime() / 1e3;
        if (
          (this.useTimestamp32 || e.getMilliseconds() === 0) &&
          r >= 0 &&
          r < 4294967296
        ) {
          Vt[Gt++] = 26;
          Jt.setUint32(Gt, r);
          Gt += 4;
        } else {
          Vt[Gt++] = 251;
          Jt.setFloat64(Gt, r);
          Gt += 8;
        }
      },
    },
    {
      tag: 258,
      encode(e, t) {
        let r = Array.from(e);
        t(r);
      },
    },
    {
      tag: 27,
      encode(e, t) {
        t([e.name, e.message]);
      },
    },
    {
      tag: 27,
      encode(e, t) {
        t(["RegExp", e.source, e.flags]);
      },
    },
    {
      encode(e, t, r) {
        Xt(e, r);
      },
    },
    {
      encode(e, t, r) {
        Xt(e, r);
      },
    },
    Kt(64),
    Kt(68),
    Kt(69),
    Kt(70),
    Kt(71),
    Kt(72),
    Kt(77),
    Kt(78),
    Kt(79),
    Kt(81),
    Kt(82),
  ];
  function Kt(e) {
    return {
      tag: e,
      encode: function e(t, r) {
        let n = t.byteLength;
        let i = t.byteOffset || 0;
        let u = t.buffer || t;
        r(Ut ? Z.from(u, i, n) : new Uint8Array(u, i, n));
      },
    };
  }
  function Xt(e, t) {
    let r = e.byteLength;
    if (r < 24) {
      Vt[Gt++] = 64 + r;
    } else if (r < 256) {
      Vt[Gt++] = 88;
      Vt[Gt++] = r;
    } else if (r < 65536) {
      Vt[Gt++] = 89;
      Vt[Gt++] = r >> 8;
      Vt[Gt++] = r & 255;
    } else {
      Vt[Gt++] = 90;
      Jt.setUint32(Gt, r);
      Gt += 4;
    }
    if (Gt + r >= Vt.length) {
      t(Gt + r);
    }
    Vt.set(e, Gt);
    Gt += r;
  }
  function er(n, e) {
    let i;
    let u = e.length * 8;
    let a = n.length - u;
    e.sort((e, t) => (e.offset > t.offset ? 1 : -1));
    while ((i = e.pop())) {
      let e = i.offset;
      let t = i.id;
      n.copyWithin(e + u, e, a);
      u -= 8;
      let r = e + u;
      n[r++] = 217;
      n[r++] = 40009 >> 8;
      n[r++] = 40009 & 255;
      n[r++] = 26;
      n[r++] = t >> 24;
      n[r++] = (t >> 16) & 255;
      n[r++] = (t >> 8) & 255;
      n[r++] = t & 255;
      a = e;
    }
    return n;
  }
  function tr(e) {
    if (e.Class) {
      if (!e.encode) throw new Error("Extension has no encode function");
      Lt.unshift(e.Class);
      Tt.unshift(e);
    }
    It(e);
  }
  let rr = new Qt({ useRecords: false });
  rr.encode;
  var nr = {};
  /**@license
   *
   * No Dependency fast and small LZJB Compression for Browser and Node
   *
   * Copyright (c) 2021 Jakub T. Jankiewicz https://jcubic.pl/me
   * Released under BSD-3-Clause License
   *
   * build: Wed, 27 Oct 2021 10:43:10 GMT
   */ Object.defineProperty(nr, "__esModule", { value: true });
  const ir = 8,
    ur = 6,
    ar = 3,
    or = (1 << ur) + (ar - 1),
    sr = (1 << (16 - ur)) - 1,
    cr = 256;
  function fr(e, t) {
    var r = 0,
      n = 0,
      i = 0,
      u = 0,
      a = 0,
      o = 1 << (ir - 1),
      s = 0,
      c = 0,
      f = 0,
      l = new Int32Array(cr),
      h = 0;
    for (h = 0; h < cr; h++) {
      l[h] = -858993460;
    }
    r = e.length;
    while (n < r) {
      if ((o <<= 1) == 1 << ir) {
        o = 1;
        a = i;
        t[i++] = 0;
      }
      if (n > r - or) {
        t[i++] = e[n++];
        continue;
      }
      f = ((e[n] + 13) ^ (e[n + 1] - 13) ^ e[n + 2]) & (cr - 1);
      c = (n - l[f]) & sr;
      l[f] = n;
      u = n - c;
      if (
        u >= 0 &&
        u != n &&
        e[n] == e[u] &&
        e[n + 1] == e[u + 1] &&
        e[n + 2] == e[u + 2]
      ) {
        t[a] |= o;
        for (s = ar; s < or; s++) if (e[n + s] != e[u + s]) break;
        t[i++] = ((s - ar) << (ir - ur)) | (c >> ir);
        t[i++] = c;
        n += s;
      } else {
        t[i++] = e[n++];
      }
    }
    console.assert(e.length >= n);
    return i;
  }
  function lr(e, t, r) {
    t = t | 0;
    var n = 0,
      i = 0,
      u = 0,
      a = 0,
      o = 1 << ((ir - 1) | 0),
      s = 0,
      c = 0;
    while (n < t) {
      if ((o <<= 1) === 1 << ir) {
        o = 1;
        a = e[n];
        n = (n + 1) | 0;
      }
      if (a & o) {
        s = ((e[n] >> ((ir - ur) | 0)) + ar) | 0;
        c = ((e[n] << ir) | e[(n + 1) | 0]) & sr;
        n = (n + 2) | 0;
        u = (i - c) | 0;
        {
          while (s > 4) {
            r[i] = r[u];
            i = (i + 1) | 0;
            u = (u + 1) | 0;
            r[i] = r[u];
            i = (i + 1) | 0;
            u = (u + 1) | 0;
            r[i] = r[u];
            i = (i + 1) | 0;
            u = (u + 1) | 0;
            r[i] = r[u];
            i = (i + 1) | 0;
            u = (u + 1) | 0;
            s = (s - 4) | 0;
          }
          while (s > 0) {
            r[i] = r[u];
            i = (i + 1) | 0;
            u = (u + 1) | 0;
            s = (s - 1) | 0;
          }
        }
      } else {
        r[i] = e[n];
        i = (i + 1) | 0;
        n = (n + 1) | 0;
      }
    }
    return i;
  }
  function hr() {
    const e = new TextEncoder("utf-8");
    return e.encode(pr);
  }
  const pr = "@lzjb";
  const _r = hr();
  function dr(...e) {
    if (e.length > 1) {
      const r = e.reduce((e, t) => e + t.length, 0);
      const n = new Uint8Array(r);
      let t = 0;
      e.forEach((e) => {
        n.set(e, t);
        t += e.length;
      });
      return n;
    } else if (e.length) {
      return e[0];
    }
  }
  function vr(t) {
    const e = Math.ceil(Math.log2(t) / 8);
    const r = new Uint8Array(e);
    for (let e = 0; e < r.length; e++) {
      const n = t & 255;
      r[e] = n;
      t = (t - n) / 256;
    }
    return r;
  }
  function mr(t) {
    let r = 0;
    for (let e = t.length - 1; e >= 0; e--) {
      r = r * 256 + t[e];
    }
    return r;
  }
  function yr(e, { magic: t = true } = {}) {
    const r = new Uint8Array(Math.max((e.length * 1.5) | 0, 16 * 1024));
    const n = fr(e, r);
    const i = vr(e.length);
    const u = [Uint8Array.of(i.length), i, r.slice(0, n)];
    if (t) {
      u.unshift(_r);
    }
    return dr(...u);
  }
  function gr(t, { magic: e = true } = {}) {
    if (e) {
      const e = new TextDecoder("utf-8");
      const s = e.decode(t.slice(0, _r.length));
      if (s !== pr) {
        throw new Error("Invalid magic value");
      }
    }
    const r = e ? _r.length : 0;
    const n = t[r];
    const i = r + 1;
    const u = r + n + 1;
    const a = mr(t.slice(i, u));
    t = t.slice(u);
    const o = new Uint8Array(a);
    lr(t, t.length, o);
    return o;
  }
  var br = (nr.pack = yr);
  var wr = (nr.unpack = gr);
  function Dr(s, c) {
    return (
      (c = c || {}),
      new Promise(function (e, t) {
        var r = new XMLHttpRequest(),
          n = [],
          i = [],
          u = {},
          a = function () {
            return {
              ok: 2 == ((r.status / 100) | 0),
              statusText: r.statusText,
              status: r.status,
              url: r.responseURL,
              text: function () {
                return Promise.resolve(r.responseText);
              },
              json: function () {
                return Promise.resolve(r.responseText).then(JSON.parse);
              },
              blob: function () {
                return Promise.resolve(new Blob([r.response]));
              },
              clone: a,
              headers: {
                keys: function () {
                  return n;
                },
                entries: function () {
                  return i;
                },
                get: function (e) {
                  return u[e.toLowerCase()];
                },
                has: function (e) {
                  return e.toLowerCase() in u;
                },
              },
            };
          };
        for (var o in (r.open(c.method || "get", s, !0),
        (r.onload = function () {
          r
            .getAllResponseHeaders()
            .replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function (e, t, r) {
              n.push((t = t.toLowerCase())),
                i.push([t, r]),
                (u[t] = u[t] ? u[t] + "," + r : r);
            }),
            e(a());
        }),
        (r.onerror = t),
        (r.withCredentials = "include" == c.credentials),
        c.headers))
          r.setRequestHeader(o, c.headers[o]);
        r.send(c.body || null);
      })
    );
  }
  /**@license
   *   __ __                          __
   *  / / \ \       _    _  ___  ___  \ \
   * | |   \ \     | |  | || . \/ __>  | |
   * | |    > \    | |_ | ||  _/\__ \  | |
   * | |   / ^ \   |___||_||_|  <___/  | |
   *  \_\ /_/ \_\                     /_/
   *
   * <https://lips.js.org>
   *
   * LIPS is Pretty Simple - Scheme based Powerful LISP in JavaScript
   *
   * Copyright (c) 2018-2021 Jakub T. Jankiewicz <https://jcubic.pl/me>
   * Released under the MIT license
   *
   * includes:
   *
   * ucs2decode function from Punycode v 2.1.1 by Mathias Bynens MIT License
   *
   * Author: Diego Perini (diego.perini at gmail.com)
   * Summary: cross-browser wrapper for DOMContentLoaded
   * Updated: 20101020
   * License: MIT
   * Version: 1.2
   *
   * contentloaded.js
   *
   * URL:
   * http://javascript.nwbox.com/ContentLoaded/
   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
   *
   * The rationalize algorithm is by Per M.A. Bothner, Alan Bawden and Marc Feeley.
   * source: Kawa, C-Gambit
   *
   * Build time: Mon, 15 Nov 2021 19:33:52 +0000
   */ var Er = ["token"],
    Ar = ["stderr", "stdin", "stdout", "command_line"];
  function Fr(i) {
    var u = xr();
    return function e() {
      var t = s(i),
        r;
      if (u) {
        var n = s(this).constructor;
        r = Reflect.construct(t, arguments, n);
      } else {
        r = t.apply(this, arguments);
      }
      return a(this, r);
    };
  }
  function xr() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      );
      return true;
    } catch (e) {
      return false;
    }
  }
  function Cr(t, e) {
    var r =
      (typeof Symbol !== "undefined" && t[Symbol.iterator]) || t["@@iterator"];
    if (!r) {
      if (
        Array.isArray(t) ||
        (r = kr(t)) ||
        (e && t && typeof t.length === "number")
      ) {
        if (r) t = r;
        var n = 0;
        var i = function e() {};
        return {
          s: i,
          n: function e() {
            if (n >= t.length) return { done: true };
            return { done: false, value: t[n++] };
          },
          e: function e(t) {
            throw t;
          },
          f: i,
        };
      }
      throw new TypeError(
        "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
      );
    }
    var u = true,
      a = false,
      o;
    return {
      s: function e() {
        r = r.call(t);
      },
      n: function e() {
        var t = r.next();
        u = t.done;
        return t;
      },
      e: function e(t) {
        a = true;
        o = t;
      },
      f: function e() {
        try {
          if (!u && r["return"] != null) r["return"]();
        } finally {
          if (a) throw o;
        }
      },
    };
  }
  function kr(e, t) {
    if (!e) return;
    if (typeof e === "string") return Or(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor) r = e.constructor.name;
    if (r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))
      return Or(e, t);
  }
  function Or(e, t) {
    if (t == null || t > e.length) t = e.length;
    for (var r = 0, n = new Array(t); r < t; r++) {
      n[r] = e[r];
    }
    return n;
  }
  function Sr(t, e) {
    var r = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(t);
      if (e) {
        n = n.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        });
      }
      r.push.apply(r, n);
    }
    return r;
  }
  function Br(t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e] != null ? arguments[e] : {};
      if (e % 2) {
        Sr(Object(r), true).forEach(function (e) {
          L(t, e, r[e]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(t, Object.getOwnPropertyDescriptors(r));
      } else {
        Sr(Object(r)).forEach(function (e) {
          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
        });
      }
    }
    return t;
  }
  var jr = typeof global !== "undefined" ? global : self;
  if (!jr.fetch) {
    jr.fetch = Dr;
  }
  var Ir = {
    pair: Ni,
    symbol: Ln,
    number: da,
    array: Array,
    nil: Ii,
    character: oa,
    values: Wa,
    "input-port": Sa,
    "output-port": Ba,
    regex: RegExp,
    syntax: fu,
    eof: za,
    macro: au,
    string: sa,
    "native-symbol": Symbol,
  };
  var Pr = new Map([
    [NaN, "NaN"],
    [null, "null"],
  ]);
  var Nr, Rr, Tr;
  var Lr = jr.BN;
  function Ur(r, n) {
    var i = false,
      e = true,
      u = r.document,
      a = u.documentElement,
      t = u.addEventListener,
      o = t ? "addEventListener" : "attachEvent",
      s = t ? "removeEventListener" : "detachEvent",
      c = t ? "" : "on",
      f = function e(t) {
        if (t.type == "readystatechange" && u.readyState != "complete") return;
        (t.type == "load" ? r : u)[s](c + t.type, e, false);
        if (!i && (i = true)) n.call(r, t.type || t);
      },
      l = function t() {
        try {
          a.doScroll("left");
        } catch (e) {
          setTimeout(t, 50);
          return;
        }
        f("poll");
      };
    if (u.readyState == "complete") n.call(r, "lazy");
    else {
      if (!t && a.doScroll) {
        try {
          e = !r.frameElement;
        } catch (e) {}
        if (e) l();
      }
      u[o](c + "DOMContentLoaded", f, false);
      u[o](c + "readystatechange", f, false);
      r[o](c + "load", f, false);
    }
  }
  function qr(e) {
    var r =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var n = arguments[1] === true;
    function t(e) {
      if (!Mr()) {
        return;
      }
      var t = io.get("repr")(e);
      if (r === null || (r instanceof RegExp && r.test(t))) {
        console.log(io.get("type")(e) + ": " + t);
      }
      if (n) {
        console.log(e);
      }
    }
    if (gu(e)) {
      e.then(t);
    } else {
      t(e);
    }
    return e;
  }
  function Mr() {
    return uo && uo.get("DEBUG", { throwError: false });
  }
  function Yr(e) {
    return e
      ? "(?:#".concat(e, "(?:#[ie])?|#[ie]#").concat(e, ")")
      : "(?:#[ie])?";
  }
  function $r(e, t) {
    return "".concat(Yr(e), "[+-]?").concat(t, "+/").concat(t, "+");
  }
  function zr(e, t) {
    return ""
      .concat(Yr(e), "(?:[+-]?(?:")
      .concat(t, "+/")
      .concat(t, "+|nan.0|inf.0|")
      .concat(t, "+))?(?:[+-]i|[+-]?(?:")
      .concat(t, "+/")
      .concat(t, "+|")
      .concat(t, "+|nan.0|inf.0)i)(?=[()[\\]\\s]|$)");
  }
  function Vr(e, t) {
    return "".concat(Yr(e), "[+-]?").concat(t, "+");
  }
  var Jr = /^#\/((?:\\\/|[^/]|\[[^\]]*\/[^\]]*\])+)\/([gimyus]*)$/;
  var Gr =
    "(?:[-+]?(?:[0-9]+(?:[eE][-+]?[0-9]+)|(?:\\.[0-9]+|[0-9]+\\.[0-9]+)(?:[eE][-+]?[0-9]+)?)|[0-9]+\\.)";
  var Hr = "(?:#[ie])?(?:[+-]?(?:[0-9]+/[0-9]+|nan.0|inf.0|"
    .concat(Gr, "|[+-]?[0-9]+))?(?:")
    .concat(Gr, "|[+-](?:[0-9]+/[0-9]+|[0-9]+|nan.0|inf.0))i");
  var Wr = new RegExp("^(#[ie])?".concat(Gr, "$"), "i");
  function Qr(e, t) {
    var r = e === "x" ? "(?!\\+|".concat(t, ")") : "(?!\\.|".concat(t, ")");
    var n = "";
    if (e === "") {
      n =
        "(?:[-+]?(?:[0-9]+(?:[eE][-+]?[0-9]+)|(?:\\.[0-9]+|[0-9]+\\.[0-9]+(?![0-9]))(?:[eE][-+]?[0-9]+)?))";
    }
    return new RegExp(
      "^((?:(?:"
        .concat(n, "|[-+]?inf.0|[-+]?nan.0|[+-]?")
        .concat(t, "+/")
        .concat(t, "+(?!")
        .concat(t, ")|[+-]?")
        .concat(t, "+)")
        .concat(r, ")?)(")
        .concat(n, "|[-+]?inf.0|[-+]?nan.0|[+-]?")
        .concat(t, "+/")
        .concat(t, "+|[+-]?")
        .concat(t, "+|[+-])i$"),
      "i"
    );
  }
  var Zr = (function () {
    var u = {};
    [
      [10, "", "[0-9]"],
      [16, "x", "[0-9a-fA-F]"],
      [8, "o", "[0-7]"],
      [2, "b", "[01]"],
    ].forEach(function (e) {
      var t = A(e, 3),
        r = t[0],
        n = t[1],
        i = t[2];
      u[r] = Qr(n, i);
    });
    return u;
  })();
  var Kr = {
    alarm: "",
    backspace: "\b",
    delete: "",
    escape: "",
    newline: "\n",
    null: "\0",
    return: "\r",
    space: " ",
    tab: "\t",
    dle: "",
    soh: "",
    dc1: "",
    stx: "",
    dc2: "",
    etx: "",
    dc3: "",
    eot: "",
    dc4: "",
    enq: "",
    nak: "",
    ack: "",
    syn: "",
    bel: "",
    etb: "",
    bs: "\b",
    can: "",
    ht: "\t",
    em: "",
    lf: "\n",
    sub: "",
    vt: "\v",
    esc: "",
    ff: "\f",
    fs: "",
    cr: "\r",
    gs: "",
    so: "",
    rs: "",
    si: "",
    us: "",
    del: "",
  };
  function Xr(e) {
    var t = [];
    var r = 0;
    var n = e.length;
    while (r < n) {
      var i = e.charCodeAt(r++);
      if (i >= 55296 && i <= 56319 && r < n) {
        var u = e.charCodeAt(r++);
        if ((u & 64512) === 56320) {
          t.push(((i & 1023) << 10) + (u & 1023) + 65536);
        } else {
          t.push(i);
          r--;
        }
      } else {
        t.push(i);
      }
    }
    return t;
  }
  var en = Object.keys(Kr).join("|");
  var tn = "#\\\\(?:x[0-9a-f]+|".concat(en, "|[\\s\\S])");
  var rn = new RegExp("^".concat(tn, "$"), "i");
  function nn(i) {
    var e = [
      ["o", "[0-7]"],
      ["x", "[0-9a-fA-F]"],
      ["b", "[01]"],
      ["d", "[0-9]"],
      ["", "[0-9]"],
    ];
    var t = e
      .map(function (e) {
        var t = A(e, 2),
          r = t[0],
          n = t[1];
        return i(r, n);
      })
      .join("|");
    if (i === zr) {
      t = Hr + "|" + t;
    }
    return t;
  }
  function un(e) {
    return new RegExp("^(?:" + nn(e) + ")$", "i");
  }
  var an = un(zr);
  var on = un($r);
  var sn = un(Vr);
  var cn = new RegExp("^(?:" + Vr("", "[0-9a-f]") + ")$", "i");
  var fn = new RegExp("^(?:" + $r("", "[0-9a-f]") + ")$", "i");
  var ln = new RegExp("^(?:" + zr("", "[0-9a-f]") + ")$", "i");
  var hn = Qr("", "[0-9a-fA-F]");
  var pn = /((?:#[xodbie]){0,2})(.*)/i;
  function _n(e) {
    var t = e.match(pn);
    var r = {};
    if (t[1]) {
      var n = t[1].replace(/#/g, "").toLowerCase().split("");
      if (n.includes("x")) {
        r.radix = 16;
      } else if (n.includes("o")) {
        r.radix = 8;
      } else if (n.includes("b")) {
        r.radix = 2;
      } else if (n.includes("d")) {
        r.radix = 10;
      }
      if (n.includes("i")) {
        r.inexact = true;
      }
      if (n.includes("e")) {
        r.exact = true;
      }
    }
    r.number = t[2];
    return r;
  }
  function dn(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
    var r = _n(e);
    var n = r.number.split("/");
    var i = ka({
      num: da([n[0], r.radix || t]),
      denom: da([n[1], r.radix || t]),
    });
    if (r.inexact) {
      return i.valueOf();
    } else {
      return i;
    }
  }
  function vn(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
    var r = _n(e);
    if (r.inexact) {
      return Ea(parseInt(r.number, r.radix || t));
    }
    return da([r.number, r.radix || t]);
  }
  function mn(e) {
    var t = e.match(/#\\x([0-9a-f]+)$/i);
    var r;
    if (t) {
      var n = parseInt(t[1], 16);
      r = String.fromCodePoint(n);
    } else {
      t = e.match(/#\\(.+)$/);
      if (t) {
        r = t[1];
      }
    }
    if (r) {
      return oa(r);
    }
    throw new Error("Parse: invalid character");
  }
  function yn(e) {
    var i =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
    function t(e) {
      var t;
      if (e === "+") {
        t = da(1);
      } else if (e === "-") {
        t = da(-1);
      } else if (e.match(cn)) {
        t = da([e, i]);
      } else if (e.match(fn)) {
        var r = e.split("/");
        t = ka({ num: da([r[0], i]), denom: da([r[1], i]) });
      } else if (e.match(Wr)) {
        var n = wn(e);
        if (u.exact) {
          return n.toRational();
        }
        return n;
      } else if (e.match(/nan.0$/)) {
        return da(NaN);
      } else if (e.match(/inf.0$/)) {
        if (e[0] === "-") {
          return da(Number.NEGATIVE_INFINITY);
        }
        return da(Number.POSITIVE_INFINITY);
      } else {
        throw new Error("Internal Parser Error");
      }
      if (u.inexact) {
        return Ea(t.valueOf());
      }
      return t;
    }
    var u = _n(e);
    i = u.radix || i;
    var r;
    var n = u.number.match(hn);
    if (i !== 10 && n) {
      r = n;
    } else {
      r = u.number.match(Zr[i]);
    }
    var a, o;
    o = t(r[2]);
    if (r[1]) {
      a = t(r[1]);
    } else {
      a = da(0);
    }
    if (o.cmp(0) === 0 && o.__type__ === "bigint") {
      return a;
    }
    return Da({ im: o, re: a });
  }
  function gn(e) {
    return parseInt(e.toString(), 10) === e;
  }
  function bn(e) {
    var t = e.match(/^(([-+]?[0-9]*)(?:\.([0-9]+))?)e([-+]?[0-9]+)/i);
    if (t) {
      var r = parseInt(t[4], 10);
      var n;
      var i = t[1].replace(/[-+]?([0-9]*)\..+$/, "$1").length;
      var u = t[3] && t[3].length;
      if (i < Math.abs(r)) {
        n = da([t[1].replace(/\./, ""), 10]);
        if (u) {
          r -= u;
        }
      }
    }
    return { exponent: r, mantisa: n };
  }
  function wn(e) {
    var t = _n(e);
    var r = parseFloat(t.number);
    var n =
      (t.number.match(/\.0$/) || !t.number.match(/\./)) &&
      !t.number.match(/e/i);
    if (!t.inexact) {
      if (t.exact && n) {
        return da(r);
      }
      if (gn(r) && t.number.match(/e\+?[0-9]/i)) {
        return da(r);
      }
      var i = bn(t.number),
        u = i.mantisa,
        a = i.exponent;
      if (u !== undefined && a !== undefined) {
        var o = da(10).pow(da(Math.abs(a)));
        if (t.exact && a < 0) {
          return ka({ num: u, denom: o });
        } else if (a > 0) {
          return da(u).mul(o);
        }
      }
    }
    r = Ea(r);
    if (t.exact) {
      return r.toRational();
    }
    return r;
  }
  function Dn(e) {
    e = e
      .replace(/\\x([0-9a-f]+);/gi, function (e, t) {
        return "\\u" + t.padStart(4, "0");
      })
      .replace(/\n/g, "\\n");
    var t = e.match(/(\\*)(\\x[0-9A-F])/i);
    if (t && t[1].length % 2 === 0) {
      throw new Error("Invalid string literal, unclosed ".concat(t[2]));
    }
    try {
      return sa(JSON.parse(e));
    } catch (e) {
      throw new Error("Invalid string literal");
    }
  }
  function En(e) {
    if (e.match(/^\|.*\|$/)) {
      e = e.replace(/(^\|)|(\|$)/g, "");
      var r = { t: "\t", r: "\r", n: "\n" };
      e = e
        .replace(/\\(x[^;]+);/g, function (e, t) {
          return String.fromCharCode(parseInt("0" + t, 16));
        })
        .replace(/\\(.)/g, function (e, t) {
          return r[t] || t;
        });
    }
    return new Ln(e);
  }
  function An(e) {
    if (no.hasOwnProperty(e)) {
      return no[e];
    }
    if (e.match(/^"[\s\S]*"$/)) {
      return Dn(e);
    } else if (e[0] === "#") {
      var t = e.match(Jr);
      if (t) {
        return new RegExp(t[1], t[2]);
      } else if (e.match(rn)) {
        return mn(e);
      }
      var r = e.match(/#\\(.+)/);
      if (r && Xr(r[1]).length === 1) {
        return mn(e);
      }
    }
    if (e.match(/[0-9a-f]|[+-]i/i)) {
      if (e.match(sn)) {
        return vn(e);
      } else if (e.match(Wr)) {
        return wn(e);
      } else if (e.match(on)) {
        return dn(e);
      } else if (e.match(an)) {
        return yn(e);
      }
    }
    if (e.match(/^#[iexobd]/)) {
      throw new Error("Invalid numeric constant: " + e);
    }
    return En(e);
  }
  function Fn(e) {
    return !(["(", ")", "[", "]"].includes(e) || Jn.names().includes(e));
  }
  function xn(e) {
    return (
      Fn(e) &&
      !(
        e.match(Jr) ||
        e.match(/^"[\s\S]*"$/) ||
        e.match(sn) ||
        e.match(Wr) ||
        e.match(an) ||
        e.match(on) ||
        e.match(rn) ||
        ["#t", "#f", "nil", "true", "false"].includes(e)
      )
    );
  }
  var Cn = /"(?:\\[\S\s]|[^"])*"?/g;
  function kn(e) {
    if (typeof e === "string") {
      var t = /([-\\^$[\]()+{}?*.|])/g;
      return e.replace(t, "\\$1");
    }
    return e;
  }
  function On() {
    this.data = [];
  }
  On.prototype.push = function (e) {
    this.data.push(e);
  };
  On.prototype.top = function () {
    return this.data[this.data.length - 1];
  };
  On.prototype.pop = function () {
    return this.data.pop();
  };
  On.prototype.is_empty = function () {
    return !this.data.length;
  };
  function Sn(e) {
    if (e instanceof sa) {
      e = e.valueOf();
    }
    var t = new Zn(e, { whitespace: true });
    var r = [];
    while (true) {
      var n = t.peek(true);
      if (n === $a) {
        break;
      }
      r.push(n);
      t.skip();
    }
    return r;
  }
  function Bn(e) {
    var t = e.token,
      r = D(e, Er);
    if (t.match(/^"[\s\S]*"$/) && t.match(/\n/)) {
      var n = new RegExp("^ {1," + (e.col + 1) + "}", "mg");
      t = t.replace(n, "");
    }
    return Br({ token: t }, r);
  }
  function jn(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined
        ? arguments[1]
        : function () {};
    this.fn = e;
    this.cont = t;
  }
  jn.prototype.toString = function () {
    return "#<Thunk>";
  };
  function In(n) {
    return function () {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
        t[r] = arguments[r];
      }
      return Pn(n.apply(this, t));
    };
  }
  function Pn(e) {
    while (e instanceof jn) {
      var t = e;
      e = e.fn();
      if (!(e instanceof jn)) {
        t.cont();
      }
    }
    return e;
  }
  function Nn(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    if (e instanceof sa) {
      e = e.toString();
    }
    if (t) {
      return Sn(e);
    } else {
      var r = Sn(e)
        .map(function (e) {
          if (e.token === "#\\ ") {
            return e.token;
          }
          return e.token.trim();
        })
        .filter(function (e) {
          return e && !e.match(/^;/) && !e.match(/^#\|[\s\S]*\|#$/);
        });
      return Rn(r);
    }
  }
  function Rn(e) {
    var t = 0;
    var r = null;
    var n = [];
    for (var i = 0; i < e.length; ++i) {
      var u = e[i];
      if (u === "#;") {
        if (["(", "["].includes(e[i + 1])) {
          t = 1;
          r = i;
        } else {
          n.push([i, i + 2]);
        }
        i += 1;
        continue;
      }
      if (r !== null) {
        if ([")", "]"].includes(u)) {
          t--;
        } else if (["(", "["].includes(u)) {
          t++;
        }
        if (t === 0) {
          n.push([r, i + 1]);
          r = null;
        }
      }
    }
    e = e.slice();
    n.reverse();
    for (var a = 0, o = n; a < o.length; a++) {
      var s = A(o[a], 2),
        c = s[0],
        f = s[1];
      e.splice(c, f - c);
    }
    return e;
  }
  function Tn(e) {
    return (
      _(e) === "symbol" ||
      (_(e) === "object" &&
        Object.prototype.toString.call(e) === "[object Symbol]")
    );
  }
  function Ln(e) {
    if (
      (typeof this !== "undefined" && this.constructor !== Ln) ||
      typeof this === "undefined"
    ) {
      return new Ln(e);
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    if (Ln.list[e] instanceof Ln) {
      return Ln.list[e];
    }
    this.__name__ = e;
    if (typeof e === "string") {
      Ln.list[e] = this;
    }
  }
  Ln.list = {};
  Ln.literal = Symbol["for"]("__literal__");
  Ln.object = Symbol["for"]("__object__");
  Ln.is = function (e, t) {
    return (
      e instanceof Ln &&
      ((t instanceof Ln && e.__name__ === t.__name__) ||
        (typeof t === "string" && e.__name__ === t) ||
        (t instanceof RegExp && t.test(e.__name__)))
    );
  };
  Ln.prototype.toString = function (e) {
    if (Tn(this.__name__)) {
      return Un(this.__name__);
    }
    var t = this.valueOf();
    if (e && t.match(/(^;|[\s()[\]'])/)) {
      return "|".concat(t, "|");
    }
    return t;
  };
  Ln.prototype.literal = function () {
    if (this.is_gensym()) {
      return this[Ln.literal];
    }
    return this.valueOf();
  };
  Ln.prototype.serialize = function () {
    if (sa.isString(this.__name__)) {
      return this.__name__;
    }
    return [Un(this.__name__)];
  };
  Ln.prototype.valueOf = function () {
    return this.__name__.valueOf();
  };
  Ln.prototype.is_gensym = function () {
    return qn(this.__name__);
  };
  function Un(e) {
    return e.toString().replace(/^Symbol\(([^)]+)\)/, "$1");
  }
  function qn(e) {
    if (_(e) === "symbol") {
      return !!e.toString().match(/^Symbol\(#:/);
    }
    return false;
  }
  var Mn = (function () {
    var t = 0;
    function r(e, t) {
      var r = new Ln(t);
      $u(r, "__literal__", e);
      return r;
    }
    return function () {
      var e =
        arguments.length > 0 && arguments[0] !== undefined
          ? arguments[0]
          : null;
      if (e instanceof Ln) {
        if (e.is_gensym()) {
          return e;
        }
        e = e.valueOf();
      }
      if (qn(e)) {
        return Ln(e);
      }
      if (e !== null) {
        return r(e, Symbol("#:".concat(e)));
      }
      t++;
      return r(t, Symbol("#:g".concat(t)));
    };
  })();
  function Yn(e) {
    var r = this;
    var n = {
      pending: true,
      rejected: false,
      fulfilled: false,
      reason: undefined,
      type: undefined,
    };
    e = e.then(function (e) {
      n.type = Ao(e);
      n.fulfilled = true;
      n.pending = false;
      return e;
    });
    ai(this, "_promise", e, { hidden: true });
    if (vu(e["catch"])) {
      e = e["catch"](function (e) {
        n.rejected = true;
        n.pending = false;
        n.reason = e;
      });
    }
    Object.keys(n).forEach(function (t) {
      Object.defineProperty(r, "__".concat(t, "__"), {
        enumerable: true,
        get: function e() {
          return n[t];
        },
      });
    });
    ai(this, "__promise__", e);
    this.then = false;
  }
  Yn.prototype.then = function (e) {
    return new Yn(this.valueOf().then(e));
  };
  Yn.prototype["catch"] = function (e) {
    return new Yn(this.valueOf()["catch"](e));
  };
  Yn.prototype.valueOf = function () {
    if (!this._promise) {
      throw new Error("QuotedPromise: invalid promise created");
    }
    return this._promise;
  };
  Yn.prototype.toString = function () {
    if (this.__pending__) {
      return Yn.pending_str;
    }
    if (this.__rejected__) {
      return Yn.rejected_str;
    }
    return "#<js-promise resolved (".concat(this.__type__, ")>");
  };
  Yn.pending_str = "#<js-promise (pending)>";
  Yn.rejected_str = "#<js-promise (rejected)>";
  function $n(e) {
    if (Array.isArray(e)) {
      return Promise.all(zn(e)).then(Vn);
    }
    return e;
  }
  function zn(e) {
    var t = new Array(e.length),
      r = e.length;
    while (r--) {
      var n = e[r];
      if (n instanceof Yn) {
        t[r] = new Ha(n);
      } else {
        t[r] = n;
      }
    }
    return t;
  }
  function Vn(e) {
    var t = new Array(e.length),
      r = e.length;
    while (r--) {
      var n = e[r];
      if (n instanceof Ha) {
        t[r] = n.valueOf();
      } else {
        t[r] = n;
      }
    }
    return t;
  }
  var Jn = {
    LITERAL: Symbol["for"]("literal"),
    SPLICE: Symbol["for"]("splice"),
    SYMBOL: Symbol["for"]("symbol"),
    names: function e() {
      return Object.keys(this._specials);
    },
    type: function e(t) {
      return this.get(t).type;
    },
    get: function e(t) {
      return this._specials[t];
    },
    off: function e(t) {
      var r = this;
      var n =
        arguments.length > 1 && arguments[1] !== undefined
          ? arguments[1]
          : null;
      if (Array.isArray(t)) {
        t.forEach(function (e) {
          return r.off(e, n);
        });
      } else if (n === null) {
        delete this._events[t];
      } else {
        this._events = this._events.filter(function (e) {
          return e !== n;
        });
      }
    },
    on: function e(t, r) {
      var n = this;
      if (Array.isArray(t)) {
        t.forEach(function (e) {
          return n.on(e, r);
        });
      } else if (!this._events[t]) {
        this._events[t] = [r];
      } else {
        this._events[t].push(r);
      }
    },
    trigger: function e(t) {
      for (
        var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;
        i < r;
        i++
      ) {
        n[i - 1] = arguments[i];
      }
      if (this._events[t]) {
        this._events[t].forEach(function (e) {
          return e.apply(void 0, n);
        });
      }
    },
    remove: function e(t) {
      this.trigger("remove");
      delete this._specials[t];
    },
    append: function e(t, r, n) {
      this.trigger("append");
      this._specials[t] = { seq: t, symbol: r, type: n };
    },
    _events: {},
    _specials: {},
  };
  function Gn(e) {
    return Jn.names().includes(e);
  }
  function Hn(e) {
    return Jn.builtin.includes(e);
  }
  function Wn(e) {
    return Jn.type(e) === Jn.LITERAL;
  }
  var Qn = [
    ["'", new Ln("quote"), Jn.LITERAL],
    ["`", new Ln("quasiquote"), Jn.LITERAL],
    [",@", new Ln("unquote-splicing"), Jn.LITERAL],
    [",", new Ln("unquote"), Jn.LITERAL],
    ["'>", new Ln("quote-promise"), Jn.LITERAL],
  ];
  Object.defineProperty(Jn, "builtin", {
    writable: false,
    value: Qn.map(function (e) {
      return e[0];
    }),
  });
  Qn.forEach(function (e) {
    var t = A(e, 3),
      r = t[0],
      n = t[1],
      i = t[2];
    Jn.append(r, n, i);
  });
  var Zn = (function () {
    function p(e) {
      var t = this;
      var r =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : {},
        n = r.whitespace,
        i = n === void 0 ? false : n;
      y(this, p);
      ai(this, "__input__", e.replace(/\r/g, ""));
      var u = {};
      [
        "_i",
        "_whitespace",
        "_col",
        "_newline",
        "_line",
        "_state",
        "_next",
        "_token",
        "_prev_char",
      ].forEach(function (r) {
        Object.defineProperty(t, r, {
          configurable: false,
          enumerable: false,
          get: function e() {
            return u[r];
          },
          set: function e(t) {
            u[r] = t;
          },
        });
      });
      this._whitespace = i;
      this._i = this._line = this._col = this._newline = 0;
      this._state = this._next = this._token = null;
      this._prev_char = "";
    }
    b(p, [
      {
        key: "get",
        value: function e(t) {
          return this.__internal[t];
        },
      },
      {
        key: "set",
        value: function e(t, r) {
          this.__internal[t] = r;
        },
      },
      {
        key: "token",
        value: function e() {
          var t =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : false;
          if (t) {
            var r = this._line;
            if (this._whitespace && this._token === "\n") {
              --r;
            }
            return {
              token: this._token,
              col: this._col,
              offset: this._i,
              line: r,
            };
          }
          return this._token;
        },
      },
      {
        key: "peek",
        value: function e() {
          var t =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : false;
          if (this._i >= this.__input__.length) {
            return $a;
          }
          if (this._token) {
            return this.token(t);
          }
          var r = this.next_token();
          if (r) {
            this._token = this.__input__.substring(this._i, this._next);
            return this.token(t);
          }
          return $a;
        },
      },
      {
        key: "skip",
        value: function e() {
          if (this._next !== null) {
            this._token = null;
            this._i = this._next;
          }
        },
      },
      {
        key: "read_line",
        value: function e() {
          var t = this.__input__.length;
          if (this._i >= t) {
            return $a;
          }
          for (var r = this._i; r < t; ++r) {
            var n = this.__input__[r];
            if (n === "\n") {
              var i = this.__input__.substring(this._i, r);
              this._i = r + 1;
              ++this._line;
              return i;
            }
          }
          return this.read_rest();
        },
      },
      {
        key: "read_rest",
        value: function e() {
          var t = this._i;
          this._i = this.__input__.length;
          return this.__input__.substring(t);
        },
      },
      {
        key: "read_string",
        value: function e(t) {
          var r = this.__input__.length;
          if (this._i >= r) {
            return $a;
          }
          if (t + this._i >= r) {
            return this.read_rest();
          }
          var n = this._i + t;
          var i = this.__input__.substring(this._i, n);
          var u = i.match(/\n/g);
          if (u) {
            this._line += u.length;
          }
          this._i = n;
          return i;
        },
      },
      {
        key: "peek_char",
        value: function e() {
          if (this._i >= this.__input__.length) {
            return $a;
          }
          return oa(this.__input__[this._i]);
        },
      },
      {
        key: "read_char",
        value: function e() {
          var t = this.peek_char();
          this.skip_char();
          return t;
        },
      },
      {
        key: "skip_char",
        value: function e() {
          if (this._i < this.__input__.length) {
            ++this._i;
            this._token = null;
          }
        },
      },
      {
        key: "match_rule",
        value: function e(t) {
          var r =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            n = r.prev_char,
            i = r["char"],
            u = r.next_char;
          var a = A(t, 4),
            o = a[0],
            s = a[1],
            c = a[2],
            f = a[3];
          if (t.length !== 5) {
            throw new Error("Lexer: Invald rule of length ".concat(t.length));
          }
          if (!i.match(o)) {
            return false;
          }
          if (!Kn(s, n)) {
            return false;
          }
          if (!Kn(c, u)) {
            return false;
          }
          if (f !== this._state) {
            return false;
          }
          return true;
        },
      },
      {
        key: "next_token",
        value: function e() {
          if (this._i >= this.__input__.length) {
            return false;
          }
          var t = true;
          e: for (var r = this._i, n = this.__input__.length; r < n; ++r) {
            var i = this.__input__[r];
            var u = this.__input__[r - 1] || "";
            var a = this.__input__[r + 1] || "";
            if (i === "\n") {
              ++this._line;
              var o = this._newline;
              if (this._state === null) {
                this._newline = r + 1;
              }
              if (this._whitespace && this._state === null) {
                this._next = r + 1;
                this._col = this._i - o;
                return true;
              }
            }
            if (t && this._state === null && i.match(/\s/)) {
              if (this._whitespace) {
                if (!a.match(/\s/)) {
                  this._next = r + 1;
                  this._col = this._i - this._newline;
                  return true;
                } else {
                  continue;
                }
              } else {
                this._i = r + 1;
                continue;
              }
            }
            t = false;
            var s = Cr(p.rules),
              c;
            try {
              for (s.s(); !(c = s.n()).done; ) {
                var f = c.value;
                if (
                  this.match_rule(f, { prev_char: u, char: i, next_char: a })
                ) {
                  var l = f[f.length - 1];
                  this._state = l;
                  if (this._state === null) {
                    this._next = r + 1;
                    this._col = this._i - this._newline;
                    return true;
                  }
                  continue e;
                }
              }
            } catch (e) {
              s.e(e);
            } finally {
              s.f();
            }
            if (this._state !== null) {
              continue e;
            }
            var h = this.__input__.split("\n")[this._line];
            throw new Error(
              "Invalid Syntax at line ".concat(this._line, "\n").concat(h)
            );
          }
        },
      },
    ]);
    return p;
  })();
  Zn.symbol_rule = function e(t, r) {
    var n = Zn.literal_rule(t, r, Zn.boundary, /\S/);
    return n.concat([
      [/\S/, /\S/, Zn.boundary, null, null],
      [/\S/, /\S/, null, null, Zn.symbol],
      [/\S/, null, Zn.boundary, Zn.symbol, null],
    ]);
  };
  Zn.literal_rule = function e(t, r) {
    var n =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    var i =
      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    if (t.length === 0) {
      throw new Error("Lexer: invalid literal rule");
    }
    if (t.length === 1) {
      return [[t, n, i, null, null]];
    }
    var u = [];
    for (var a = 0, o = t.length; a < o; ++a) {
      var s = [];
      s.push(t[a]);
      s.push(t[a - 1] || n);
      s.push(t[a + 1] || i);
      if (a === 0) {
        s.push(null);
        s.push(r);
      } else if (a === o - 1) {
        s.push(r);
        s.push(null);
      } else {
        s.push(r);
        s.push(r);
      }
      u.push(s);
    }
    return u;
  };
  Zn.string = Symbol["for"]("string");
  Zn.symbol = Symbol["for"]("symbol");
  Zn.comment = Symbol["for"]("comment");
  Zn.regex = Symbol["for"]("regex");
  Zn.regex_class = Symbol["for"]("regex_class");
  Zn.character = Symbol["for"]("character");
  Zn.bracket = Symbol["for"]("bracket");
  Zn.b_symbol = Symbol["for"]("b_symbol");
  Zn.b_comment = Symbol["for"]("b_comment");
  Zn.i_comment = Symbol["for"]("i_comment");
  Zn.l_datum = Symbol["for"]("l_datum");
  Zn.dot = Symbol["for"]("dot");
  Zn.boundary = /^$|[\s()[\]']/;
  Zn._rules = [
    [/"/, /^$|[^\\]/, null, null, Zn.string],
    [/"/, /^$|[^\\]/, null, Zn.string, null],
    [/#/, null, /[bdxoeitf]/i, null, Zn.symbol],
    [/#/, null, /\\/, null, Zn.character],
    [/\\/, /#/, /\s/, Zn.character, Zn.character],
    [/\\/, /#/, /[()[\]]/, Zn.character, Zn.character],
    [/\s/, /\\/, null, Zn.character, null],
    [/\S/, null, Zn.boundary, Zn.character, null],
    [/#/, Zn.boundary, /\//, null, Zn.regex],
    [/[ \t]/, null, null, Zn.regex, Zn.regex],
    [/\[/, null, null, Zn.regex, Zn.regex_class],
    [/\]/, /[^\\]/, null, Zn.regex_class, Zn.regex],
    [/[()[\]]/, null, null, Zn.regex, Zn.regex],
    [/\//, /\\/, null, Zn.regex, Zn.regex],
    [/\//, /[^#]/, Zn.boundary, Zn.regex, null],
    [/[gimyus]/, /\//, Zn.boundary, Zn.regex, null],
    [/[gimyus]/, /\//, /[gimyus]/, Zn.regex, Zn.regex],
    [/[gimyus]/, /[gimyus]/, Zn.boundary, Zn.regex, null],
    [/;/, /^$|[^#]/, null, null, Zn.comment],
    [/[\s\S]/, null, /\n/, Zn.comment, null],
    [/\s/, null, null, Zn.comment, Zn.comment],
    [/#/, null, /\|/, null, Zn.b_comment],
    [/\s/, null, null, Zn.b_comment, Zn.b_comment],
    [/#/, /\|/, null, Zn.b_comment, null],
    [/#/, null, /;/, null, Zn.i_comment],
    [/;/, /#/, null, Zn.i_comment, null],
    [/#/, null, /[0-9]/, null, Zn.l_datum],
    [/=/, /[0-9]/, null, Zn.l_datum, null],
    [/#/, /[0-9]/, null, Zn.l_datum, null],
    [/\./, Zn.boundary, /,/, null, null],
    [/\|/, null, null, null, Zn.b_symbol],
    [/\s/, null, null, Zn.b_symbol, Zn.b_symbol],
    [/\|/, null, Zn.boundary, Zn.b_symbol, null],
  ];
  Zn._brackets = [[/[()[\]]/, null, null, null, null]];
  Zn._symbol_rules = [
    [/\S/, Zn.boundary, Zn.boundary, null, null],
    [/\S/, Zn.boundary, null, null, Zn.symbol],
    [/\S/, null, Zn.boundary, null, null],
    [/\S/, null, null, null, Zn.symbol],
    [/\S/, null, Zn.boundary, Zn.symbol, null],
  ];
  Zn._cache = { valid: false, rules: null };
  Jn.on(["remove", "append"], function () {
    Zn._cache.valid = false;
    Zn._cache.rules = null;
  });
  Object.defineProperty(Zn, "rules", {
    get: function e() {
      if (Zn._cache.valid) {
        return Zn._cache.rules;
      }
      var t = Jn.names().sort(function (e, t) {
        return t.length - e.length || e.localeCompare(t);
      });
      var r = t.reduce(function (e, t) {
        var r = Jn.get(t),
          n = r.type,
          i = r.symbol;
        var u;
        var a;
        if (t[0] === "#") {
          if (t.length === 1) {
            a = Symbol["for"](t);
          } else {
            a = Symbol["for"](t[1]);
          }
        } else {
          a = i;
        }
        if (n === Jn.SYMBOL) {
          u = Zn.symbol_rule(t, a);
        } else {
          u = Zn.literal_rule(t, a);
        }
        return e.concat(u);
      }, []);
      Zn._cache.rules = Zn._rules.concat(Zn._brackets, r, Zn._symbol_rules);
      Zn._cache.valid = true;
      return Zn._cache.rules;
    },
  });
  function Kn(e, t) {
    return e === null || t.match(e);
  }
  var Xn = (function () {
    function o(e) {
      var t =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : {},
        r = t.env,
        n = t.meta,
        i = n === void 0 ? false : n,
        u = t.formatter,
        a = u === void 0 ? Bn : u;
      y(this, o);
      if (e instanceof sa) {
        e = e.toString();
      }
      ai(this, "_formatter", a, { hidden: true });
      ai(this, "__lexer__", new Zn(e));
      ai(this, "__env__", r);
      ai(this, "_meta", i, { hidden: true });
      ai(this, "_refs", [], { hidden: true });
      ai(this, "_state", { parentheses: 0 }, { hidden: true });
    }
    b(o, [
      {
        key: "resolve",
        value: function e(t) {
          return this.__env__ && this.__env__.get(t, { throwError: false });
        },
      },
      {
        key: "peek",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        r = this.__lexer__.peek(true);
                        if (!(r === $a)) {
                          t.next = 4;
                          break;
                        }
                        return t.abrupt("return", $a);
                      case 4:
                        if (!this.is_comment(r.token)) {
                          t.next = 7;
                          break;
                        }
                        this.skip();
                        return t.abrupt("continue", 0);
                      case 7:
                        if (!(r.token === "#;")) {
                          t.next = 14;
                          break;
                        }
                        this.skip();
                        if (!(this.__lexer__.peek() === $a)) {
                          t.next = 11;
                          break;
                        }
                        throw new Error(
                          "Lexer: syntax error eof found after comment"
                        );
                      case 11:
                        t.next = 13;
                        return this._read_object();
                      case 13:
                        return t.abrupt("continue", 0);
                      case 14:
                        return t.abrupt("break", 17);
                      case 17:
                        r = this._formatter(r);
                        if (!this._meta) {
                          t.next = 20;
                          break;
                        }
                        return t.abrupt("return", r);
                      case 20:
                        return t.abrupt("return", r.token);
                      case 21:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
      {
        key: "reset",
        value: function e() {
          this._refs.length = 0;
        },
      },
      {
        key: "skip",
        value: function e() {
          this.__lexer__.skip();
        },
      },
      {
        key: "read",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        t.next = 2;
                        return this.peek();
                      case 2:
                        r = t.sent;
                        this.skip();
                        return t.abrupt("return", r);
                      case 5:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
      {
        key: "match_datum_label",
        value: function e(t) {
          var r = t.match(/^#([0-9]+)=$/);
          return r && r[1];
        },
      },
      {
        key: "match_datum_ref",
        value: function e(t) {
          var r = t.match(/^#([0-9]+)#$/);
          return r && r[1];
        },
      },
      {
        key: "is_open",
        value: function e(t) {
          var r = ["(", "["].includes(t);
          if (r) {
            this._state.parentheses++;
          }
          return r;
        },
      },
      {
        key: "is_close",
        value: function e(t) {
          var r = [")", "]"].includes(t);
          if (r) {
            this._state.parentheses--;
          }
          return r;
        },
      },
      {
        key: "read_list",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r, n, i, u;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        (r = Pi), (n = r);
                      case 1:
                        t.next = 4;
                        return this.peek();
                      case 4:
                        i = t.sent;
                        if (!(i === $a)) {
                          t.next = 7;
                          break;
                        }
                        return t.abrupt("break", 27);
                      case 7:
                        if (!this.is_close(i)) {
                          t.next = 10;
                          break;
                        }
                        this.skip();
                        return t.abrupt("break", 27);
                      case 10:
                        if (!(i === "." && r !== Pi)) {
                          t.next = 17;
                          break;
                        }
                        this.skip();
                        t.next = 14;
                        return this._read_object();
                      case 14:
                        n.cdr = t.sent;
                        t.next = 25;
                        break;
                      case 17:
                        t.t0 = Ni;
                        t.next = 20;
                        return this._read_object();
                      case 20:
                        t.t1 = t.sent;
                        t.t2 = Pi;
                        u = new t.t0(t.t1, t.t2);
                        if (r === Pi) {
                          r = u;
                        } else {
                          n.cdr = u;
                        }
                        n = u;
                      case 25:
                        t.next = 1;
                        break;
                      case 27:
                        return t.abrupt("return", r);
                      case 28:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
      {
        key: "read_value",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        t.next = 2;
                        return this.read();
                      case 2:
                        r = t.sent;
                        if (!(r === $a)) {
                          t.next = 5;
                          break;
                        }
                        throw new Error("Parser: Expected token eof found");
                      case 5:
                        return t.abrupt("return", An(r));
                      case 6:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
      {
        key: "is_comment",
        value: function e(t) {
          return t.match(/^;/) || (t.match(/^#\|/) && t.match(/\|#$/));
        },
      },
      {
        key: "evaluate",
        value: function e(t) {
          return Io(t, {
            env: this.__env__,
            error: function e(t) {
              throw t;
            },
          });
        },
      },
      {
        key: "read_object",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        this.reset();
                        t.next = 3;
                        return this._read_object();
                      case 3:
                        r = t.sent;
                        if (r instanceof ei) {
                          r = r.valueOf();
                        }
                        if (!this._refs.length) {
                          t.next = 7;
                          break;
                        }
                        return t.abrupt("return", this._resolve_object(r));
                      case 7:
                        return t.abrupt("return", r);
                      case 8:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
      {
        key: "ballanced",
        value: function e() {
          return this._state.parentheses === 0;
        },
      },
      {
        key: "ballancing_error",
        value: function e(t) {
          var r = this._state.parentheses;
          var n = new Error("Parser: expected parenthesis but eof found");
          var i = new RegExp("\\){".concat(r, "}$"));
          n.__code__ = [t.toString().replace(i, "")];
          throw n;
        },
      },
      {
        key: "_resolve_object",
        value: (function () {
          var t = O(
            j.mark(function e(r) {
              var n = this;
              var i;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        if (!Array.isArray(r)) {
                          t.next = 2;
                          break;
                        }
                        return t.abrupt(
                          "return",
                          r.map(function (e) {
                            return n._resolve_object(e);
                          })
                        );
                      case 2:
                        if (!Li(r)) {
                          t.next = 6;
                          break;
                        }
                        i = {};
                        Object.keys(r).forEach(function (e) {
                          i[e] = n._resolve_object(r[e]);
                        });
                        return t.abrupt("return", i);
                      case 6:
                        if (!(r instanceof Ni)) {
                          t.next = 8;
                          break;
                        }
                        return t.abrupt("return", this._resolve_pair(r));
                      case 8:
                        return t.abrupt("return", r);
                      case 9:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function e(e) {
            return t.apply(this, arguments);
          }
          return e;
        })(),
      },
      {
        key: "_resolve_pair",
        value: (function () {
          var t = O(
            j.mark(function e(r) {
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        if (!(r instanceof Ni)) {
                          t.next = 15;
                          break;
                        }
                        if (!(r.car instanceof ei)) {
                          t.next = 7;
                          break;
                        }
                        t.next = 4;
                        return r.car.valueOf();
                      case 4:
                        r.car = t.sent;
                        t.next = 8;
                        break;
                      case 7:
                        this._resolve_pair(r.car);
                      case 8:
                        if (!(r.cdr instanceof ei)) {
                          t.next = 14;
                          break;
                        }
                        t.next = 11;
                        return r.cdr.valueOf();
                      case 11:
                        r.cdr = t.sent;
                        t.next = 15;
                        break;
                      case 14:
                        this._resolve_pair(r.cdr);
                      case 15:
                        return t.abrupt("return", r);
                      case 16:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function e(e) {
            return t.apply(this, arguments);
          }
          return e;
        })(),
      },
      {
        key: "_read_object",
        value: (function () {
          var e = O(
            j.mark(function e() {
              var r, n, i, u, a, o, s, c, f;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        t.next = 2;
                        return this.peek();
                      case 2:
                        r = t.sent;
                        if (!(r === $a)) {
                          t.next = 5;
                          break;
                        }
                        return t.abrupt("return", r);
                      case 5:
                        if (!Gn(r)) {
                          t.next = 35;
                          break;
                        }
                        n = Jn.get(r);
                        i = Hn(r);
                        this.skip();
                        t.next = 11;
                        return this._read_object();
                      case 11:
                        a = t.sent;
                        if (i) {
                          t.next = 22;
                          break;
                        }
                        o = this.__env__.get(n.symbol);
                        if (!(typeof o === "function")) {
                          t.next = 22;
                          break;
                        }
                        if (!Wn(r)) {
                          t.next = 19;
                          break;
                        }
                        return t.abrupt("return", o.call(this.__env__, a));
                      case 19:
                        if (!(a instanceof Ni)) {
                          t.next = 21;
                          break;
                        }
                        return t.abrupt(
                          "return",
                          o.apply(this.__env__, a.to_array(false))
                        );
                      case 21:
                        throw new Error(
                          "Parse Error: Invalid parser extension " +
                            "invocation ".concat(n.symbol)
                        );
                      case 22:
                        if (Wn(r)) {
                          u = new Ni(n.symbol, new Ni(a, Pi));
                        } else {
                          u = new Ni(n.symbol, a);
                        }
                        if (!i) {
                          t.next = 25;
                          break;
                        }
                        return t.abrupt("return", u);
                      case 25:
                        if (!(o instanceof au)) {
                          t.next = 34;
                          break;
                        }
                        t.next = 28;
                        return this.evaluate(u);
                      case 28:
                        s = t.sent;
                        if (!(s instanceof Ni || s instanceof Ln)) {
                          t.next = 31;
                          break;
                        }
                        return t.abrupt(
                          "return",
                          Ni.fromArray([Ln("quote"), s])
                        );
                      case 31:
                        return t.abrupt("return", s);
                      case 34:
                        throw new Error(
                          "Parse Error: invlid parser extension: " + n.symbol
                        );
                      case 35:
                        c = this.match_datum_ref(r);
                        if (!(c !== null)) {
                          t.next = 41;
                          break;
                        }
                        this.skip();
                        if (!this._refs[c]) {
                          t.next = 40;
                          break;
                        }
                        return t.abrupt("return", new ei(c, this._refs[c]));
                      case 40:
                        throw new Error(
                          "Parse Error: invalid datum label #".concat(c, "#")
                        );
                      case 41:
                        f = this.match_datum_label(r);
                        if (!(f !== null)) {
                          t.next = 48;
                          break;
                        }
                        this.skip();
                        this._refs[f] = this._read_object();
                        return t.abrupt("return", this._refs[f]);
                      case 48:
                        if (!this.is_open(r)) {
                          t.next = 53;
                          break;
                        }
                        this.skip();
                        return t.abrupt("return", this.read_list());
                      case 53:
                        return t.abrupt("return", this.read_value());
                      case 54:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
      },
    ]);
    return o;
  })();
  var ei = (function () {
    function r(e, t) {
      y(this, r);
      this.name = e;
      this.data = t;
    }
    b(r, [
      {
        key: "valueOf",
        value: function e() {
          return this.data;
        },
      },
    ]);
    return r;
  })();
  function ti(e, t) {
    return ri.apply(this, arguments);
  }
  function ri() {
    ri = e(
      j.mark(function e(r, n) {
        var i, u;
        return j.wrap(function e(t) {
          while (1) {
            switch ((t.prev = t.next)) {
              case 0:
                if (!n) {
                  if (io) {
                    n = io.get("**interaction-environment**", {
                      throwError: false,
                    });
                  } else {
                    n = uo;
                  }
                }
                i = new Xn(r, { env: n });
              case 2:
                t.next = 5;
                return C(i.read_object());
              case 5:
                u = t.sent;
                if (!i.ballanced()) {
                  i.ballancing_error(u);
                }
                if (!(u === $a)) {
                  t.next = 9;
                  break;
                }
                return t.abrupt("break", 13);
              case 9:
                t.next = 11;
                return u;
              case 11:
                t.next = 2;
                break;
              case 13:
              case "end":
                return t.stop();
            }
          }
        }, e);
      })
    );
    return ri.apply(this, arguments);
  }
  function ni(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined
        ? arguments[1]
        : function (e) {
            return e;
          };
    var r =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    if (gu(e)) {
      var n = e.then(t);
      if (r === null) {
        return n;
      } else {
        return n["catch"](r);
      }
    }
    if (e instanceof Array) {
      return ii(e, t, r);
    }
    if (Li(e)) {
      return ui(e, t, r);
    }
    return t(e);
  }
  function ii(t, r, e) {
    if (t.find(gu)) {
      return ni(
        $n(t),
        function (e) {
          if (Object.isFrozen(t)) {
            Object.freeze(e);
          }
          return r(e);
        },
        e
      );
    }
    return r(t);
  }
  function ui(t, e, r) {
    var i = Object.keys(t);
    var n = [],
      u = [];
    var a = i.length;
    while (a--) {
      var o = i[a];
      var s = t[o];
      n[a] = s;
      if (gu(s)) {
        u.push(s);
      }
    }
    if (u.length) {
      return ni(
        $n(n),
        function (e) {
          var n = {};
          e.forEach(function (e, t) {
            var r = i[t];
            n[r] = e;
          });
          if (Object.isFrozen(t)) {
            Object.freeze(n);
          }
          return n;
        },
        r
      );
    }
    return e(t);
  }
  function ai(e, t, r) {
    var n =
        arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      i = n.hidden,
      u = i === void 0 ? false : i;
    Object.defineProperty(e, t, {
      value: r,
      configurable: true,
      enumerable: !u,
    });
  }
  function oi(r) {
    var n, i, u, a, o, s, c;
    return j.async(
      function e(t) {
        while (1) {
          switch ((t.prev = t.next)) {
            case 0:
              n = [];
              i = false;
              u = false;
              t.prev = 3;
              o = F(r);
            case 5:
              t.next = 7;
              return j.awrap(o.next());
            case 7:
              if (!(i = !(s = t.sent).done)) {
                t.next = 13;
                break;
              }
              c = s.value;
              n.push(c);
            case 10:
              i = false;
              t.next = 5;
              break;
            case 13:
              t.next = 19;
              break;
            case 15:
              t.prev = 15;
              t.t0 = t["catch"](3);
              u = true;
              a = t.t0;
            case 19:
              t.prev = 19;
              t.prev = 20;
              if (!(i && o["return"] != null)) {
                t.next = 24;
                break;
              }
              t.next = 24;
              return j.awrap(o["return"]());
            case 24:
              t.prev = 24;
              if (!u) {
                t.next = 27;
                break;
              }
              throw a;
            case 27:
              return t.finish(24);
            case 28:
              return t.finish(19);
            case 29:
              return t.abrupt("return", n);
            case 30:
            case "end":
              return t.stop();
          }
        }
      },
      null,
      null,
      [
        [3, 15, 19, 29],
        [20, , 24, 28],
      ],
      Promise
    );
  }
  function si(e, t) {
    if (t instanceof RegExp) {
      return function (e) {
        return String(e).match(t);
      };
    } else if (vu(t)) {
      return t;
    }
    throw new Error("Invalid matcher");
  }
  function ci(e, t, r, n) {
    if (typeof e !== "string") {
      t = arguments[0];
      r = arguments[1];
      n = arguments[2];
      e = null;
    }
    if (r) {
      if (n) {
        t.__doc__ = r;
      } else {
        t.__doc__ = fi(r);
      }
    }
    if (e) {
      t.__name__ = e;
    } else if (t.name && !Vu(t)) {
      t.__name__ = t.name;
    }
    return t;
  }
  function fi(e) {
    return e
      .split("\n")
      .map(function (e) {
        return e.trim();
      })
      .join("\n");
  }
  function li(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var r = e.length;
    if (t <= 0) {
      throw Error("previousSexp: Invalid argument sexp = ".concat(t));
    }
    e: while (t-- && r >= 0) {
      var n = 1;
      while (n > 0) {
        var i = e[--r];
        if (!i) {
          break e;
        }
        if (i === "(" || i.token === "(") {
          n--;
        } else if (i === ")" || i.token === ")") {
          n++;
        }
      }
      r--;
    }
    return e.slice(r + 1);
  }
  function hi(e) {
    if (!e || !e.length) {
      return 0;
    }
    var t = e.length;
    if (e[t - 1].token === "\n") {
      return 0;
    }
    while (--t) {
      if (e[t].token === "\n") {
        var r = (e[t + 1] || {}).token;
        if (r) {
          return r.length;
        }
      }
    }
    return 0;
  }
  function pi(e, t) {
    return f(e, t) === t.length;
    function f(r, n) {
      function e(e, t) {
        var r = Cr(e),
          n;
        try {
          for (r.s(); !(n = r.n()).done; ) {
            var i = n.value;
            var u = f(i, t);
            if (u !== -1) {
              return u;
            }
          }
        } catch (e) {
          r.e(e);
        } finally {
          r.f();
        }
        return -1;
      }
      function t() {
        return r[u] === Symbol["for"]("symbol") && !xn(n[o]);
      }
      function i() {
        var e = r[u + 1];
        var t = n[o + 1];
        if (e !== undefined && t !== undefined) {
          return f([e], [t]);
        }
      }
      var u = 0;
      var a = {};
      for (var o = 0; o < n.length; ++o) {
        if (typeof r[u] === "undefined") {
          return o;
        }
        if (r[u] instanceof vi) {
          var s;
          if (["+", "*"].includes(r[u].flag)) {
            while (o < n.length) {
              s = e(r[u].patterns, n.slice(o));
              if (s === -1) {
                break;
              }
              o += s;
            }
            o -= 1;
            u++;
            continue;
          } else if (r[u].flag === "?") {
            s = e(r[u].patterns, n.slice(o));
            if (s === -1) {
              o -= 2;
            } else {
              u++;
            }
            continue;
          }
        } else if (r[u] instanceof RegExp) {
          if (!n[o].match(r[u])) {
            return -1;
          }
        } else if (ps.LString.isString(r[u])) {
          if (r[u].valueOf() !== n[o]) {
            return -1;
          }
        } else if (_(r[u]) === "symbol") {
          if (r[u] === Symbol["for"]("*")) {
            a[u] = a[u] || 0;
            if (["(", "["].includes(n[o])) {
              a[u]++;
            } else if ([")", "]"].includes(n[o])) {
              a[u]--;
            }
            if (
              (typeof r[u + 1] !== "undefined" && a[u] === 0 && i() === -1) ||
              a[u] > 0
            ) {
              continue;
            }
          } else if (t()) {
            return -1;
          }
        } else if (r[u] instanceof Array) {
          var c = f(r[u], n.slice(o));
          if (c === -1 || c + o > n.length) {
            return -1;
          }
          o += c - 1;
          u++;
          continue;
        } else {
          return -1;
        }
        u++;
      }
      if (r.length !== u) {
        return -1;
      }
      return n.length;
    }
  }
  function _i(e) {
    this.__code__ = e.replace(/\r/g, "");
  }
  _i.defaults = {
    offset: 0,
    indent: 2,
    exceptions: {
      specials: [
        /^(?:#:)?(?:define(?:-values|-syntax|-macro|-class|-record-type)?|(?:call-with-(?:input-file|output-file|port))|lambda|let-env|try|catch|when|unless|while|syntax-rules|(let|letrec)(-syntax|\*)?)$/,
      ],
      shift: { 1: ["&", "#"] },
    },
  };
  _i.match = pi;
  _i.prototype._options = function e(t) {
    var r = _i.defaults;
    if (typeof t === "undefined") {
      return Object.assign({}, r);
    }
    var n = (t && t.exceptions) || {};
    var i = n.specials || [];
    var u = n.shift || { 1: [] };
    return Br(
      Br(Br({}, r), t),
      {},
      {
        exceptions: {
          specials: [].concat(k(r.exceptions.specials), k(i)),
          shift: Br(
            Br({}, u),
            {},
            { 1: [].concat(k(r.exceptions.shift[1]), k(u[1])) }
          ),
        },
      }
    );
  };
  _i.prototype.indent = function e(t) {
    var r = Nn(this.__code__, true);
    return this._indent(r, t);
  };
  _i.exception_shift = function (u, e) {
    function t(e) {
      if (!e.length) {
        return false;
      }
      if (e.indexOf(u) !== -1) {
        return true;
      } else {
        var t = e.filter(function (e) {
          return e instanceof RegExp;
        });
        if (!t.length) {
          return false;
        }
        var r = Cr(t),
          n;
        try {
          for (r.s(); !(n = r.n()).done; ) {
            var i = n.value;
            if (u.match(i)) {
              return true;
            }
          }
        } catch (e) {
          r.e(e);
        } finally {
          r.f();
        }
      }
      return false;
    }
    if (t(e.exceptions.specials)) {
      return e.indent;
    }
    var r = e.exceptions.shift;
    for (var n = 0, i = Object.entries(r); n < i.length; n++) {
      var a = A(i[n], 2),
        o = a[0],
        s = a[1];
      if (t(s)) {
        return +o;
      }
    }
    return -1;
  };
  _i.prototype._indent = function e(t, r) {
    var n = this._options(r);
    var i = hi(t);
    var u = li(t);
    var a = t[t.length - u.length - 1];
    var o = t[t.length - 1];
    if (o.token.match(/^"[\S\s]+[^"]$/)) {
      return i + n.indent;
    }
    if (u && u.length) {
      if (u[0].line > 0) {
        n.offset = 0;
      }
      if (u.toString() === t.toString() && To(u)) {
        return n.offset + u[0].col;
      } else if (u.length === 1) {
        return n.offset + u[0].col + 1;
      } else {
        var s = -1;
        if (a) {
          var c = _i.exception_shift(a.token, n);
          if (c !== -1) {
            s = c;
          }
        }
        if (s === -1) {
          s = _i.exception_shift(u[1].token, n);
        }
        if (s !== -1) {
          return n.offset + u[0].col + s;
        } else if (u[0].line < u[1].line) {
          return n.offset + u[0].col + 1;
        } else if (u.length > 3 && u[1].line === u[3].line) {
          if (u[1].token === "(" || u[1].token === "[") {
            return n.offset + u[1].col;
          }
          return n.offset + u[3].col;
        } else if (u[0].line === u[1].line) {
          return n.offset + n.indent + u[0].col;
        } else {
          var f = u.slice(2);
          for (var l = 0; l < f.length; ++l) {
            var h = f[l];
            if (h.token.trim()) {
              return h.col;
            }
          }
        }
      }
    } else {
      return 0;
    }
    return i + n.indent;
  };
  function di(e) {
    this.pattern = e;
  }
  di.prototype.toString = function () {
    return "#<pattern(".concat(this.pattern, ")>");
  };
  di.prototype.match = function (e) {
    return e.match(this.pattern);
  };
  function vi() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
      t[r] = arguments[r];
    }
    var n = t.pop();
    this.patterns = t;
    this.flag = n;
  }
  vi.prototype.toString = function () {
    var e = this.patterns
      .map(function (e) {
        return Zi(e);
      })
      .join("|");
    return "#<pattern(".concat(e, " ").concat(this.flag, ")>");
  };
  _i.Pattern = vi;
  _i.Ahead = di;
  var mi = /^[[(]$/;
  var yi = /^[\])]$/;
  var gi = /[^()[\]]/;
  var bi = new di(/[^)\]]/);
  var wi = Symbol["for"]("*");
  var Di = new vi([mi, wi, yi], [gi], "+");
  var Ei = new vi([mi, wi, yi], "+");
  var Ai = new vi([Symbol["for"]("symbol")], "?");
  var Fi = new vi([Symbol["for"]("symbol")], "*");
  var xi = [mi, Fi, yi];
  var Ci = new vi([mi, Symbol["for"]("symbol"), wi, yi], "+");
  var ki = Bi("define", "lambda", "define-macro", "syntax-rules");
  var Oi =
    /^(?!.*\b(?:[()[\]]|define(?:-macro)?|let(?:\*|rec|-env|-syntax|)?|lambda|syntax-rules)\b).*$/;
  var Si = /^(?:#:)?(let(?:\*|rec|-env|-syntax)?)$/;
  function Bi() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
      t[r] = arguments[r];
    }
    return new RegExp("^(?:#:)?(?:".concat(t.join("|"), ")$"));
  }
  _i.rules = [
    [[Ei], 0, bi],
    [[mi, Bi("begin", "cond-expand")], 1],
    [[mi, Si, Ai, mi, Ci, yi], 1],
    [[mi, Si, Ai, Di], 1, bi],
    [[mi, Si, mi, Ci], 1, bi],
    [[mi, Oi, new vi([/[^()[\]]/], "+"), Ei], 1, bi],
    [[mi, Ei], 1, bi],
    [[mi, gi, Ei], 1, bi],
    [[mi, Bi("lambda", "if"), gi], 1, bi],
    [[mi, Bi("while"), gi, Ei], 1, bi],
    [[mi, Bi("if"), gi, wi], 1],
    [[mi, ki, xi], 0, bi],
    [[mi, ki, xi, Cn], 0, bi],
    [[mi, ki, xi, Cn, Ei], 0, bi],
    [[mi, ki, xi, Ei], 0, bi],
  ];
  _i.prototype["break"] = function () {
    var e = this.__code__.replace(/\n[ \t]*/g, "\n ").replace(/^\s+/, "");
    var t = function e(t) {
      if (t.token.match(Cn) || t.token.match(Jr)) {
        return t.token;
      } else {
        return t.token.replace(/\s+/, " ");
      }
    };
    var r = function e(t) {
      for (var r = t.length; r--; ) {
        var n = t[r];
        if (n.trim() && !Gn(n)) {
          return t.length - r - 1;
        }
      }
    };
    var n = Nn(e, true)
      .map(t)
      .filter(function (e) {
        return e !== "\n";
      });
    var i = _i.rules;
    e: for (var u = 1; u < n.length; ++u) {
      if (!n[u].trim()) {
        continue;
      }
      var a = n.slice(0, u);
      var o = {};
      i.map(function (e) {
        return e[1];
      }).forEach(function (e) {
        e = e.valueOf();
        if (e > 0 && !o[e]) {
          o[e] = li(a, e);
        }
      });
      var s = Cr(i),
        c;
      try {
        for (s.s(); !(c = s.n()).done; ) {
          var f = A(c.value, 3),
            l = f[0],
            h = f[1],
            p = f[2];
          h = h.valueOf();
          var _ = h > 0 ? o[h] : a;
          var d = _.filter(function (e) {
            return e.trim() && !Gn(e);
          });
          var v = r(_);
          var m = pi(l, d);
          var y = n.slice(u).find(function (e) {
            return e.trim() && !Gn(e);
          });
          if (m && ((p instanceof di && p.match(y)) || !p)) {
            var g = u - v;
            if (n[g] !== "\n") {
              if (!n[g].trim()) {
                n[g] = "\n";
              } else {
                n.splice(g, 0, "\n");
                u++;
              }
            }
            u += v;
            continue e;
          }
        }
      } catch (e) {
        s.e(e);
      } finally {
        s.f();
      }
    }
    this.__code__ = n.join("");
    return this;
  };
  _i.prototype._spaces = function (e) {
    return new Array(e + 1).join(" ");
  };
  _i.prototype.format = function e(t) {
    var r = this.__code__.replace(/[ \t]*\n[ \t]*/g, "\n ");
    var n = Nn(r, true);
    var i = this._options(t);
    var u = 0;
    var a = 0;
    for (var o = 0; o < n.length; ++o) {
      var s = n[o];
      if (s.token === "\n") {
        u = this._indent(n.slice(0, o), i);
        a += u;
        if (n[o + 1]) {
          n[o + 1].token = this._spaces(u);
          u--;
          a--;
          for (var c = o + 2; c < n.length; ++c) {
            n[c].offset += a;
            n[c].col += u;
            if (n[c].token === "\n") {
              o = c - 1;
              break;
            }
          }
        }
      }
    }
    return n
      .map(function (e) {
        if (e.token.match(Cn)) {
          if (e.token.match(/\n/)) {
            var t = new Array(e.col + 1).join(" ");
            var r = e.token.split("\n");
            e.token = [r[0]]
              .concat(
                r.slice(1).map(function (e) {
                  return t + e;
                })
              )
              .join("\n");
          }
        }
        return e.token;
      })
      .join("");
  };
  function ji(e, t) {
    var r = Object.prototype.toString;
    var n = "[object Array]";
    var i = [];
    var u = (t && e) || e.slice();
    var a;
    if (!e.length) {
      return i;
    }
    a = u.pop();
    do {
      if (r.call(a) === n) {
        u.push.apply(u, a);
      } else {
        i.push(a);
      }
    } while (u.length && (a = u.pop()) !== undefined);
    i.reverse();
    return i;
  }
  function Ii() {}
  Ii.prototype.toString = function () {
    return "()";
  };
  Ii.prototype.valueOf = function () {
    return undefined;
  };
  Ii.prototype.serialize = function () {
    return 0;
  };
  Ii.prototype.to_object = function () {
    return {};
  };
  Ii.prototype.append = function (e) {
    return new Ni(e, Pi);
  };
  Ii.prototype.to_array = function () {
    return [];
  };
  var Pi = new Ii();
  function Ni(e, t) {
    if (
      (typeof this !== "undefined" && this.constructor !== Ni) ||
      typeof this === "undefined"
    ) {
      return new Ni(e, t);
    }
    this.car = e;
    this.cdr = t;
  }
  function Ri(u, a) {
    return function e(t) {
      yo(u, t, ["pair", "nil"]);
      if (t === Pi) {
        return [];
      }
      var r = [];
      var n = t;
      while (true) {
        if (n instanceof Ni) {
          if (n.haveCycles("cdr")) {
            break;
          }
          var i = n.car;
          if (a && i instanceof Ni) {
            i = this.get(u).call(this, i);
          }
          r.push(i);
          n = n.cdr;
        } else if (n === Pi) {
          break;
        } else {
          throw new Error("".concat(u, ": can't convert improper list"));
        }
      }
      return r;
    };
  }
  Ni.prototype.flatten = function () {
    return Ni.fromArray(ji(this.to_array()));
  };
  Ni.prototype.length = function () {
    var e = 0;
    var t = this;
    while (true) {
      if (!t || t === Pi || !(t instanceof Ni) || t.haveCycles("cdr")) {
        break;
      }
      e++;
      t = t.cdr;
    }
    return e;
  };
  Ni.match = function (e, t) {
    if (e instanceof Ln) {
      return Ln.is(e, t);
    } else if (e instanceof Ni) {
      return Ni.match(e.car, t) || Ni.match(e.cdr, t);
    } else if (Array.isArray(e)) {
      return e.some(function (e) {
        return Ni.match(e, t);
      });
    } else if (Li(e)) {
      return Object.values(e).some(function (e) {
        return Ni.match(e, t);
      });
    }
    return false;
  };
  Ni.prototype.find = function (e) {
    return Ni.match(this, e);
  };
  Ni.prototype.clone = function () {
    var r =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var n = new Map();
    function i(e) {
      if (e instanceof Ni) {
        if (n.has(e)) {
          return n.get(e);
        }
        var t = new Ni();
        n.set(e, t);
        if (r) {
          t.car = i(e.car);
        } else {
          t.car = e.car;
        }
        t.cdr = i(e.cdr);
        t[Ru] = e[Ru];
        return t;
      }
      return e;
    }
    return i(this);
  };
  Ni.prototype.last_pair = function () {
    var e = this;
    while (true) {
      if (e.cdr === Pi) {
        return e;
      }
      e = e.cdr;
    }
  };
  Ni.prototype.to_array = function () {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var t = [];
    if (this.car instanceof Ni) {
      if (e) {
        t.push(this.car.to_array());
      } else {
        t.push(this.car);
      }
    } else {
      t.push(this.car.valueOf());
    }
    if (this.cdr instanceof Ni) {
      t = t.concat(this.cdr.to_array());
    }
    return t;
  };
  Ni.fromArray = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var r =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (e instanceof Ni || (r && e instanceof Array && e[Pu])) {
      return e;
    }
    if (t === false) {
      var n = Pi;
      for (var i = e.length; i--; ) {
        n = new Ni(e[i], n);
      }
      return n;
    }
    if (e.length && !(e instanceof Array)) {
      e = k(e);
    }
    var u = Pi;
    var a = e.length;
    while (a--) {
      var o = e[a];
      if (o instanceof Array) {
        o = Ni.fromArray(o, t, r);
      } else if (typeof o === "string") {
        o = sa(o);
      } else if (typeof o === "number" && !Number.isNaN(o)) {
        o = da(o);
      }
      u = new Ni(o, u);
    }
    return u;
  };
  Ni.prototype.to_object = function () {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var t = this;
    var r = {};
    while (true) {
      if (t instanceof Ni && t.car instanceof Ni) {
        var n = t.car;
        var i = n.car;
        if (i instanceof Ln) {
          i = i.__name__;
        }
        if (i instanceof sa) {
          i = i.valueOf();
        }
        var u = n.cdr;
        if (u instanceof Ni) {
          u = u.to_object(e);
        }
        if (bo(u)) {
          if (!e) {
            u = u.valueOf();
          }
        }
        r[i] = u;
        t = t.cdr;
      } else {
        break;
      }
    }
    return r;
  };
  Ni.fromPairs = function (e) {
    return e.reduce(function (e, t) {
      return new Ni(new Ni(new Ln(t[0]), t[1]), e);
    }, Pi);
  };
  Ni.fromObject = function (t) {
    var e = Object.keys(t).map(function (e) {
      return [e, t[e]];
    });
    return Ni.fromPairs(e);
  };
  Ni.prototype.reduce = function (e) {
    var t = this;
    var r = Pi;
    while (true) {
      if (t !== Pi) {
        r = e(r, t.car);
        t = t.cdr;
      } else {
        break;
      }
    }
    return r;
  };
  Ni.prototype.reverse = function () {
    if (this.haveCycles()) {
      throw new Error("You can't reverse list that have cycles");
    }
    var e = this;
    var t = Pi;
    while (e !== Pi) {
      var r = e.cdr;
      e.cdr = t;
      t = e;
      e = r;
    }
    return t;
  };
  Ni.prototype.transform = function (n) {
    function i(e) {
      if (e instanceof Ni) {
        if (e.replace) {
          delete e.replace;
          return e;
        }
        var t = n(e.car);
        if (t instanceof Ni) {
          t = i(t);
        }
        var r = n(e.cdr);
        if (r instanceof Ni) {
          r = i(r);
        }
        return new Ni(t, r);
      }
      return e;
    }
    return i(this);
  };
  Ni.prototype.map = function (e) {
    if (typeof this.car !== "undefined") {
      return new Ni(e(this.car), this.cdr === Pi ? Pi : this.cdr.map(e));
    } else {
      return Pi;
    }
  };
  var Ti = new Map();
  function Li(e) {
    return e && _(e) === "object" && e.constructor === Object;
  }
  var Ui = Object.getOwnPropertyNames(Array.prototype);
  var qi = [];
  Ui.forEach(function (e) {
    qi.push(Array[e], Array.prototype[e]);
  });
  function Mi(e) {
    e = Fu(e);
    return qi.includes(e);
  }
  function Yi(e) {
    return vu(e) && (Vu(e) || e.__doc__);
  }
  function $i(r) {
    var e = r.constructor || Object;
    var n = Li(r);
    var i = vu(r[Symbol.asyncIterator]) || vu(r[Symbol.iterator]);
    var u;
    if (Ti.has(e)) {
      u = Ti.get(e);
    } else {
      Ti.forEach(function (e, t) {
        t = Fu(t);
        if (
          r.constructor === t &&
          ((t === Object && n && !i) || t !== Object)
        ) {
          u = e;
        }
      });
    }
    return u;
  }
  var zi = new Map();
  [
    [true, "#t"],
    [false, "#f"],
    [null, "null"],
    [undefined, "#<undefined>"],
  ].forEach(function (e) {
    var t = A(e, 2),
      r = t[0],
      n = t[1];
    zi.set(r, n);
  });
  function Vi(r) {
    if (r && _(r) === "object") {
      var n = {};
      var e = Object.getOwnPropertySymbols(r);
      e.forEach(function (e) {
        var t = e.toString().replace(/Symbol\(([^)]+)\)/, "$1");
        n[t] = Zi(r[e]);
      });
      var t = Object.getOwnPropertyNames(r);
      t.forEach(function (e) {
        var t = r[e];
        if (t && _(t) === "object" && t.constructor === Object) {
          n[e] = Vi(t);
        } else {
          n[e] = Zi(t);
        }
      });
      return n;
    }
    return r;
  }
  function Ji(e) {
    return Object.keys(e).concat(Object.getOwnPropertySymbols(e));
  }
  function Gi(e, t) {
    return e.hasOwnProperty(t) && vu(e.toString);
  }
  function Hi(e) {
    if (Hu(e)) {
      return "#<procedure(native)>";
    }
    var t = e.prototype && e.prototype.constructor;
    if (vu(t) && Vu(t)) {
      if (e[Tu] && t.hasOwnProperty("__name__")) {
        var r = t.__name__;
        if (sa.isString(r)) {
          r = r.toString();
          return "#<class:".concat(r, ">");
        }
        return "#<class>";
      }
    }
    if (e.hasOwnProperty("__name__")) {
      var n = e.__name__;
      if (_(n) === "symbol") {
        n = Un(n);
      }
      if (typeof n === "string") {
        return "#<procedure:".concat(n, ">");
      }
    }
    if (Gi(e, "toString")) {
      return e.toString();
    } else if (e.name && !Vu(e)) {
      return "#<procedure:".concat(e.name.trim(), ">");
    } else {
      return "#<procedure>";
    }
  }
  var Wi = new Map();
  [
    [
      Error,
      function (e) {
        return e.message;
      },
    ],
    [
      Ni,
      function (e, t) {
        var r = t.quote,
          n = t.skip_cycles,
          i = t.pair_args;
        if (!n) {
          e.markCycles();
        }
        return e.toString.apply(e, [r].concat(k(i)));
      },
    ],
    [
      oa,
      function (e, t) {
        var r = t.quote;
        if (r) {
          return e.toString();
        }
        return e.valueOf();
      },
    ],
    [
      sa,
      function (e, t) {
        var r = t.quote;
        e = e.toString();
        if (r) {
          return JSON.stringify(e).replace(/\\n/g, "\n");
        }
        return e;
      },
    ],
    [
      RegExp,
      function (e) {
        return "#" + e.toString();
      },
    ],
  ].forEach(function (e) {
    var t = A(e, 2),
      r = t[0],
      n = t[1];
    Wi.set(r, n);
  });
  var Qi = [Ln, da, au, Wa, Sa, Ba, Ga, Yn];
  function Zi(e, t, r) {
    if (typeof jQuery !== "undefined" && e instanceof jQuery.fn.init) {
      return "#<jQuery(" + e.length + ")>";
    }
    if (zi.has(e)) {
      return zi.get(e);
    }
    if (Ki(e)) {
      return "#<prototype>";
    }
    if (e) {
      var n = e.constructor;
      if (Wi.has(n)) {
        for (
          var i = arguments.length, u = new Array(i > 3 ? i - 3 : 0), a = 3;
          a < i;
          a++
        ) {
          u[a - 3] = arguments[a];
        }
        return Wi.get(n)(e, { quote: t, skip_cycles: r, pair_args: u });
      }
    }
    var o = Cr(Qi),
      s;
    try {
      for (o.s(); !(s = o.n()).done; ) {
        var c = s.value;
        if (e instanceof c) {
          return e.toString(t);
        }
      }
    } catch (e) {
      o.e(e);
    } finally {
      o.f();
    }
    if ([Pi, $a].includes(e)) {
      return e.toString();
    }
    if (vu(e)) {
      return Hi(e);
    }
    if (e === jr) {
      return "#<js:global>";
    }
    if (e === null) {
      return "null";
    }
    if (_(e) === "object") {
      var f = e.constructor;
      if (!f) {
        f = Object;
      }
      var l;
      if (typeof f.__class__ === "string") {
        l = f.__class__;
      } else {
        var h = $i(e);
        if (h) {
          if (vu(h)) {
            return h(e, t);
          } else {
            throw new Error("toString: Invalid repr value");
          }
        }
        l = f.name;
      }
      if (vu(e.toString) && Vu(e.toString)) {
        return e.toString().valueOf();
      }
      if (Ao(e) === "instance") {
        if (Vu(f) && f.__name__) {
          l = f.__name__.valueOf();
        } else if (!Hu(f)) {
          l = "instance";
        }
      }
      if (Do(e, Symbol.iterator)) {
        if (l) {
          return "#<iterator(".concat(l, ")>");
        }
        return "#<iterator>";
      }
      if (Do(e, Symbol.asyncIterator)) {
        if (l) {
          return "#<asyncIterator(".concat(l, ")>");
        }
        return "#<asyncIterator>";
      }
      if (l !== "") {
        return "#<" + l + ">";
      }
      return "#<Object>";
    }
    if (typeof e !== "string") {
      return e.toString();
    }
    return e;
  }
  function Ki(e) {
    return (
      e &&
      _(e) === "object" &&
      e.hasOwnProperty &&
      e.hasOwnProperty("constructor") &&
      typeof e.constructor === "function" &&
      e.constructor.prototype === e
    );
  }
  Ni.prototype.markCycles = function () {
    Xi(this);
    return this;
  };
  Ni.prototype.haveCycles = function () {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    if (!e) {
      return this.haveCycles("car") || this.haveCycles("cdr");
    }
    return !!(this[Ru] && this[Ru][e]);
  };
  function Xi(e) {
    var t = [];
    var i = [];
    var u = [];
    function a(e) {
      if (!t.includes(e)) {
        t.push(e);
      }
    }
    function o(e, t, r, n) {
      if (r instanceof Ni) {
        if (n.includes(r)) {
          if (!u.includes(r)) {
            u.push(r);
          }
          if (!e[Ru]) {
            e[Ru] = {};
          }
          e[Ru][t] = r;
          if (!i.includes(e)) {
            i.push(e);
          }
          return true;
        }
      }
    }
    var s = In(function e(t, r) {
      if (t instanceof Ni) {
        delete t.ref;
        delete t[Ru];
        a(t);
        r.push(t);
        var n = o(t, "car", t.car, r);
        var i = o(t, "cdr", t.cdr, r);
        if (!n) {
          s(t.car, r.slice());
        }
        if (!i) {
          return new jn(function () {
            return e(t.cdr, r.slice());
          });
        }
      }
    });
    function r(e, t) {
      if (e[Ru][t] instanceof Ni) {
        var r = n.indexOf(e[Ru][t]);
        e[Ru][t] = "#".concat(r, "#");
      }
    }
    s(e, []);
    var n = t.filter(function (e) {
      return u.includes(e);
    });
    n.forEach(function (e, t) {
      e[Nu] = "#".concat(t, "=");
    });
    i.forEach(function (e) {
      r(e, "car");
      r(e, "cdr");
    });
  }
  Ni.prototype.toString = function (e) {
    var t =
        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      r = t.nested,
      n = r === void 0 ? false : r;
    var i = [];
    if (this[Nu]) {
      i.push(this[Nu] + "(");
    } else if (!n) {
      i.push("(");
    }
    var u;
    if (this[Ru] && this[Ru].car) {
      u = this[Ru].car;
    } else {
      u = Zi(this.car, e, true);
    }
    if (u !== undefined) {
      i.push(u);
    }
    if (this.cdr instanceof Ni) {
      if (this[Ru] && this[Ru].cdr) {
        i.push(" . ");
        i.push(this[Ru].cdr);
      } else {
        if (this.cdr[Nu]) {
          i.push(" . ");
        } else {
          i.push(" ");
        }
        var a = this.cdr.toString(e, { nested: true });
        i.push(a);
      }
    } else if (this.cdr !== Pi) {
      i = i.concat([" . ", Zi(this.cdr, e, true)]);
    }
    if (!n || this[Nu]) {
      i.push(")");
    }
    return i.join("");
  };
  Ni.prototype.set = function (e, t) {
    this[e] = t;
    if (t instanceof Ni) {
      this.markCycles();
    }
  };
  Ni.prototype.append = function (e) {
    if (e instanceof Array) {
      return this.append(Ni.fromArray(e));
    }
    var t = this;
    if (t.car === undefined) {
      if (e instanceof Ni) {
        this.car = e.car;
        this.cdr = e.cdr;
      } else {
        this.car = e;
      }
    } else if (e !== Pi) {
      while (true) {
        if (t instanceof Ni && t.cdr !== Pi) {
          t = t.cdr;
        } else {
          break;
        }
      }
      t.cdr = e;
    }
    return this;
  };
  Ni.prototype.serialize = function () {
    return [this.car, this.cdr];
  };
  Ni.prototype[Symbol.iterator] = function () {
    var r = this;
    return {
      next: function e() {
        var t = r;
        r = t.cdr;
        if (t === Pi) {
          return { value: undefined, done: true };
        } else {
          return { value: t.car, done: false };
        }
      },
    };
  };
  function eu(e) {
    return e < 0 ? -e : e;
  }
  function tu(e, t) {
    var r = h(t),
      n = r[0],
      i = r.slice(1);
    while (i.length > 0) {
      var u = i,
        a = A(u, 1),
        o = a[0];
      if (!e(n, o)) {
        return false;
      }
      var s = i;
      var c = h(s);
      n = c[0];
      i = c.slice(1);
    }
    return true;
  }
  function ru(e, t) {
    if (vu(e)) {
      return vu(t) && Fu(e) === Fu(t);
    } else if (e instanceof da) {
      if (!(t instanceof da)) {
        return false;
      }
      var r;
      if (e.__type__ === t.__type__) {
        if (e.__type__ === "complex") {
          r =
            e.__im__.__type__ === t.__im__.__type__ &&
            e.__re__.__type__ === t.__re__.__type__;
        } else {
          r = true;
        }
        if (r && e.cmp(t) === 0) {
          if (e.valueOf() === 0) {
            return Object.is(e.valueOf(), t.valueOf());
          }
          return true;
        }
      }
      return false;
    } else if (typeof e === "number") {
      if (typeof t !== "number") {
        return false;
      }
      if (Number.isNaN(e)) {
        return Number.isNaN(t);
      }
      if (e === Number.NEGATIVE_INFINITY) {
        return t === Number.NEGATIVE_INFINITY;
      }
      if (e === Number.POSITIVE_INFINITY) {
        return t === Number.POSITIVE_INFINITY;
      }
      return ru(da(e), da(t));
    } else if (e instanceof oa) {
      if (!(t instanceof oa)) {
        return false;
      }
      return e.__char__ === t.__char__;
    } else {
      return e === t;
    }
  }
  function nu(e, t) {
    if (Ao(e) !== Ao(t)) {
      return false;
    }
    if (!iu(e)) {
      return false;
    }
    if (e instanceof RegExp) {
      return e.source === t.source;
    }
    if (e instanceof sa) {
      return e.valueOf() === t.valueOf();
    }
    return ru(e, t);
  }
  function iu(e) {
    return (
      e instanceof Ln ||
      sa.isString(e) ||
      e === Pi ||
      e === null ||
      e instanceof oa ||
      e instanceof da ||
      e === true ||
      e === false
    );
  }
  var uu = (function () {
    if (Math.trunc) {
      return Math.trunc;
    } else {
      return function (e) {
        if (e === 0) {
          return 0;
        } else if (e < 0) {
          return Math.ceil(e);
        } else {
          return Math.floor(e);
        }
      };
    }
  })();
  function au(e, t, r, n) {
    if (
      (typeof this !== "undefined" && this.constructor !== au) ||
      typeof this === "undefined"
    ) {
      return new au(e, t);
    }
    yo("Macro", e, "string", 1);
    yo("Macro", t, "function", 2);
    if (r) {
      if (n) {
        this.__doc__ = r;
      } else {
        this.__doc__ = fi(r);
      }
    }
    this.__name__ = e;
    this.__fn__ = t;
  }
  au.defmacro = function (e, t, r, n) {
    var i = new au(e, t, r, n);
    i.__defmacro__ = true;
    return i;
  };
  au.prototype.invoke = function (e, t, r) {
    var n = t.env,
      i = t.dynamic_scope,
      u = t.error;
    var a = { dynamic_scope: i, error: u, macro_expand: r };
    var o = this.__fn__.call(n, e, a, this.__name__);
    return o;
  };
  au.prototype.toString = function () {
    return "#<macro:".concat(this.__name__, ">");
  };
  var ou = "define-macro";
  var su = -1e4;
  function cu(c) {
    return (function () {
      var r = O(
        j.mark(function e(r, y) {
          var u, g, n, i, a, b, w, D, E, A, F, x, o, C, s;
          return j.wrap(
            function e(t) {
              while (1) {
                switch ((t.prev = t.next)) {
                  case 0:
                    s = function e() {
                      s = O(
                        j.mark(function e(r, n, i) {
                          var u, a, o, s, c, f, l, h, p, _, d, v, m;
                          return j.wrap(function e(t) {
                            while (1) {
                              switch ((t.prev = t.next)) {
                                case 0:
                                  if (
                                    !(r instanceof Ni && r.car instanceof Ln)
                                  ) {
                                    t.next = 50;
                                    break;
                                  }
                                  if (!r[Pu]) {
                                    t.next = 3;
                                    break;
                                  }
                                  return t.abrupt("return", r);
                                case 3:
                                  u = r.car.valueOf();
                                  a = i.get(r.car, { throwError: false });
                                  o = b(r.car);
                                  s = o || w(a, r) || D(a);
                                  if (!(s && r.cdr.car instanceof Ni)) {
                                    t.next = 28;
                                    break;
                                  }
                                  if (!o) {
                                    t.next = 15;
                                    break;
                                  }
                                  g = A(r.cdr.car);
                                  t.next = 12;
                                  return x(r.cdr.car, n);
                                case 12:
                                  c = t.sent;
                                  t.next = 17;
                                  break;
                                case 15:
                                  g = E(r.cdr.car);
                                  c = r.cdr.car;
                                case 17:
                                  t.t0 = Ni;
                                  t.t1 = r.car;
                                  t.t2 = Ni;
                                  t.t3 = c;
                                  t.next = 23;
                                  return C(r.cdr.cdr, n, i);
                                case 23:
                                  t.t4 = t.sent;
                                  t.t5 = new t.t2(t.t3, t.t4);
                                  return t.abrupt(
                                    "return",
                                    new t.t0(t.t1, t.t5)
                                  );
                                case 28:
                                  if (!F(u, a)) {
                                    t.next = 50;
                                    break;
                                  }
                                  f = a instanceof fu ? r : r.cdr;
                                  t.next = 32;
                                  return a.invoke(
                                    f,
                                    Br(Br({}, y), {}, { env: i }),
                                    true
                                  );
                                case 32:
                                  l = t.sent;
                                  if (!(a instanceof fu)) {
                                    t.next = 41;
                                    break;
                                  }
                                  (h = l), (p = h.expr), (_ = h.scope);
                                  if (!(p instanceof Ni)) {
                                    t.next = 40;
                                    break;
                                  }
                                  if (!((n !== -1 && n <= 1) || n < su)) {
                                    t.next = 38;
                                    break;
                                  }
                                  return t.abrupt("return", p);
                                case 38:
                                  if (n !== -1) {
                                    n = n - 1;
                                  }
                                  return t.abrupt("return", C(p, n, _));
                                case 40:
                                  l = p;
                                case 41:
                                  if (!(l instanceof Ln)) {
                                    t.next = 43;
                                    break;
                                  }
                                  return t.abrupt("return", Qa(l));
                                case 43:
                                  if (!(l instanceof Ni)) {
                                    t.next = 48;
                                    break;
                                  }
                                  if (!((n !== -1 && n <= 1) || n < su)) {
                                    t.next = 46;
                                    break;
                                  }
                                  return t.abrupt("return", l);
                                case 46:
                                  if (n !== -1) {
                                    n = n - 1;
                                  }
                                  return t.abrupt("return", C(l, n, i));
                                case 48:
                                  if (!iu(l)) {
                                    t.next = 50;
                                    break;
                                  }
                                  return t.abrupt("return", l);
                                case 50:
                                  d = r.car;
                                  if (!(d instanceof Ni)) {
                                    t.next = 55;
                                    break;
                                  }
                                  t.next = 54;
                                  return C(d, n, i);
                                case 54:
                                  d = t.sent;
                                case 55:
                                  v = r.cdr;
                                  if (!(v instanceof Ni)) {
                                    t.next = 60;
                                    break;
                                  }
                                  t.next = 59;
                                  return C(v, n, i);
                                case 59:
                                  v = t.sent;
                                case 60:
                                  m = new Ni(d, v);
                                  return t.abrupt("return", m);
                                case 62:
                                case "end":
                                  return t.stop();
                              }
                            }
                          }, e);
                        })
                      );
                      return s.apply(this, arguments);
                    };
                    C = function e(t, r, n) {
                      return s.apply(this, arguments);
                    };
                    o = function e() {
                      o = O(
                        j.mark(function e(r, n) {
                          var i;
                          return j.wrap(function e(t) {
                            while (1) {
                              switch ((t.prev = t.next)) {
                                case 0:
                                  if (!(r === Pi)) {
                                    t.next = 2;
                                    break;
                                  }
                                  return t.abrupt("return", Pi);
                                case 2:
                                  i = r.car;
                                  t.t0 = Ni;
                                  t.t1 = Ni;
                                  t.t2 = i.car;
                                  t.next = 8;
                                  return C(i.cdr, n, u);
                                case 8:
                                  t.t3 = t.sent;
                                  t.t4 = new t.t1(t.t2, t.t3);
                                  t.next = 12;
                                  return x(r.cdr);
                                case 12:
                                  t.t5 = t.sent;
                                  return t.abrupt(
                                    "return",
                                    new t.t0(t.t4, t.t5)
                                  );
                                case 14:
                                case "end":
                                  return t.stop();
                              }
                            }
                          }, e);
                        })
                      );
                      return o.apply(this, arguments);
                    };
                    x = function e(t, r) {
                      return o.apply(this, arguments);
                    };
                    F = function e(t, r) {
                      return (
                        r instanceof au && r.__defmacro__ && !g.includes(t)
                      );
                    };
                    A = function e(t) {
                      return [].concat(
                        k(g),
                        k(
                          t.to_array(false).map(function (e) {
                            if (e instanceof Ni) {
                              return e.car.valueOf();
                            }
                            throw new Error("macroexpand: Invalid let binding");
                          })
                        )
                      );
                    };
                    E = function e(t) {
                      var r = [];
                      while (true) {
                        if (t !== Pi) {
                          if (t instanceof Ln) {
                            r.push(t.valueOf());
                            break;
                          }
                          r.push(t.car.valueOf());
                          t = t.cdr;
                        } else {
                          break;
                        }
                      }
                      return [].concat(k(g), r);
                    };
                    D = function e(t) {
                      return t === i;
                    };
                    w = function e(t, r) {
                      return t === a && r.cdr.car instanceof Ni;
                    };
                    b = function e(t) {
                      var r = t.valueOf();
                      return n.includes(r);
                    };
                    u = y["env"] = this;
                    g = [];
                    n = ["let", "let*", "letrec"];
                    i = io.get("lambda");
                    a = io.get("define");
                    if (!(r.cdr instanceof Ni && da.isNumber(r.cdr.car))) {
                      t.next = 21;
                      break;
                    }
                    t.t0 = Qa;
                    t.next = 19;
                    return C(r, r.cdr.car.valueOf(), u);
                  case 19:
                    t.t1 = t.sent.car;
                    return t.abrupt("return", (0, t.t0)(t.t1));
                  case 21:
                    if (!c) {
                      t.next = 27;
                      break;
                    }
                    t.t2 = Qa;
                    t.next = 25;
                    return C(r, 1, u);
                  case 25:
                    t.t3 = t.sent.car;
                    return t.abrupt("return", (0, t.t2)(t.t3));
                  case 27:
                    t.t4 = Qa;
                    t.next = 30;
                    return C(r, -1, u);
                  case 30:
                    t.t5 = t.sent.car;
                    return t.abrupt("return", (0, t.t4)(t.t5));
                  case 32:
                  case "end":
                    return t.stop();
                }
              }
            },
            e,
            this
          );
        })
      );
      return function (e, t) {
        return r.apply(this, arguments);
      };
    })();
  }
  function fu(e, t) {
    this.__env__ = t;
    this.__fn__ = e;
    this.__defmacro__ = true;
  }
  fu.__merge_env__ = Symbol["for"]("merge");
  fu.prototype = Object.create(au.prototype);
  fu.prototype.invoke = function (e, t, r) {
    var n = t.error,
      i = t.env;
    var u = { error: n, env: i, dynamic_scope: this.__env__, macro_expand: r };
    return this.__fn__.call(i, e, u, this.__name__ || "syntax");
  };
  fu.prototype.constructor = fu;
  fu.prototype.toString = function () {
    if (this.__name__) {
      return "#<syntax:".concat(this.__name__, ">");
    }
    return "#<syntax>";
  };
  fu.className = "syntax";
  var lu = (function (e) {
    u(r, e);
    var t = Fr(r);
    function r() {
      y(this, r);
      return t.apply(this, arguments);
    }
    return r;
  })(fu);
  fu.Parameter = lu;
  function hu(e, t, w, D) {
    var r =
      arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var E = { "...": { symbols: {}, lists: [] }, symbols: {} };
    var A = r.expansion,
      F = r.define;
    function x(e) {
      if (Mr()) {
        console.log(e);
      }
    }
    x(w);
    function C(e, t) {
      var r =
        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var n =
        arguments.length > 3 && arguments[3] !== undefined
          ? arguments[3]
          : false;
      x({ code: t && Zi(t, true), pattern: e && Zi(e, true) });
      if (iu(e) && !(e instanceof Ln)) {
        return nu(e, t);
      }
      if (e instanceof Ln && w.includes(e.literal())) {
        var i = A.ref(t);
        if (Ln.is(t, e)) {
          if (typeof i === "undefined") {
            return true;
          }
          return i === F || i === io;
        }
        return false;
      }
      if (
        e instanceof Ni &&
        e.car instanceof Ni &&
        e.car.cdr instanceof Ni &&
        Ln.is(e.car.cdr.car, D)
      ) {
        x(">> 0");
        if (t === Pi) {
          x({ pattern: e.toString() });
          if (e.car.car instanceof Ln) {
            if (e.car.cdr instanceof Ni && Ln.is(e.car.cdr.car, D)) {
              var u = e.car.car.valueOf();
              var a = e.last_pair();
              if (Ln.is(a.car, D)) {
                E["..."].symbols[u] = null;
                return true;
              } else {
                return false;
              }
            }
            var o = e.car.car.valueOf();
            if (E["..."].symbols[o]) {
              throw new Error(
                "syntax: named ellipsis can only " + "appear onces"
              );
            }
            E["..."].symbols[o] = t;
          }
        }
      }
      if (e instanceof Ni && e.cdr instanceof Ni && Ln.is(e.cdr.car, D)) {
        if (e.cdr.cdr !== Pi) {
          if (e.cdr.cdr instanceof Ni) {
            var s = e.cdr.cdr.length();
            var c = t.length();
            var f = t;
            while (c - 1 > s) {
              f = f.cdr;
              c--;
            }
            var l = f.cdr;
            f.cdr = Pi;
            if (!C(e.cdr.cdr, l, r, n)) {
              return false;
            }
          }
        }
        if (e.car instanceof Ln) {
          var h = e.car.__name__;
          if (E["..."].symbols[h] && !r.includes(h) && !n) {
            throw new Error("syntax: named ellipsis can only appear onces");
          }
          x(">> 1");
          if (t === Pi) {
            x(">> 2");
            if (n) {
              x("NIL");
              E["..."].symbols[h] = Pi;
            } else {
              x("NULL");
              E["..."].symbols[h] = null;
            }
          } else if (t instanceof Ni && (t.car instanceof Ni || t.car === Pi)) {
            x(">> 3 " + n);
            if (n) {
              if (E["..."].symbols[h]) {
                var p = E["..."].symbols[h];
                if (p === Pi) {
                  p = new Ni(Pi, new Ni(t, Pi));
                } else {
                  p = p.append(new Ni(t, Pi));
                }
                E["..."].symbols[h] = p;
              } else {
                E["..."].symbols[h] = new Ni(t, Pi);
              }
            } else {
              x(">> 4");
              E["..."].symbols[h] = new Ni(t, Pi);
            }
          } else {
            x(">> 6");
            if (t instanceof Ni) {
              x(">> 7 " + n);
              r.push(h);
              if (!E["..."].symbols[h]) {
                E["..."].symbols[h] = new Ni(t, Pi);
              } else {
                var _ = E["..."].symbols[h];
                E["..."].symbols[h] = _.append(new Ni(t, Pi));
              }
              x({ IIIIII: E["..."].symbols[h].toString() });
            } else {
              x(">> 8");
              return false;
            }
          }
          return true;
        } else if (e.car instanceof Ni) {
          var d = k(r);
          if (t === Pi) {
            x(">> 9");
            E["..."].lists.push(Pi);
            return true;
          }
          x(">> 10");
          var v = t;
          while (v instanceof Ni) {
            if (!C(e.car, v.car, d, true)) {
              return false;
            }
            v = v.cdr;
          }
          return true;
        }
        return false;
      }
      if (e instanceof Ln) {
        if (Ln.is(e, D)) {
          throw new Error("syntax: invalid usage of ellipsis");
        }
        x(">> 11");
        var m = e.__name__;
        if (w.includes(m)) {
          return true;
        }
        x({ name: m, ellipsis: n });
        if (n) {
          E["..."].symbols[m] = E["..."].symbols[m] || [];
          E["..."].symbols[m].push(t);
        }
        E.symbols[m] = t;
        if (!E.symbols[m]);
        return true;
      }
      if (e instanceof Ni && t instanceof Ni) {
        x(">> 12");
        x({ a: 12, code: t && t.toString(), pattern: e.toString() });
        if (t.cdr === Pi) {
          var y = e.car instanceof Ln && e.cdr instanceof Ln;
          if (y) {
            if (!C(e.car, t.car, r, n)) {
              return false;
            }
            x(">> 12 | 1");
            var g = e.cdr.valueOf();
            if (!(g in E.symbols)) {
              E.symbols[g] = Pi;
            }
            g = e.car.valueOf();
            if (!(g in E.symbols)) {
              E.symbols[g] = t.car;
            }
            return true;
          }
        }
        x({ pattern: e.toString(), code: t.toString() });
        if (
          e.cdr instanceof Ni &&
          e.car instanceof Ln &&
          e.cdr.cdr instanceof Ni &&
          e.cdr.car instanceof Ln &&
          Ln.is(e.cdr.cdr.car, D) &&
          e.cdr.cdr.cdr instanceof Ni &&
          !Ln.is(e.cdr.cdr.cdr.car, D) &&
          C(e.car, t.car, r, n) &&
          C(e.cdr.cdr.cdr, t.cdr, r, n)
        ) {
          var b = e.cdr.car.__name__;
          x({ pattern: e.car.toString(), code: t.car.toString(), name: b });
          if (w.includes(b)) {
            return true;
          }
          E["..."].symbols[b] = null;
          return true;
        }
        x("recur");
        if (C(e.car, t.car, r, n) && C(e.cdr, t.cdr, r, n)) {
          return true;
        }
      } else if (e === Pi && (t === Pi || t === undefined)) {
        return true;
      } else if (e.car instanceof Ni && Ln.is(e.car.car, D)) {
        throw new Error("syntax: invalid usage of ellipsis");
      } else {
        return false;
      }
    }
    if (C(e, t)) {
      return E;
    }
  }
  function pu(e, i) {
    function u(t) {
      if (t instanceof Ni) {
        if (!i.length) {
          return t;
        }
        var e = u(t.car);
        var r = u(t.cdr);
        return new Ni(e, r);
      } else if (t instanceof Ln) {
        var n = i.find(function (e) {
          return e.gensym === t;
        });
        if (n) {
          return Ln(n.name);
        }
        return t;
      } else {
        return t;
      }
    }
    return u(e);
  }
  function _u() {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var O = e.bindings,
      t = e.expr,
      S = e.scope,
      a = e.symbols,
      c = e.names,
      B = e.ellipsis;
    var f = {};
    function o(e) {
      if (e instanceof Ln) {
        return true;
      }
      return ["string", "symbol"].includes(_(e));
    }
    function j(e) {
      if (!o(e)) {
        var t = Ao(e);
        throw new Error("syntax: internal error, need symbol got ".concat(t));
      }
      var r = e.valueOf();
      if (r === B) {
        throw new Error("syntax: internal error, ellipis not transformed");
      }
      var n = _(r);
      if (["string", "symbol"].includes(n)) {
        if (r in O.symbols) {
          return O.symbols[r];
        } else if (n === "string" && r.match(/\./)) {
          var i = r.split(".");
          var u = i[0];
          if (u in O.symbols) {
            return Ni.fromArray(
              [Ln("."), O.symbols[u]].concat(
                i.slice(1).map(function (e) {
                  return sa(e);
                })
              )
            );
          }
        }
      }
      if (a.includes(r)) {
        return Ln(r);
      }
      return s(r);
    }
    function I(e) {
      if (Mr()) {
        console.log(e);
      }
    }
    function s(e) {
      if (!f[e]) {
        var t = S.ref(e);
        var r = Mn(e);
        if (t) {
          var n = S.get(e);
          S.set(r, n);
        } else {
          var i = S.get(e, { throwError: false });
          if (typeof i !== "undefined") {
            S.set(r, i);
          }
        }
        c.push({ name: e, gensym: r });
        f[e] = r;
        if (typeof e === "string" && e.match(/\./)) {
          var u = e.split(".").filter(Boolean),
            a = h(u),
            o = a[0],
            s = a.slice(1);
          if (f[o]) {
            $u(r, "__object__", [f[o]].concat(k(s)));
          }
        }
      }
      return f[e];
    }
    function P(e, t, r) {
      var n =
        arguments.length > 3 && arguments[3] !== undefined
          ? arguments[3]
          : function () {};
      var i = r.nested;
      I(" ==> " + e.toString(true));
      I(t);
      if (e instanceof Ln) {
        var u = e.valueOf();
        I("[t 1");
        if (t[u]) {
          if (t[u] instanceof Ni) {
            var a = t[u],
              o = a.car,
              s = a.cdr;
            if (i) {
              var c = o.car,
                f = o.cdr;
              if (f !== Pi) {
                n(u, new Ni(f, Pi));
              }
              return c;
            }
            if (s !== Pi) {
              n(u, s);
            }
            return o;
          } else if (t[u] instanceof Array) {
            n(u, t[u].slice(1));
            return t[u][0];
          }
        }
        return j(u);
      }
      if (e instanceof Ni) {
        if (e.car instanceof Ln && e.cdr instanceof Ni && Ln.is(e.cdr.car, B)) {
          I("[t 2");
          var l = e.car.valueOf();
          var h = t[l];
          I({ expr: e.toString(true), name: l, bindings: t, item: h });
          if (h === null) {
            return;
          } else if (h) {
            I({ b: t[l].toString() });
            if (h instanceof Ni) {
              I("[t 2 Pair " + i);
              I({ ______: h.toString() });
              var p = h.car,
                _ = h.cdr;
              if (i) {
                if (_ !== Pi) {
                  I("|| next 1");
                  n(l, _);
                }
                I({ car: p.toString() });
                return p;
              } else {
                if (p.cdr !== Pi) {
                  I("|| next 2");
                  n(l, new Ni(p.cdr, _));
                }
                I({ car: p.car.toString() });
                return p.car;
              }
            } else if (h instanceof Array) {
              I("[t 2 Array " + i);
              if (i) {
                n(l, h.slice(1));
                return Ni.fromArray(h);
              } else {
                var d = h.slice(1);
                if (d.length) {
                  n(l, d);
                }
                return h[0];
              }
            } else {
              return h;
            }
          }
        }
        I("[t 3 recur " + e.toString());
        var v = P(e.car, t, r, n);
        var m = P(e.cdr, t, r, n);
        return new Ni(v, m);
      }
      return e;
    }
    function N(t, r) {
      var e = Object.values(t);
      var n = Object.getOwnPropertySymbols(t);
      if (n.length) {
        e.push.apply(
          e,
          k(
            n.map(function (e) {
              return t[e];
            })
          )
        );
      }
      return (
        e.length &&
        e.every(function (e) {
          if (e === null) {
            return !r;
          }
          return (
            e instanceof Ni || e === Pi || (e instanceof Array && e.length)
          );
        })
      );
    }
    function R(e) {
      return Object.keys(e).concat(Object.getOwnPropertySymbols(e));
    }
    function T(i) {
      var e =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : {},
        t = e.disabled;
      I("traverse>> " + i.toString());
      if (i instanceof Ni) {
        if (!t && i.car instanceof Ni && Ln.is(i.car.car, B)) {
          return T(i.car.cdr, { disabled: true });
        }
        if (i.cdr instanceof Ni && Ln.is(i.cdr.car, B) && !t) {
          I(">> 1");
          var r = O["..."].symbols;
          var n = Object.values(r);
          if (
            n.length &&
            n.every(function (e) {
              return e === null;
            })
          ) {
            return T(i.cdr.cdr, { disabled: t });
          }
          var u = R(r);
          var a = i.car instanceof Ln && Ln.is(i.cdr.cdr.car, B);
          if (i.car instanceof Ni || a) {
            if (O["..."].lists[0] === Pi) {
              return Pi;
            }
            var o = i.car;
            if (a) {
              o = new Ni(i.car, new Ni(i.cdr.car, Pi));
            }
            I(">> 2");
            var s;
            if (u.length) {
              I(">> 2 (a)");
              var c = Br({}, r);
              s = Pi;
              var f = function e() {
                if (!N(c)) {
                  return "break";
                }
                var n = {};
                var t = function e(t, r) {
                  n[t] = r;
                };
                var r = P(o, c, { nested: true }, t);
                if (r !== undefined) {
                  if (a) {
                    if (s === Pi) {
                      s = r;
                    } else {
                      s = s.append(r);
                    }
                  } else {
                    s = new Ni(r, s);
                  }
                }
                c = n;
              };
              while (true) {
                var l = f();
                if (l === "break") break;
              }
              if (s !== Pi && !a) {
                s = s.reverse();
              }
              if (i.cdr.cdr !== Pi && !Ln.is(i.cdr.cdr.car, B)) {
                var h = T(i.cdr.cdr, { disabled: t });
                return s.append(h);
              }
              return s;
            } else {
              I(">> 3");
              var p = P(i.car, r, { nested: true });
              if (p) {
                return new Ni(p, Pi);
              }
              return Pi;
            }
          } else if (i.car instanceof Ln) {
            I(">> 4");
            if (Ln.is(i.cdr.cdr.car, B)) {
              I(">> 4 (a)");
            } else {
              I(">> 4 (b)");
            }
            var _ = i.car.__name__;
            var d = L({}, _, r[_]);
            var v = r[_] === null;
            var m = Pi;
            var y = function e() {
              if (!N(d, true)) {
                I({ bind: d });
                return "break";
              }
              var n = {};
              var t = function e(t, r) {
                n[t] = r;
              };
              var r = P(i, d, { nested: false }, t);
              I({ value: r.toString() });
              if (typeof r !== "undefined") {
                m = new Ni(r, m);
              }
              d = n;
            };
            while (true) {
              var g = y();
              if (g === "break") break;
            }
            if (m !== Pi) {
              m = m.reverse();
            }
            if (i.cdr instanceof Ni) {
              if (i.cdr.cdr instanceof Ni || i.cdr.cdr instanceof Ln) {
                var b = T(i.cdr.cdr, { disabled: t });
                if (v) {
                  return b;
                }
                I("<<<< 1");
                m.append(b);
              }
            }
            I("<<<< 2");
            return m;
          }
        }
        var w = T(i.car, { disabled: t });
        var D;
        var E;
        if (i.car instanceof Ln) {
          var A = S.get(i.car, { throwError: false });
          E = A instanceof au && A.__name__ === "syntax-rules";
        }
        if (E) {
          if (i.cdr.car instanceof Ln) {
            D = new Ni(
              T(i.cdr.car, { disabled: t }),
              new Ni(i.cdr.cdr.car, T(i.cdr.cdr.cdr, { disabled: t }))
            );
          } else {
            D = new Ni(i.cdr.car, T(i.cdr.cdr, { disabled: t }));
          }
          I("REST >>>> " + D.toString());
        } else {
          D = T(i.cdr, { disabled: t });
        }
        I({
          a: true,
          car: Zi(i.car),
          cdr: Zi(i.cdr),
          head: Zi(w),
          rest: Zi(D),
        });
        return new Ni(w, D);
      }
      if (i instanceof Ln) {
        if (t && Ln.is(i, B)) {
          return i;
        }
        var F = Object.keys(O["..."].symbols);
        var x = i.literal();
        if (F.includes(x)) {
          var C = "missing ellipsis symbol next to name `".concat(x, "'");
          throw new Error("syntax-rules: ".concat(C));
        }
        var k = j(i);
        if (typeof k !== "undefined") {
          return k;
        }
      }
      return i;
    }
    return T(t, {});
  }
  function du(e) {
    return bu(e) || e === Pi || e === null;
  }
  function vu(e) {
    return typeof e === "function" && typeof e.bind === "function";
  }
  function mu(e) {
    return e instanceof Bo;
  }
  function yu(e) {
    return vu(e) || mu(e);
  }
  function gu(e) {
    if (e instanceof Yn) {
      return false;
    }
    if (e instanceof Promise) {
      return true;
    }
    return e && vu(e.then);
  }
  function bu(e) {
    return typeof e === "undefined";
  }
  function wu(e) {
    switch (_(e)) {
      case "string":
        return sa(e);
      case "bigint":
        return da(e);
      case "number":
        if (Number.isNaN(e)) {
          return ro;
        } else {
          return da(e);
        }
    }
    return e;
  }
  function Du(n, i) {
    var e = Object.getOwnPropertyNames(n);
    var t = Object.getOwnPropertySymbols(n);
    e.concat(t).forEach(function (e) {
      var t = i(n[e]);
      var r = Object.getOwnPropertyDescriptor(n, e);
      if (!r || (r.writable && n[e] !== t)) {
        n[e] = t;
      }
    });
    return n;
  }
  function Eu(t) {
    var e = [sa, oa, da].some(function (e) {
      return t instanceof e;
    });
    if (e) {
      return t.valueOf();
    }
    if (t instanceof Array) {
      return t.map(Eu);
    }
    if (t instanceof Yn) {
      delete t.then;
    }
    if (Li(t)) {
      return Du(t, Eu);
    }
    return t;
  }
  function Au(e, t) {
    if (e instanceof Ni) {
      e.markCycles();
      return Qa(e);
    }
    if (vu(e)) {
      if (t) {
        return xu(e, t);
      }
    }
    return wu(e);
  }
  function Fu(e) {
    if (ku(e)) {
      return e[Iu];
    }
    return e;
  }
  function xu(e, t) {
    if (e[Symbol["for"]("__bound__")]) {
      return e;
    }
    var r = e.bind(t);
    var n = Object.getOwnPropertyNames(e);
    var i = Cr(n),
      u;
    try {
      for (i.s(); !(u = i.n()).done; ) {
        var a = u.value;
        if (Yu(a)) {
          try {
            r[a] = e[a];
          } catch (e) {}
        }
      }
    } catch (e) {
      i.e(e);
    } finally {
      i.f();
    }
    $u(r, "__fn__", e);
    $u(r, "__context__", t);
    $u(r, "__bound__", true);
    if (Hu(e)) {
      $u(r, "__native__", true);
    }
    if (Li(t) && Vu(e)) {
      $u(r, "__method__", true);
    }
    r.valueOf = function () {
      return e;
    };
    return r;
  }
  function Cu(e) {
    return ku(e) && e[Symbol["for"]("__context__")] === Object;
  }
  function ku(e) {
    return !!(vu(e) && e[Iu]);
  }
  function Ou(e) {
    if (vu(e)) {
      var t = e[ju];
      if (t && (t === ps || (t.constructor && t.constructor.__class__))) {
        return true;
      }
    }
    return false;
  }
  function Su(e) {
    return e instanceof Sa || e instanceof Ba;
  }
  function Bu(e) {
    if (vu(e)) {
      if (Su(e[ju])) {
        return true;
      }
    }
    return false;
  }
  var ju = Symbol["for"]("__context__");
  var Iu = Symbol["for"]("__fn__");
  var Pu = Symbol["for"]("__data__");
  var Nu = Symbol["for"]("__ref__");
  var Ru = Symbol["for"]("__cycles__");
  var Tu = Symbol["for"]("__class__");
  var Lu = Symbol["for"]("__method__");
  var Uu = Symbol["for"]("__prototype__");
  var qu = Symbol["for"]("__lambda__");
  var Mu = ["name", "length", "caller", "callee", "arguments", "prototype"];
  function Yu(e) {
    return !Mu.includes(e);
  }
  function $u(e, t, r) {
    Object.defineProperty(e, Symbol["for"](t), {
      get: function e() {
        return r;
      },
      set: function e() {},
      configurable: false,
      enumerable: false,
    });
  }
  function zu(t, r) {
    try {
      Object.defineProperty(t, "length", {
        get: function e() {
          return r;
        },
      });
      return t;
    } catch (e) {
      var n = new Array(r)
        .fill(0)
        .map(function (e, t) {
          return "a" + t;
        })
        .join(",");
      var i = new Function(
        "f",
        "return function(".concat(
          n,
          ") {\n                return f.apply(this, arguments);\n            };"
        )
      );
      return i(t);
    }
  }
  function Vu(e) {
    return e && e[qu];
  }
  function Ju(e) {
    return e && e[Lu];
  }
  function Gu(e) {
    return Vu(e) && !e[Uu] && !Ju(e) && !Bu(e);
  }
  function Hu(e) {
    var t = Symbol["for"]("__native__");
    return (
      vu(e) &&
      e.toString().match(/\{\s*\[native code\]\s*\}/) &&
      ((e.name.match(/^bound /) && e[t] === true) ||
        (!e.name.match(/^bound /) && !e[t]))
    );
  }
  function Wu(e) {
    var g;
    switch (e) {
      case Symbol["for"]("letrec"):
        g = "letrec";
        break;
      case Symbol["for"]("let"):
        g = "let";
        break;
      case Symbol["for"]("let*"):
        g = "let*";
        break;
      default:
        throw new Error("Invalid let_macro value");
    }
    return au.defmacro(g, function (t, e) {
      var f = e.dynamic_scope,
        l = e.error,
        r = e.macro_expand;
      var h;
      if (t.car instanceof Ln) {
        if (!(t.cdr.car instanceof Ni || t.cdr.car === Pi)) {
          throw new Error("let require list of pairs");
        }
        var n;
        if (t.cdr.car === Pi) {
          h = Pi;
          n = Pi;
        } else {
          n = t.cdr.car.map(function (e) {
            return e.car;
          });
          h = t.cdr.car.map(function (e) {
            return e.cdr.car;
          });
        }
        return Ni.fromArray([
          Ln("letrec"),
          [[t.car, Ni(Ln("lambda"), Ni(n, t.cdr.cdr))]],
          Ni(t.car, h),
        ]);
      } else if (r) {
        return;
      }
      var p = this;
      h = io.get("list->array")(t.car);
      var _ = p.inherit(g);
      var d, v;
      if (g === "let*") {
        v = _;
      } else if (g === "let") {
        d = [];
      }
      var m = 0;
      function y() {
        var e = new Ni(new Ln("begin"), t.cdr);
        return Io(e, { env: _, dynamic_scope: f, error: l });
      }
      return (function t() {
        var r = h[m++];
        if (f) {
          f = g === "let*" ? _ : p;
        }
        if (!r) {
          if (d && d.length) {
            var e = d.map(function (e) {
              return e.value;
            });
            var n = e.filter(gu);
            if (n.length) {
              return $n(e)
                .then(function (e) {
                  for (var t = 0, r = e.length; t < r; ++t) {
                    _.set(d[t].name, e[t]);
                  }
                })
                .then(y);
            } else {
              var i = Cr(d),
                u;
              try {
                for (i.s(); !(u = i.n()).done; ) {
                  var a = u.value,
                    o = a.name,
                    s = a.value;
                  _.set(o, s);
                }
              } catch (e) {
                i.e(e);
              } finally {
                i.f();
              }
            }
          }
          return y();
        } else {
          if (g === "let") {
            v = p;
          } else if (g === "letrec") {
            v = _;
          }
          var c = Io(r.cdr.car, { env: v, dynamic_scope: f, error: l });
          if (g === "let*") {
            v = _ = v.inherit("let*[" + m + "]");
          }
          if (d) {
            d.push({ name: r.car, value: c });
            return t();
          } else {
            return ni(c, function (e) {
              _.set(r.car, e);
              return t();
            });
          }
        }
      })();
    });
  }
  function Qu(e, s) {
    return new au(e, function (e) {
      var t =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : {},
        r = t.dynamic_scope,
        n = t.error;
      var i = this;
      if (r) {
        r = this;
      }
      var u = e;
      var a = [];
      while (u instanceof Ni) {
        a.push(Io(u.car, { env: i, dynamic_scope: r, error: n }));
        u = u.cdr;
      }
      var o = a.filter(gu).length;
      if (o) {
        return $n(a).then(s.bind(this));
      } else {
        return s.call(this, a);
      }
    });
  }
  function Zu(e) {
    for (
      var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1;
      n < t;
      n++
    ) {
      r[n - 1] = arguments[n];
    }
    r.forEach(function (e) {
      yo("", e, "number");
    });
    return e.apply(void 0, r);
  }
  function Ku() {
    var n = this;
    for (var e = arguments.length, i = new Array(e), t = 0; t < e; t++) {
      i[t] = arguments[t];
    }
    i.forEach(function (e, t) {
      yo("pipe", e, "function", t + 1);
    });
    return function () {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
        t[r] = arguments[r];
      }
      return i.reduce(function (e, t) {
        return [t.apply(n, e)];
      }, t)[0];
    };
  }
  function Xu() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
      t[r] = arguments[r];
    }
    t.forEach(function (e, t) {
      yo("compose", e, "function", t + 1);
    });
    return Ku.apply(void 0, k(t.reverse()));
  }
  function ea(a, o) {
    var s = this;
    return function e(t, r) {
      yo(a, t, "function");
      for (
        var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), u = 2;
        u < n;
        u++
      ) {
        i[u - 2] = arguments[u];
      }
      if (i.some(du)) {
        if (typeof r === "number") {
          return da(r);
        }
        return r;
      } else {
        return o.call.apply(o, [s, e, t, r].concat(i));
      }
    };
  }
  function ta(e, t) {
    return aa(e + 1, ua(Zu, t));
  }
  var ra = ua(ta, 1);
  var na = ua(ta, 2);
  function ia(n) {
    var i =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    return function () {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
        t[r] = arguments[r];
      }
      if (i !== null) {
        t = [i].concat(k(t));
      }
      return t.reduce(na(n));
    };
  }
  function ua(u) {
    for (
      var e = arguments.length, t = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    ) {
      t[r - 1] = arguments[r];
    }
    yo("curry", u, "function");
    var a = u.length;
    return function () {
      var n = t.slice();
      function i() {
        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r];
        }
        n = n.concat(t);
        if (n.length >= a) {
          return u.apply(this, n);
        } else {
          return i;
        }
      }
      return i.apply(this, arguments);
    };
  }
  function aa(n, i) {
    yo("limit", i, "function", 2);
    return function () {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
        t[r] = arguments[r];
      }
      return i.apply(void 0, k(t.slice(0, n)));
    };
  }
  function oa(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof oa)) ||
      typeof this === "undefined"
    ) {
      return new oa(e);
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    var t;
    if (Array.from(e).length > 1) {
      e = e.toLowerCase();
      if (oa.__names__[e]) {
        t = e;
        e = oa.__names__[e];
      } else {
        throw new Error("Internal: Unknown named character");
      }
    } else {
      t = oa.__rev_names__[e];
    }
    Object.defineProperty(this, "__char__", { value: e, enumerable: true });
    if (t) {
      Object.defineProperty(this, "__name__", { value: t, enumerable: true });
    }
  }
  oa.__names__ = Kr;
  oa.__rev_names__ = {};
  Object.keys(oa.__names__).forEach(function (e) {
    var t = oa.__names__[e];
    oa.__rev_names__[t] = e;
  });
  oa.prototype.toUpperCase = function () {
    return oa(this.__char__.toUpperCase());
  };
  oa.prototype.toLowerCase = function () {
    return oa(this.__char__.toLowerCase());
  };
  oa.prototype.toString = function () {
    return "#\\" + (this.__name__ || this.__char__);
  };
  oa.prototype.valueOf = oa.prototype.serialize = function () {
    return this.__char__;
  };
  function sa(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof sa)) ||
      typeof this === "undefined"
    ) {
      return new sa(e);
    }
    if (e instanceof Array) {
      this.__string__ = e
        .map(function (e, t) {
          yo("LString", e, "character", t + 1);
          return e.toString();
        })
        .join("");
    } else {
      this.__string__ = e.valueOf();
    }
  }
  {
    var ca = ["length", "constructor"];
    var fa = Object.getOwnPropertyNames(String.prototype).filter(function (e) {
      return !ca.includes(e);
    });
    var la = function e(n) {
      return function () {
        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r];
        }
        return n.apply(this.__string__, t);
      };
    };
    var ha = Cr(fa),
      pa;
    try {
      for (ha.s(); !(pa = ha.n()).done; ) {
        var _a = pa.value;
        sa.prototype[_a] = la(String.prototype[_a]);
      }
    } catch (e) {
      ha.e(e);
    } finally {
      ha.f();
    }
  }
  sa.prototype.serialize = function () {
    return this.valueOf();
  };
  sa.isString = function (e) {
    return e instanceof sa || typeof e === "string";
  };
  sa.prototype.get = function (e) {
    yo("LString::get", e, "number");
    return Array.from(this.__string__)[e.valueOf()];
  };
  sa.prototype.cmp = function (e) {
    yo("LString::cmp", e, "string");
    var t = this.valueOf();
    var r = e.valueOf();
    if (t < r) {
      return -1;
    } else if (t === r) {
      return 0;
    } else {
      return 1;
    }
  };
  sa.prototype.lower = function () {
    return sa(this.__string__.toLowerCase());
  };
  sa.prototype.upper = function () {
    return sa(this.__string__.toUpperCase());
  };
  sa.prototype.set = function (e, t) {
    yo("LString::set", e, "number");
    yo("LString::set", t, ["string", "character"]);
    e = e.valueOf();
    if (t instanceof oa) {
      t = t.__char__;
    }
    var r = [];
    if (e > 0) {
      r.push(this.__string__.substring(0, e));
    }
    r.push(t);
    if (e < this.__string__.length - 1) {
      r.push(this.__string__.substring(e + 1));
    }
    this.__string__ = r.join("");
  };
  Object.defineProperty(sa.prototype, "length", {
    get: function e() {
      return this.__string__.length;
    },
  });
  sa.prototype.clone = function () {
    return sa(this.valueOf());
  };
  sa.prototype.fill = function (e) {
    yo("LString::fill", e, ["string", "character"]);
    if (e instanceof oa) {
      e = e.toString();
    }
    var t = this.__string__.length;
    this.__string__ = new Array(t + 1).join(e);
  };
  function da(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    if (e instanceof da) {
      return e;
    }
    if (
      (typeof this !== "undefined" && !(this instanceof da)) ||
      typeof this === "undefined"
    ) {
      return new da(e, t);
    }
    if (typeof e === "undefined") {
      throw new Error("Invalid LNumber constructor call");
    }
    var r = da.getType(e);
    if (da.types[r]) {
      return da.types[r](e, t);
    }
    var n = e instanceof Array && sa.isString(e[0]) && da.isNumber(e[1]);
    if (e instanceof da) {
      return da(e.value);
    }
    if (!da.isNumber(e) && !n) {
      throw new Error("You can't create LNumber from ".concat(Ao(e)));
    }
    if (e === null) {
      e = 0;
    }
    var i;
    if (n) {
      var u = e,
        a = A(u, 2),
        o = a[0],
        s = a[1];
      if (o instanceof sa) {
        o = o.valueOf();
      }
      if (s instanceof da) {
        s = s.valueOf();
      }
      var c = o.match(/^([+-])/);
      var f = false;
      if (c) {
        o = o.replace(/^[+-]/, "");
        if (c[1] === "-") {
          f = true;
        }
      }
    }
    if (Number.isNaN(e)) {
      return Ea(e);
    } else if (typeof BigInt !== "undefined") {
      if (typeof e !== "bigint") {
        if (n) {
          var l;
          switch (s) {
            case 8:
              l = "0o";
              break;
            case 16:
              l = "0x";
              break;
            case 2:
              l = "0b";
              break;
            case 10:
              l = "";
              break;
          }
          if (typeof l === "undefined") {
            var h = BigInt(s);
            i = k(o)
              .map(function (e, t) {
                return BigInt(parseInt(e, s)) * ba(h, BigInt(t));
              })
              .reduce(function (e, t) {
                return e + t;
              });
          } else {
            i = BigInt(l + o);
          }
        } else {
          i = BigInt(e);
        }
        if (f) {
          i *= BigInt(-1);
        }
      } else {
        i = e;
      }
      return Oa(i, true);
    } else if (typeof Lr !== "undefined" && !(e instanceof Lr)) {
      if (e instanceof Array) {
        return Oa(p(Lr, k(e)));
      }
      return Oa(new Lr(e));
    } else if (n) {
      this.constant(parseInt(o, s), "integer");
    } else {
      this.constant(e, "integer");
    }
  }
  da.prototype.constant = function (e, t) {
    Object.defineProperty(this, "__value__", { value: e, enumerable: true });
    Object.defineProperty(this, "__type__", { value: t, enumerable: true });
  };
  da.types = {
    float: function e(t) {
      var r =
        arguments.length > 1 && arguments[1] !== undefined
          ? arguments[1]
          : false;
      return new Ea(t, r);
    },
    complex: function e(t) {
      var r =
        arguments.length > 1 && arguments[1] !== undefined
          ? arguments[1]
          : false;
      if (!da.isComplex(t)) {
        t = { im: 0, re: t };
      }
      return new Da(t, r);
    },
    rational: function e(t) {
      var r =
        arguments.length > 1 && arguments[1] !== undefined
          ? arguments[1]
          : false;
      if (!da.isRational(t)) {
        t = { num: t, denom: 1 };
      }
      return new ka(t, r);
    },
  };
  da.prototype.serialize = function () {
    return this.__value__;
  };
  da.prototype.isNaN = function () {
    return Number.isNaN(this.__value__);
  };
  da.prototype.gcd = function (e) {
    var t = this.abs();
    e = e.abs();
    if (e.cmp(t) === 1) {
      var r = t;
      t = e;
      e = r;
    }
    while (true) {
      t = t.rem(e);
      if (t.cmp(0) === 0) {
        return e;
      }
      e = e.rem(t);
      if (e.cmp(0) === 0) {
        return t;
      }
    }
  };
  da.isFloat = function e(t) {
    return t instanceof Ea || (Number(t) === t && t % 1 !== 0);
  };
  da.isNumber = function (e) {
    return e instanceof da || da.isNative(e) || da.isBN(e);
  };
  da.isComplex = function (e) {
    if (!e) {
      return false;
    }
    var t =
      e instanceof Da ||
      ((da.isNumber(e.im) || Number.isNaN(e.im)) &&
        (da.isNumber(e.re) || Number.isNaN(e.re)));
    return t;
  };
  da.isRational = function (e) {
    if (!e) {
      return false;
    }
    return e instanceof ka || (da.isNumber(e.num) && da.isNumber(e.denom));
  };
  da.isInteger = function (e) {
    if (!(da.isNative(e) || e instanceof da)) {
      return false;
    }
    if (da.isFloat(e)) {
      return false;
    }
    if (da.isRational(e)) {
      return false;
    }
    if (da.isComplex(e)) {
      return false;
    }
    return true;
  };
  da.isNative = function (e) {
    return typeof e === "bigint" || typeof e === "number";
  };
  da.isBigInteger = function (e) {
    return e instanceof Oa || typeof e === "bigint" || da.isBN(e);
  };
  da.isBN = function (e) {
    return typeof Lr !== "undefined" && e instanceof Lr;
  };
  da.getArgsType = function (e, t) {
    if (e instanceof Ea || t instanceof Ea) {
      return Ea;
    }
    if (e instanceof Oa || t instanceof Oa) {
      return Oa;
    }
    return da;
  };
  da.prototype.toString = function (e) {
    if (Number.isNaN(this.__value__)) {
      return "+nan.0";
    }
    if (e > 2 && e < 36) {
      return this.__value__.toString(e);
    }
    return this.__value__.toString();
  };
  da.prototype.asType = function (e) {
    var t = da.getType(this);
    return da.types[t] ? da.types[t](e) : da(e);
  };
  da.prototype.isBigNumber = function () {
    return (
      typeof this.__value__ === "bigint" ||
      (typeof Lr !== "undefined" && !(this.value instanceof Lr))
    );
  };
  ["floor", "ceil", "round"].forEach(function (e) {
    da.prototype[e] = function () {
      if (this["float"] || da.isFloat(this.__value__)) {
        return da(Math[e](this.__value__));
      } else {
        return da(Math[e](this.valueOf()));
      }
    };
  });
  da.prototype.valueOf = function () {
    if (da.isNative(this.__value__)) {
      return Number(this.__value__);
    } else if (da.isBN(this.__value__)) {
      return this.__value__.toNumber();
    }
  };
  var va = (function () {
    var e = function e(t, r) {
      return [t, r];
    };
    return {
      bigint: {
        bigint: e,
        float: function e(t, r) {
          return [Ea(t.valueOf()), r];
        },
        rational: function e(t, r) {
          return [{ num: t, denom: 1 }, r];
        },
        complex: function e(t, r) {
          return [{ im: 0, re: t }, r];
        },
      },
      integer: {
        integer: e,
        float: function e(t, r) {
          return [Ea(t.valueOf()), r];
        },
        rational: function e(t, r) {
          return [{ num: t, denom: 1 }, r];
        },
        complex: function e(t, r) {
          return [{ im: 0, re: t }, r];
        },
      },
      float: {
        bigint: function e(t, r) {
          return [t, r && Ea(r.valueOf())];
        },
        integer: function e(t, r) {
          return [t, r && Ea(r.valueOf())];
        },
        float: e,
        rational: function e(t, r) {
          return [t, r && Ea(r.valueOf())];
        },
        complex: function e(t, r) {
          return [{ re: t, im: Ea(0) }, r];
        },
      },
      complex: {
        bigint: t("bigint"),
        integer: t("integer"),
        float: t("float"),
        rational: t("rational"),
        complex: function e(t, r) {
          var n = da.coerce(t.__re__, r.__re__),
            i = A(n, 2),
            u = i[0],
            a = i[1];
          var o = da.coerce(t.__im__, r.__im__),
            s = A(o, 2),
            c = s[0],
            f = s[1];
          return [
            { im: c, re: u },
            { im: f, re: a },
          ];
        },
      },
      rational: {
        bigint: function e(t, r) {
          return [t, r && { num: r, denom: 1 }];
        },
        integer: function e(t, r) {
          return [t, r && { num: r, denom: 1 }];
        },
        float: function e(t, r) {
          return [Ea(t.valueOf()), r];
        },
        rational: e,
        complex: function e(t, r) {
          return [
            {
              im: ma(t.__type__, r.__im__.__type__, 0)[0],
              re: ma(t.__type__, r.__re__.__type__, t)[0],
            },
            {
              im: ma(t.__type__, r.__im__.__type__, r.__im__)[0],
              re: ma(t.__type__, r.__re__.__type__, r.__re__)[0],
            },
          ];
        },
      },
    };
    function t(r) {
      return function (e, t) {
        return [
          {
            im: ma(r, e.__im__.__type__, 0, e.__im__)[1],
            re: ma(r, e.__re__.__type__, 0, e.__re__)[1],
          },
          {
            im: ma(r, e.__im__.__type__, 0, 0)[1],
            re: ma(r, t.__type__, 0, t)[1],
          },
        ];
      };
    }
  })();
  function ma(e, t, r, n) {
    return va[e][t](r, n);
  }
  da.coerce = function (e, t) {
    var r = da.getType(e);
    var n = da.getType(t);
    if (!va[r]) {
      throw new Error("LNumber::coerce unknown lhs type ".concat(r));
    } else if (!va[r][n]) {
      throw new Error("LNumber::coerce unknown rhs type ".concat(n));
    }
    var i = va[r][n](e, t);
    return i.map(function (e) {
      return da(e, true);
    });
  };
  da.prototype.coerce = function (e) {
    if (!(typeof e === "number" || e instanceof da)) {
      throw new Error("LNumber: you can't coerce ".concat(Ao(e)));
    }
    if (typeof e === "number") {
      e = da(e);
    }
    return da.coerce(this, e);
  };
  da.getType = function (e) {
    if (e instanceof da) {
      return e.__type__;
    }
    if (da.isFloat(e)) {
      return "float";
    }
    if (da.isComplex(e)) {
      return "complex";
    }
    if (da.isRational(e)) {
      return "rational";
    }
    if (typeof e === "number") {
      return "integer";
    }
    if (
      (typeof BigInt !== "undefined" && typeof e !== "bigint") ||
      (typeof Lr !== "undefined" && !(e instanceof Lr))
    ) {
      return "bigint";
    }
  };
  da.prototype.isFloat = function () {
    return !!(da.isFloat(this.__value__) || this["float"]);
  };
  var ya = {
    add: "+",
    sub: "-",
    mul: "*",
    div: "/",
    rem: "%",
    or: "|",
    and: "&",
    neg: "~",
    shl: ">>",
    shr: "<<",
  };
  var ga = {};
  Object.keys(ya).forEach(function (t) {
    ga[ya[t]] = t;
    da.prototype[t] = function (e) {
      return this.op(ya[t], e);
    };
  });
  da._ops = {
    "*": function e(t, r) {
      return t * r;
    },
    "+": function e(t, r) {
      return t + r;
    },
    "-": function e(t, r) {
      if (typeof r === "undefined") {
        return -t;
      }
      return t - r;
    },
    "/": function e(t, r) {
      return t / r;
    },
    "%": function e(t, r) {
      return t % r;
    },
    "|": function e(t, r) {
      return t | r;
    },
    "&": function e(t, r) {
      return t & r;
    },
    "~": function e(t) {
      return ~t;
    },
    ">>": function e(t, r) {
      return t >> r;
    },
    "<<": function e(t, r) {
      return t << r;
    },
  };
  da.prototype.op = function (e, t) {
    if (typeof t === "undefined") {
      return da(da._ops[e](this.valueOf()));
    }
    if (typeof t === "number") {
      t = da(t);
    }
    if (
      (Number.isNaN(this.__value__) && !da.isComplex(t)) ||
      (!da.isComplex(this) && Number.isNaN(t.__value__))
    ) {
      return da(NaN);
    }
    var r = this.coerce(t),
      n = A(r, 2),
      i = n[0],
      u = n[1];
    if (i._op) {
      return i._op(e, u);
    }
    return da(da._ops[e](i, u));
  };
  da.prototype.sqrt = function () {
    var e = this.valueOf();
    if (this.cmp(0) < 0) {
      var t = Math.sqrt(-e);
      return Da({ re: 0, im: t });
    }
    return da(Math.sqrt(e));
  };
  var ba = function e(t, r) {
    var n = typeof t === "bigint" ? BigInt(1) : 1;
    return new Array(Number(r)).fill(0).reduce(function (e) {
      return e * t;
    }, n);
  };
  var wa = new Function("a,b", "return a ** b");
  try {
    if (wa(2, 2) === 4) {
      ba = wa;
    }
  } catch (e) {}
  da.prototype.pow = function (e) {
    var t;
    if (da.isBN(this.__value__)) {
      t = this.__value__.pow(e.__value__);
    } else {
      t = ba(this.__value__, e.__value__);
    }
    return da(t);
  };
  da.prototype.abs = function () {
    var e = this.__value__;
    if (da.isNative(this.__value__)) {
      if (e < 0) {
        e = -e;
      }
    } else if (da.isBN(e)) {
      e.iabs();
    }
    return new da(e);
  };
  da.prototype.isOdd = function () {
    if (da.isNative(this.__value__)) {
      if (this.isBigNumber()) {
        return this.__value__ % BigInt(2) === BigInt(1);
      }
      return this.__value__ % 2 === 1;
    } else if (da.isBN(this.__value__)) {
      return this.__value__.isOdd();
    }
  };
  da.prototype.isEven = function () {
    return !this.isOdd();
  };
  da.prototype.cmp = function (e) {
    var t = this.coerce(e),
      r = A(t, 2),
      n = r[0],
      i = r[1];
    function u(e, t) {
      if (e.__value__ < t.__value__) {
        return -1;
      } else if (e.__value__ === t.__value__) {
        return 0;
      } else {
        return 1;
      }
    }
    if (n.__type__ === "bigint") {
      if (da.isNative(n.__value__)) {
        return u(n, i);
      } else if (da.isBN(n.__value__)) {
        return this.__value__.cmp(i.__value__);
      }
    } else if (n instanceof Ea) {
      return u(n, i);
    }
  };
  function Da(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    if (
      (typeof this !== "undefined" && !(this instanceof Da)) ||
      typeof this === "undefined"
    ) {
      return new Da(e, t);
    }
    if (e instanceof Da) {
      return Da({ im: e.__im__, re: e.__re__ });
    }
    if (da.isNumber(e) && t) {
      if (!t) {
        return Number(e);
      }
    } else if (!da.isComplex(e)) {
      throw new Error("Invalid constructor call for LComplex");
    }
    var r = e.im instanceof da ? e.im : da(e.im);
    var n = e.re instanceof da ? e.re : da(e.re);
    this.constant(r, n);
  }
  Da.prototype = Object.create(da.prototype);
  Da.prototype.constructor = Da;
  Da.prototype.constant = function (e, t) {
    Object.defineProperty(this, "__im__", { value: e, enumerable: true });
    Object.defineProperty(this, "__re__", { value: t, enumerable: true });
    Object.defineProperty(this, "__type__", {
      value: "complex",
      enumerable: true,
    });
  };
  Da.prototype.serialize = function () {
    return { re: this.__re__, im: this.__im__ };
  };
  Da.prototype.toRational = function (e) {
    if (da.isFloat(this.__im__) && da.isFloat(this.__re__)) {
      var t = Ea(this.__im__).toRational(e);
      var r = Ea(this.__re__).toRational(e);
      return Da({ im: t, re: r });
    }
    return this;
  };
  Da.prototype.add = function (e) {
    return this.complex_op("add", e, function (e, t, r, n) {
      return { re: e.add(t), im: r.add(n) };
    });
  };
  Da.prototype.factor = function () {
    if (this.__im__ instanceof Ea || this.__im__ instanceof Ea) {
      var e = this.__re__,
        t = this.__im__;
      var r, n;
      if (e instanceof Ea) {
        r = e.toRational().mul(e.toRational());
      } else {
        r = e.mul(e);
      }
      if (t instanceof Ea) {
        n = t.toRational().mul(t.toRational());
      } else {
        n = t.mul(t);
      }
      return r.add(n);
    } else {
      return this.__re__.mul(this.__re__).add(this.__im__.mul(this.__im__));
    }
  };
  Da.prototype.modulus = function () {
    return this.factor().sqrt();
  };
  Da.prototype.conjugate = function () {
    return Da({ re: this.__re__, im: this.__im__.sub() });
  };
  Da.prototype.sqrt = function () {
    var e = this.modulus();
    var t, r;
    if (e.cmp(0) === 0) {
      t = r = e;
    } else if (this.__re__.cmp(0) === 1) {
      t = Ea(0.5).mul(e.add(this.__re__)).sqrt();
      r = this.__im__.div(t).div(2);
    } else {
      r = Ea(0.5).mul(e.sub(this.__re__)).sqrt();
      if (this.__im__.cmp(0) === -1) {
        r = r.sub();
      }
      t = this.__im__.div(r).div(2);
    }
    return Da({ im: r, re: t });
  };
  Da.prototype.div = function (e) {
    if (da.isNumber(e) && !da.isComplex(e)) {
      if (!(e instanceof da)) {
        e = da(e);
      }
      var t = this.__re__.div(e);
      var r = this.__im__.div(e);
      return Da({ re: t, im: r });
    } else if (!da.isComplex(e)) {
      throw new Error("[LComplex::div] Invalid value");
    }
    var n = this.coerce(e),
      i = A(n, 2),
      u = i[0],
      a = i[1];
    var o = a.factor();
    var s = u.mul(a.conjugate());
    var c = s.__re__.op("/", o);
    var f = s.__im__.op("/", o);
    return Da({ re: c, im: f });
  };
  Da.prototype.sub = function (e) {
    return this.complex_op("sub", e, function (e, t, r, n) {
      return { re: e.sub(t), im: r.sub(n) };
    });
  };
  Da.prototype.mul = function (e) {
    return this.complex_op("mul", e, function (e, t, r, n) {
      var i = { re: e.mul(t).sub(r.mul(n)), im: e.mul(n).add(t.mul(r)) };
      return i;
    });
  };
  Da.prototype.complex_op = function (e, t, i) {
    var u = this;
    var r = function e(t, r) {
      var n = i(u.__re__, t, u.__im__, r);
      if ("im" in n && "re" in n) {
        if (n.im.cmp(0) === 0 && !da.isFloat(n.im)) {
          return n.re;
        }
        return Da(n, true);
      }
      return n;
    };
    if (typeof t === "undefined") {
      return r();
    }
    if (da.isNumber(t) && !da.isComplex(t)) {
      if (!(t instanceof da)) {
        t = da(t);
      }
      var n = t.asType(0);
      t = { __im__: n, __re__: t };
    } else if (!da.isComplex(t)) {
      throw new Error("[LComplex::".concat(e, "] Invalid value"));
    }
    var a = t.__re__ instanceof da ? t.__re__ : this.__re__.asType(t.__re__);
    var o = t.__im__ instanceof da ? t.__im__ : this.__im__.asType(t.__im__);
    return r(a, o);
  };
  Da._op = { "+": "add", "-": "sub", "*": "mul", "/": "div" };
  Da.prototype._op = function (e, t) {
    var r = Da._op[e];
    return this[r](t);
  };
  Da.prototype.cmp = function (e) {
    var t = this.coerce(e),
      r = A(t, 2),
      n = r[0],
      i = r[1];
    var u = n.__re__.coerce(i.__re__),
      a = A(u, 2),
      o = a[0],
      s = a[1];
    var c = o.cmp(s);
    if (c !== 0) {
      return c;
    } else {
      var f = n.__im__.coerce(i.__im__),
        l = A(f, 2),
        h = l[0],
        p = l[1];
      return h.cmp(p);
    }
  };
  Da.prototype.valueOf = function () {
    return [this.__re__, this.__im__].map(function (e) {
      return e.valueOf();
    });
  };
  Da.prototype.toString = function () {
    var e;
    if (this.__re__.cmp(0) !== 0) {
      e = [Zi(this.__re__)];
    } else {
      e = [];
    }
    var t = this.__im__.valueOf();
    var r = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY].includes(t);
    var n = Zi(this.__im__);
    if (!r && !Number.isNaN(t)) {
      var i = this.__im__.cmp(0);
      if (i < 0 || (i === 0 && this.__im__._minus)) {
        e.push("-");
      } else {
        e.push("+");
      }
      n = n.replace(/^-/, "");
    }
    e.push(n);
    e.push("i");
    return e.join("");
  };
  function Ea(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof Ea)) ||
      typeof this === "undefined"
    ) {
      return new Ea(e);
    }
    if (!da.isNumber(e)) {
      throw new Error("Invalid constructor call for LFloat");
    }
    if (e instanceof da) {
      return Ea(e.valueOf());
    }
    if (typeof e === "number") {
      if (Object.is(e, -0)) {
        Object.defineProperty(this, "_minus", { value: true });
      }
      this.constant(e, "float");
    }
  }
  Ea.prototype = Object.create(da.prototype);
  Ea.prototype.constructor = Ea;
  Ea.prototype.toString = function () {
    if (this.__value__ === Number.NEGATIVE_INFINITY) {
      return "-inf.0";
    }
    if (this.__value__ === Number.POSITIVE_INFINITY) {
      return "+inf.0";
    }
    if (Number.isNaN(this.__value__)) {
      return "+nan.0";
    }
    var e = this.__value__.toString();
    if (!da.isFloat(this.__value__) && !e.match(/e/i)) {
      var t = e + ".0";
      return this._minus ? "-" + t : t;
    }
    return e.replace(/^([0-9]+)e/, "$1.0e");
  };
  Ea.prototype._op = function (e, t) {
    if (t instanceof da) {
      t = t.__value__;
    }
    var r = da._ops[e];
    if (e === "/" && this.__value__ === 0 && t === 0) {
      return NaN;
    }
    return Ea(r(this.__value__, t));
  };
  Ea.prototype.toRational = function () {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    if (e === null) {
      return Aa(this.__value__.valueOf());
    }
    return Fa(e.valueOf())(this.__value__.valueOf());
  };
  Ea.prototype.sqrt = function () {
    var e = this.valueOf();
    if (this.cmp(0) < 0) {
      var t = Ea(Math.sqrt(-e));
      return Da({ re: 0, im: t });
    }
    return Ea(Math.sqrt(e));
  };
  Ea.prototype.abs = function () {
    var e = this.valueOf();
    if (e < 0) {
      e = -e;
    }
    return Ea(e);
  };
  var Aa = Fa(1e-10);
  function Fa(n) {
    return function (e) {
      var t = function e(n, t, r) {
          var i = function e(t, r) {
            return r < n ? t : e(r, t % r);
          };
          if (Number.isNaN(t) || Number.isNaN(r)) {
            return NaN;
          }
          return i(Math.abs(t), Math.abs(r));
        },
        r = t(n ? n : 1 / 1e4, 1, e);
      return ka({ num: Math.floor(e / r), denom: Math.floor(1 / r) });
    };
  }
  function xa(e, t) {
    var r = e.sub(t);
    var n = e.add(t);
    var i;
    if (r.cmp(n) > 0) {
      i = Ca(n, r);
    } else if (n.cmp(r) <= 0) {
      i = r;
    } else if (r.cmp(0) > 0) {
      i = Ca(r, n);
    } else if (t.cmp(0) < 0) {
      i = da(Ca(n.sub(), r.sub())).sub();
    } else {
      i = da(0);
    }
    if (da.isFloat(t) || da.isFloat(e)) {
      return Ea(i);
    }
    return i;
  }
  function Ca(e, t) {
    var r = da(e).floor();
    var n = da(t).floor();
    if (e.cmp(r) < 1) {
      return r;
    } else if (r.cmp(n) === 0) {
      var i = da(1).div(t.sub(n));
      var u = da(1).div(e.sub(r));
      return r.add(da(1).div(Ca(i, u)));
    } else {
      return r.add(da(1));
    }
  }
  function ka(e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    if (
      (typeof this !== "undefined" && !(this instanceof ka)) ||
      typeof this === "undefined"
    ) {
      return new ka(e, t);
    }
    if (!da.isRational(e)) {
      throw new Error("Invalid constructor call for LRational");
    }
    var r, n;
    if (e instanceof ka) {
      r = da(e.__num__);
      n = da(e.__denom__);
    } else {
      r = da(e.num);
      n = da(e.denom);
    }
    if (!t && n.cmp(0) !== 0) {
      var i = r.op("%", n).cmp(0) === 0;
      if (i) {
        return da(r.div(n));
      }
    }
    this.constant(r, n);
  }
  ka.prototype = Object.create(da.prototype);
  ka.prototype.constructor = ka;
  ka.prototype.constant = function (e, t) {
    Object.defineProperty(this, "__num__", { value: e, enumerable: true });
    Object.defineProperty(this, "__denom__", { value: t, enumerable: true });
    Object.defineProperty(this, "__type__", {
      value: "rational",
      enumerable: true,
    });
  };
  ka.prototype.serialize = function () {
    return { num: this.__num__, denom: this.__denom__ };
  };
  ka.prototype.pow = function (e) {
    var t = e.cmp(0);
    if (t === 0) {
      return da(1);
    }
    if (t === -1) {
      e = e.sub();
      var r = this.__denom__.pow(e);
      var n = this.__num__.pow(e);
      return ka({ num: r, denom: n });
    }
    var i = this;
    e = e.valueOf();
    while (e > 1) {
      i = i.mul(this);
      e--;
    }
    return i;
  };
  ka.prototype.sqrt = function () {
    var e = this.__num__.sqrt();
    var t = this.__denom__.sqrt();
    if (e instanceof Ea || t instanceof Ea) {
      return e.div(t);
    }
    return ka({ num: e, denom: t });
  };
  ka.prototype.abs = function () {
    var e = this.__num__;
    var t = this.__denom__;
    if (e.cmp(0) === -1) {
      e = e.sub();
    }
    if (t.cmp(0) !== 1) {
      t = t.sub();
    }
    return ka({ num: e, denom: t });
  };
  ka.prototype.cmp = function (e) {
    return da(this.valueOf(), true).cmp(e);
  };
  ka.prototype.toString = function () {
    var e = this.__num__.gcd(this.__denom__);
    var t, r;
    if (e.cmp(1) !== 0) {
      t = this.__num__.div(e);
      if (t instanceof ka) {
        t = da(t.valueOf(true));
      }
      r = this.__denom__.div(e);
      if (r instanceof ka) {
        r = da(r.valueOf(true));
      }
    } else {
      t = this.__num__;
      r = this.__denom__;
    }
    var n = this.cmp(0) < 0;
    if (n) {
      if (t.abs().cmp(r.abs()) === 0) {
        return t.toString();
      }
    } else if (t.cmp(r) === 0) {
      return t.toString();
    }
    return t.toString() + "/" + r.toString();
  };
  ka.prototype.valueOf = function (e) {
    if (this.__denom__.cmp(0) === 0) {
      if (this.__num__.cmp(0) < 0) {
        return Number.NEGATIVE_INFINITY;
      }
      return Number.POSITIVE_INFINITY;
    }
    if (e) {
      return da._ops["/"](this.__num__.value, this.__denom__.value);
    }
    return Ea(this.__num__.valueOf()).div(this.__denom__.valueOf());
  };
  ka.prototype.mul = function (e) {
    if (!(e instanceof da)) {
      e = da(e);
    }
    if (da.isRational(e)) {
      var t = this.__num__.mul(e.__num__);
      var r = this.__denom__.mul(e.__denom__);
      return ka({ num: t, denom: r });
    }
    var n = da.coerce(this, e),
      i = A(n, 2),
      u = i[0],
      a = i[1];
    return u.mul(a);
  };
  ka.prototype.div = function (e) {
    if (!(e instanceof da)) {
      e = da(e);
    }
    if (da.isRational(e)) {
      var t = this.__num__.mul(e.__denom__);
      var r = this.__denom__.mul(e.__num__);
      return ka({ num: t, denom: r });
    }
    var n = da.coerce(this, e),
      i = A(n, 2),
      u = i[0],
      a = i[1];
    var o = u.div(a);
    return o;
  };
  ka.prototype._op = function (e, t) {
    return this[ga[e]](t);
  };
  ka.prototype.sub = function (e) {
    if (typeof e === "undefined") {
      return this.mul(-1);
    }
    if (!(e instanceof da)) {
      e = da(e);
    }
    if (da.isRational(e)) {
      var t = e.__num__.sub();
      var r = e.__denom__;
      return this.add(ka({ num: t, denom: r }));
    }
    if (!(e instanceof da)) {
      e = da(e).sub();
    } else {
      e = e.sub();
    }
    var n = da.coerce(this, e),
      i = A(n, 2),
      u = i[0],
      a = i[1];
    return u.add(a);
  };
  ka.prototype.add = function (e) {
    if (!(e instanceof da)) {
      e = da(e);
    }
    if (da.isRational(e)) {
      var t = this.__denom__;
      var r = e.__denom__;
      var n = this.__num__;
      var i = e.__num__;
      var u, a;
      if (t !== r) {
        a = r.mul(n).add(i.mul(t));
        u = t.mul(r);
      } else {
        a = n.add(i);
        u = t;
      }
      return ka({ num: a, denom: u });
    }
    if (da.isFloat(e)) {
      return Ea(this.valueOf()).add(e);
    }
    var o = da.coerce(this, e),
      s = A(o, 2),
      c = s[0],
      f = s[1];
    return c.add(f);
  };
  function Oa(e, t) {
    if (
      (typeof this !== "undefined" && !(this instanceof Oa)) ||
      typeof this === "undefined"
    ) {
      return new Oa(e, t);
    }
    if (e instanceof Oa) {
      return Oa(e.__value__, e._native);
    }
    if (!da.isBigInteger(e)) {
      throw new Error("Invalid constructor call for LBigInteger");
    }
    this.constant(e, "bigint");
    Object.defineProperty(this, "_native", { value: t });
  }
  Oa.prototype = Object.create(da.prototype);
  Oa.prototype.constructor = Oa;
  Oa.bn_op = {
    "+": "iadd",
    "-": "isub",
    "*": "imul",
    "/": "idiv",
    "%": "imod",
    "|": "ior",
    "&": "iand",
    "~": "inot",
    "<<": "ishrn",
    ">>": "ishln",
  };
  Oa.prototype.serialize = function () {
    return this.__value__.toString();
  };
  Oa.prototype._op = function (e, t) {
    if (typeof t === "undefined") {
      if (da.isBN(this.__value__)) {
        e = Oa.bn_op[e];
        return Oa(this.__value__.clone()[e](), false);
      }
      return Oa(da._ops[e](this.__value__), true);
    }
    if (da.isBN(this.__value__) && da.isBN(t.__value__)) {
      e = Oa.bn_op[e];
      return Oa(this.__value__.clone()[e](t), false);
    }
    var r = da._ops[e](this.__value__, t.__value__);
    if (e === "/") {
      var n = this.op("%", t).cmp(0) === 0;
      if (n) {
        return da(r);
      }
      return ka({ num: this, denom: t });
    }
    return Oa(r, true);
  };
  Oa.prototype.sqrt = function () {
    var e;
    var t = this.cmp(0) < 0;
    if (da.isNative(this.__value__)) {
      e = da(Math.sqrt(t ? -this.valueOf() : this.valueOf()));
    } else if (da.isBN(this.__value__)) {
      e = t ? this.__value__.neg().sqrt() : this.__value__.sqrt();
    }
    if (t) {
      return Da({ re: 0, im: e });
    }
    return e;
  };
  da.NaN = da(NaN);
  function Sa(e) {
    var n = this;
    if (
      (typeof this !== "undefined" && !(this instanceof Sa)) ||
      typeof this === "undefined"
    ) {
      return new Sa(e);
    }
    yo("InputPort", e, "function");
    ai(this, "__type__", Ya);
    var i;
    Object.defineProperty(this, "__parser__", {
      enumerable: true,
      get: function e() {
        return i;
      },
      set: function e(t) {
        yo("InputPort::__parser__", t, "parser");
        i = t;
      },
    });
    this._read = e;
    this._with_parser = this._with_init_parser.bind(
      this,
      O(
        j.mark(function e() {
          var r;
          return j.wrap(function e(t) {
            while (1) {
              switch ((t.prev = t.next)) {
                case 0:
                  if (n.char_ready()) {
                    t.next = 5;
                    break;
                  }
                  t.next = 3;
                  return n._read();
                case 3:
                  r = t.sent;
                  i = new Xn(r, { env: n });
                case 5:
                  return t.abrupt("return", n.__parser__);
                case 6:
                case "end":
                  return t.stop();
              }
            }
          }, e);
        })
      )
    );
    this.char_ready = function () {
      return !!this.__parser__ && this.__parser__.__lexer__.peek() !== $a;
    };
    this._make_defaults();
  }
  Sa.prototype._make_defaults = function () {
    this.read = this._with_parser(function (e) {
      return e.read_object();
    });
    this.read_line = this._with_parser(function (e) {
      return e.__lexer__.read_line();
    });
    this.read_char = this._with_parser(function (e) {
      return e.__lexer__.read_char();
    });
    this.read_string = this._with_parser(function (e, t) {
      if (!da.isInteger(t)) {
        var r = da.getType(t);
        _o("read-string", r, "integer");
      }
      return e.__lexer__.read_string(t.valueOf());
    });
    this.peek_char = this._with_parser(function (e) {
      return e.__lexer__.peek_char();
    });
  };
  Sa.prototype._with_init_parser = function (o, s) {
    var c = this;
    return (function () {
      var e = O(
        j.mark(function e() {
          var r,
            n,
            i,
            u,
            a = arguments;
          return j.wrap(function e(t) {
            while (1) {
              switch ((t.prev = t.next)) {
                case 0:
                  t.next = 2;
                  return o.call(c);
                case 2:
                  r = t.sent;
                  for (n = a.length, i = new Array(n), u = 0; u < n; u++) {
                    i[u] = a[u];
                  }
                  return t.abrupt("return", s.apply(void 0, [r].concat(i)));
                case 5:
                case "end":
                  return t.stop();
              }
            }
          }, e);
        })
      );
      return function () {
        return e.apply(this, arguments);
      };
    })();
  };
  Sa.prototype.is_open = function () {
    return this._with_parser !== null;
  };
  Sa.prototype.close = function () {
    var t = this;
    this.__parser__ = null;
    this._with_parser = null;
    ["read", "close", "read_char", "peek-char", "read_line"].forEach(function (
      e
    ) {
      t[e] = function () {
        throw new Error("input-port: port is closed");
      };
    });
    this.char_ready = function () {
      return false;
    };
  };
  Sa.prototype.toString = function () {
    return "#<input-port>";
  };
  function Ba(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof Ba)) ||
      typeof this === "undefined"
    ) {
      return new Ba(e);
    }
    yo("OutputPort", e, "function");
    ai(this, "__type__", Ya);
    this.write = e;
  }
  Ba.prototype.is_open = function () {
    return this._closed !== true;
  };
  Ba.prototype.close = function () {
    Object.defineProperty(this, "_closed", {
      get: function e() {
        return true;
      },
      set: function e() {},
      configurable: false,
      enumerable: false,
    });
    this.write = function () {
      throw new Error("output-port: port is closed");
    };
  };
  Ba.prototype.flush = function () {};
  Ba.prototype.toString = function () {
    return "#<output-port>";
  };
  var ja = (function (e) {
    u(n, e);
    var r = Fr(n);
    function n(e) {
      var t;
      y(this, n);
      t = r.call(this, function () {
        var e;
        return (e = t)._write.apply(e, arguments);
      });
      yo("BufferedOutputPort", e, "function");
      ai(i(t), "_fn", e, { hidden: true });
      ai(i(t), "_buffer", [], { hidden: true });
      return t;
    }
    b(n, [
      {
        key: "flush",
        value: function e() {
          if (this._buffer.length) {
            this._fn(this._buffer.join(""));
            this._buffer.length = 0;
          }
        },
      },
      {
        key: "_write",
        value: function e() {
          var t = this;
          for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
            n[i] = arguments[i];
          }
          if (n.length) {
            n.forEach(function (e) {
              t._buffer.push(e);
            });
            var u = this._buffer[this._buffer.length - 1];
            if (u.match(/\n$/)) {
              this._buffer[this._buffer.length - 1] = u.replace(/\n$/, "");
              this.flush();
            }
          }
        },
      },
    ]);
    return n;
  })(Ba);
  function Ia(t) {
    var r = this;
    if (
      (typeof this !== "undefined" && !(this instanceof Ia)) ||
      typeof this === "undefined"
    ) {
      return new Ia(t);
    }
    yo("OutputStringPort", t, "function");
    ai(this, "__type__", Ya);
    ai(this, "__buffer__", []);
    this.write = function (e) {
      if (!sa.isString(e)) {
        e = t(e);
      } else {
        e = e.valueOf();
      }
      r.__buffer__.push(e);
    };
  }
  Ia.prototype = Object.create(Ba.prototype);
  Ia.prototype.constructor = Ia;
  Ia.prototype.toString = function () {
    return "#<output-port (string)>";
  };
  Ia.prototype.valueOf = function () {
    return this.__buffer__
      .map(function (e) {
        return e.valueOf();
      })
      .join("");
  };
  function Pa(e, t) {
    var r = this;
    if (
      (typeof this !== "undefined" && !(this instanceof Pa)) ||
      typeof this === "undefined"
    ) {
      return new Pa(e, t);
    }
    yo("OutputFilePort", e, "string");
    ai(this, "__filename__", e);
    ai(this, "_fd", t.valueOf(), { hidden: true });
    ai(this, "__type__", Ya);
    this.write = function (e) {
      if (!sa.isString(e)) {
        e = Zi(e);
      } else {
        e = e.valueOf();
      }
      r.fs().write(r._fd, e, function (e) {
        if (e) {
          throw e;
        }
      });
    };
  }
  Pa.prototype = Object.create(Ba.prototype);
  Pa.prototype.constructor = Pa;
  Pa.prototype.fs = function () {
    if (!this._fs) {
      this._fs = this.internal("fs");
    }
    return this._fs;
  };
  Pa.prototype.internal = function (e) {
    return uo.get("**internal-env**").get(e);
  };
  Pa.prototype.close = function () {
    var n = this;
    return new Promise(function (t, r) {
      n.fs().close(n._fd, function (e) {
        if (e) {
          r(e);
        } else {
          ai(n, "_fd", null, { hidden: true });
          Ba.prototype.close.call(n);
          t();
        }
      });
    });
  };
  Pa.prototype.toString = function () {
    return "#<output-port ".concat(this.__filename__, ">");
  };
  function Na(e, t) {
    var r = this;
    if (
      (typeof this !== "undefined" && !(this instanceof Na)) ||
      typeof this === "undefined"
    ) {
      return new Na(e);
    }
    yo("InputStringPort", e, "string");
    t = t || io;
    e = e.valueOf();
    this._with_parser = this._with_init_parser.bind(this, function () {
      if (!r.__parser__) {
        r.__parser__ = new Xn(e, { env: t });
      }
      return r.__parser__;
    });
    ai(this, "__type__", Ya);
    this._make_defaults();
  }
  Na.prototype.char_ready = function () {
    return true;
  };
  Na.prototype = Object.create(Sa.prototype);
  Na.prototype.constructor = Na;
  Na.prototype.toString = function () {
    return "#<input-port (string)>";
  };
  function Ra(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof Ra)) ||
      typeof this === "undefined"
    ) {
      return new Ra(e);
    }
    yo("InputByteVectorPort", e, "uint8array");
    ai(this, "__vector__", e);
    ai(this, "__type__", Ma);
    var r = 0;
    Object.defineProperty(this, "__index__", {
      enumerable: true,
      get: function e() {
        return r;
      },
      set: function e(t) {
        yo("InputByteVectorPort::__index__", t, "number");
        if (t instanceof da) {
          t = t.valueOf();
        }
        if (typeof t === "bigint") {
          t = Number(t);
        }
        if (Math.floor(t) !== t) {
          throw new Error(
            "InputByteVectorPort::__index__ value is " + "not integer"
          );
        }
        r = t;
      },
    });
  }
  Ra.prototype = Object.create(Sa.prototype);
  Ra.prototype.constructor = Ra;
  Ra.prototype.toString = function () {
    return "#<input-port (bytevector)>";
  };
  Ra.prototype.close = function () {
    var t = this;
    ai(this, "__vector__", Pi);
    ["read_u8", "close", "peek_u8", "read_u8_vector"].forEach(function (e) {
      t[e] = function () {
        throw new Error("Input-binary-port: port is closed");
      };
    });
    this.char_ready = function () {
      return false;
    };
  };
  Ra.prototype.u8_ready = function () {
    return true;
  };
  Ra.prototype.peek_u8 = function () {
    if (this.__index__ >= this.__vector__.length) {
      return $a;
    }
    return this.__vector__[this.__index__];
  };
  Ra.prototype.skip = function () {
    if (this.__index__ <= this.__vector__.length) {
      ++this.__index__;
    }
  };
  Ra.prototype.read_u8 = function () {
    var e = this.peek_u8();
    this.skip();
    return e;
  };
  Ra.prototype.read_u8_vector = function (e) {
    if (typeof e === "undefined") {
      e = this.__vector__.length;
    } else if (e > this.__index__ + this.__vector__.length) {
      e = this.__index__ + this.__vector__.length;
    }
    if (this.peek_u8() === $a) {
      return $a;
    }
    return this.__vector__.slice(this.__index__, e);
  };
  function Ta() {
    if (
      (typeof this !== "undefined" && !(this instanceof Ta)) ||
      typeof this === "undefined"
    ) {
      return new Ta();
    }
    ai(this, "__type__", Ma);
    ai(this, "_buffer", [], { hidden: true });
    this.write = function (e) {
      yo("write", e, ["number", "uint8array"]);
      if (da.isNumber(e)) {
        this._buffer.push(e.valueOf());
      } else {
        var t;
        (t = this._buffer).push.apply(t, k(Array.from(e)));
      }
    };
    Object.defineProperty(this, "__buffer__", {
      enumerable: true,
      get: function e() {
        return Uint8Array.from(this._buffer);
      },
    });
  }
  Ta.prototype = Object.create(Ba.prototype);
  Ta.prototype.constructor = Ta;
  Ta.prototype.close = function () {
    Ba.prototype.close.call(this);
    ai(this, "_buffer", null, { hidden: true });
  };
  Ta.prototype._close_guard = function () {
    if (this._closed) {
      throw new Error("output-port: binary port is closed");
    }
  };
  Ta.prototype.write_u8 = function (e) {
    yo("OutputByteVectorPort::write_u8", e, "number");
    this.write(e);
  };
  Ta.prototype.write_u8_vector = function (e) {
    yo("OutputByteVectorPort::write_u8_vector", e, "uint8array");
    this.write(e);
  };
  Ta.prototype.toString = function () {
    return "#<output-port (bytevector)>";
  };
  Ta.prototype.valueOf = function () {
    return this.__buffer__;
  };
  function La(e, t) {
    if (
      (typeof this !== "undefined" && !(this instanceof La)) ||
      typeof this === "undefined"
    ) {
      return new La(e, t);
    }
    Na.call(this, e);
    yo("InputFilePort", t, "string");
    ai(this, "__filename__", t);
  }
  La.prototype = Object.create(Na.prototype);
  La.prototype.constructor = La;
  La.prototype.toString = function () {
    return "#<input-port (".concat(this.__filename__, ")>");
  };
  function Ua(e, t) {
    if (
      (typeof this !== "undefined" && !(this instanceof Ua)) ||
      typeof this === "undefined"
    ) {
      return new Ua(e, t);
    }
    Ra.call(this, e);
    yo("InputBinaryFilePort", t, "string");
    ai(this, "__filename__", t);
  }
  Ua.prototype = Object.create(Ra.prototype);
  Ua.prototype.constructor = Ua;
  Ua.prototype.toString = function () {
    return "#<input-binary-port (".concat(this.__filename__, ")>");
  };
  function qa(e, t) {
    if (
      (typeof this !== "undefined" && !(this instanceof qa)) ||
      typeof this === "undefined"
    ) {
      return new qa(e, t);
    }
    yo("OutputBinaryFilePort", e, "string");
    ai(this, "__filename__", e);
    ai(this, "_fd", t.valueOf(), { hidden: true });
    ai(this, "__type__", Ma);
    var u, r;
    this.write = function (e) {
      var n = this;
      yo("write", e, ["number", "uint8array"]);
      var i;
      if (!u) {
        u = this.internal("fs");
      }
      if (!r) {
        r = this.internal("Buffer");
      }
      if (da.isNumber(e)) {
        i = r.from([e.valueOf()]);
      } else {
        i = r.from(Array.from(e));
      }
      return new Promise(function (t, r) {
        u.write(n._fd, i, function (e) {
          if (e) {
            r(e);
          } else {
            t();
          }
        });
      });
    };
  }
  qa.prototype = Object.create(Pa.prototype);
  qa.prototype.constructor = qa;
  qa.prototype.write_u8 = function (e) {
    yo("OutputByteVectorPort::write_u8", e, "number");
    this.write(e);
  };
  qa.prototype.write_u8_vector = function (e) {
    yo("OutputByteVectorPort::write_u8_vector", e, "uint8array");
    this.write(e);
  };
  var Ma = Symbol["for"]("binary");
  var Ya = Symbol["for"]("text");
  var $a = new za();
  function za() {}
  za.prototype.toString = function () {
    return "#<eof>";
  };
  function Va(e) {
    var t = this;
    var r =
        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      n = r.stderr,
      i = r.stdin,
      u = r.stdout,
      a = r.command_line,
      o = a === void 0 ? null : a,
      s = D(r, Ar);
    if (
      (typeof this !== "undefined" && !(this instanceof Va)) ||
      typeof this === "undefined"
    ) {
      return new Va(
        e,
        Br({ stdin: i, stdout: u, stderr: n, command_line: o }, s)
      );
    }
    if (typeof e === "undefined") {
      e = "anonymous";
    }
    this.__env__ = uo.inherit(e, s);
    this.__env__.set(
      "parent.frame",
      ci(
        "parent.frame",
        function () {
          return t.__env__;
        },
        io.__env__["parent.frame"].__doc__
      )
    );
    var c = "**interaction-environment-defaults**";
    this.set(c, Ji(s).concat(c));
    var f = to.inherit("internal-".concat(e));
    if (Su(i)) {
      f.set("stdin", i);
    }
    if (Su(n)) {
      f.set("stderr", n);
    }
    if (Su(u)) {
      f.set("stdout", u);
    }
    f.set("command-line", o);
    ao(this.__env__, f);
  }
  Va.prototype.exec = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var r =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    yo("Interpreter::exec", e, ["string", "array"], 1);
    yo("Interpreter::exec", t, "boolean", 2);
    io.set("**interaction-environment**", this.__env__);
    if (r === null) {
      r = this.__env__;
    }
    return No(e, r, t ? r : false);
  };
  Va.prototype.get = function (e) {
    var t = this.__env__.get(e);
    if (vu(t)) {
      return t.bind(this.__env__);
    }
    return t;
  };
  Va.prototype.set = function (e, t) {
    return this.__env__.set(e, t);
  };
  Va.prototype.constant = function (e, t) {
    return this.__env__.constant(e, t);
  };
  function Ja(e, t) {
    this.name = "LipsError";
    this.message = e;
    this.args = t;
    this.stack = new Error().stack;
  }
  Ja.prototype = new Error();
  Ja.prototype.constructor = Ja;
  function Ga(e, t, r) {
    if (arguments.length === 1) {
      if (_(arguments[0]) === "object") {
        e = arguments[0];
        t = null;
      } else if (typeof arguments[0] === "string") {
        e = {};
        t = null;
        r = arguments[0];
      }
    }
    this.__docs__ = new Map();
    this.__env__ = e;
    this.__parent__ = t;
    this.__name__ = r || "anonymous";
  }
  Ga.prototype.list = function () {
    return Ji(this.__env__);
  };
  Ga.prototype.fs = function () {
    return this.get("**fs**");
  };
  Ga.prototype.unset = function (e) {
    if (e instanceof Ln) {
      e = e.valueOf();
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    delete this.__env__[e];
  };
  Ga.prototype.inherit = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (_(e) === "object") {
      t = e;
    }
    if (!e || _(e) === "object") {
      e = "child of " + (this.__name__ || "unknown");
    }
    return new Ga(t || {}, this, e);
  };
  Ga.prototype.doc = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var r =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (e instanceof Ln) {
      e = e.__name__;
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    if (t) {
      if (!r) {
        t = fi(t);
      }
      this.__docs__.set(e, t);
      return this;
    }
    if (this.__docs__.has(e)) {
      return this.__docs__.get(e);
    }
    if (this.__parent__) {
      return this.__parent__.doc(e);
    }
  };
  Ga.prototype.newFrame = function (e, t) {
    var n = this.inherit("__frame__");
    n.set(
      "parent.frame",
      ci(
        "parent.frame",
        function () {
          var e =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 1;
          e = e.valueOf();
          var t = n.__parent__;
          if (!(t instanceof Ga)) {
            return Pi;
          }
          if (e <= 0) {
            return t;
          }
          var r = t.get("parent.frame");
          return r(e - 1);
        },
        io.__env__["parent.frame"].__doc__
      )
    );
    t.callee = e;
    n.set("arguments", t);
    return n;
  };
  Ga.prototype._lookup = function (e) {
    if (e instanceof Ln) {
      e = e.__name__;
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    if (this.__env__.hasOwnProperty(e)) {
      return Ha(this.__env__[e]);
    }
    if (this.__parent__) {
      return this.__parent__._lookup(e);
    }
  };
  Ga.prototype.toString = function () {
    return "#<environment:" + this.__name__ + ">";
  };
  Ga.prototype.clone = function () {
    var t = this;
    var r = {};
    Object.keys(this.__env__).forEach(function (e) {
      r[e] = t.__env__[e];
    });
    return new Ga(r, this.__parent__, this.__name__);
  };
  Ga.prototype.merge = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined
        ? arguments[1]
        : "merge";
    yo("Environment::merge", e, "environment");
    return this.inherit(t, e.__env__);
  };
  function Ha(e) {
    if (
      (typeof this !== "undefined" && !(this instanceof Ha)) ||
      typeof this === "undefined"
    ) {
      return new Ha(e);
    }
    this.value = e;
  }
  Ha.isUndefined = function (e) {
    return e instanceof Ha && typeof e.value === "undefined";
  };
  Ha.prototype.valueOf = function () {
    return this.value;
  };
  function Wa(e) {
    if (e.length) {
      if (e.length === 1) {
        return e[0];
      }
    }
    if (
      (typeof this !== "undefined" && !(this instanceof Wa)) ||
      typeof this === "undefined"
    ) {
      return new Wa(e);
    }
    this.__values__ = e;
  }
  Wa.prototype.toString = function () {
    return this.__values__
      .map(function (e) {
        return Zi(e);
      })
      .join("\n");
  };
  Wa.prototype.valueOf = function () {
    return this.__values__;
  };
  Ga.prototype.get = function (e) {
    var t =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    yo("Environment::get", e, ["symbol", "string"]);
    var r = t.throwError,
      n = r === void 0 ? true : r;
    var i = e;
    if (i instanceof Ln || i instanceof sa) {
      i = i.valueOf();
    }
    var u = this._lookup(i);
    if (u instanceof Ha) {
      if (Ha.isUndefined(u)) {
        return undefined;
      }
      return Au(u.valueOf());
    }
    var a;
    if (e instanceof Ln && e[Ln.object]) {
      a = e[Ln.object];
    } else if (typeof i === "string") {
      a = i.split(".").filter(Boolean);
    }
    if (a && a.length > 0) {
      var o = a,
        s = h(o),
        c = s[0],
        f = s.slice(1);
      u = this._lookup(c);
      if (f.length) {
        try {
          if (u instanceof Ha) {
            u = u.valueOf();
          } else {
            u = Ka(jr, c);
            if (vu(u)) {
              u = Fu(u);
            }
          }
          if (typeof u !== "undefined") {
            return Ka.apply(void 0, [u].concat(k(f)));
          }
        } catch (e) {
          throw e;
        }
      } else if (u instanceof Ha) {
        return Au(u.valueOf());
      }
      u = Ka(jr, i);
    }
    if (typeof u !== "undefined") {
      return u;
    }
    if (n) {
      throw new Error("Unbound variable `" + i.toString() + "'");
    }
  };
  Ga.prototype.set = function (e, t) {
    var r =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    yo("Environment::set", e, ["string", "symbol"]);
    if (da.isNumber(t)) {
      t = da(t);
    }
    if (e instanceof Ln) {
      e = e.__name__;
    }
    if (e instanceof sa) {
      e = e.valueOf();
    }
    this.__env__[e] = t;
    if (r) {
      this.doc(e, r, true);
    }
    return this;
  };
  Ga.prototype.constant = function (t, e) {
    var r = this;
    if (this.__env__.hasOwnProperty(t)) {
      throw new Error("Environment::constant: ".concat(t, " already exists"));
    }
    if (arguments.length === 1 && Li(arguments[0])) {
      var n = arguments[0];
      Object.keys(n).forEach(function (e) {
        r.constant(t, n[e]);
      });
    } else {
      Object.defineProperty(this.__env__, t, { value: e, enumerable: true });
    }
    return this;
  };
  Ga.prototype.has = function (e) {
    return this.__env__.hasOwnProperty(e);
  };
  Ga.prototype.ref = function (e) {
    var t = this;
    while (true) {
      if (!t) {
        break;
      }
      if (t.has(e)) {
        return t;
      }
      t = t.__parent__;
    }
  };
  Ga.prototype.parents = function () {
    var e = this;
    var t = [];
    while (e) {
      t.unshift(e);
      e = e.__parent__;
    }
    return t;
  };
  function Qa(e) {
    if (gu(e)) {
      return e.then(Qa);
    }
    if (e instanceof Ni || e instanceof Ln) {
      e[Pu] = true;
    }
    return e;
  }
  var Za = ti(
    Nn(
      '(lambda ()\n                                          "[native code]"\n                                          (throw "Invalid Invocation"))'
    )
  )[0];
  var Ka = ci(
    "get",
    function e(t) {
      var r;
      for (
        var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), u = 1;
        u < n;
        u++
      ) {
        i[u - 1] = arguments[u];
      }
      var a = i.length;
      while (i.length) {
        if (vu(t) && _(i[0]) !== "symbol") {
          t = Fu(t);
        }
        var o = i.shift();
        var s = Eu(o);
        if (s === "then" && t instanceof Yn) {
          r = Yn.prototype.then;
        } else if (
          s === "__code__" &&
          vu(t) &&
          typeof t.__code__ === "undefined"
        ) {
          r = Za;
        } else {
          r = t[s];
        }
        if (typeof r === "undefined") {
          if (i.length) {
            throw new Error("Try to get ".concat(i[0], " from undefined"));
          }
          return r;
        } else {
          var c;
          if (i.length - 1 < a) {
            c = t;
          }
          r = Au(r, c);
        }
        t = r;
      }
      return r;
    },
    "(. obj . args)\n        (get obj . args)\n\n        Function use object as base and keep using arguments to get the\n        property of JavaScript object. Arguments need to be a strings.\n        e.g. `(. console \"log\")` if you use any function inside LIPS is\n        will be weakly bind (can be rebind), so you can call this log function\n        without problem unlike in JavaScript when you use\n       `var log = console.log`.\n       `get` is an alias because . don't work in every place, e.g. you can't\n        pass it as argument."
  );
  function Xa(e, t) {
    var r = eo(e, "**internal-env**");
    return r.get(t);
  }
  function eo(e, t) {
    var r = e.get("**interaction-environment**");
    return r.get(t);
  }
  var to = new Ga(
    {
      stdout: new ja(function () {
        var e;
        (e = console).log.apply(e, arguments);
      }),
      stderr: new ja(function () {
        var e;
        (e = console).error.apply(e, arguments);
      }),
      "command-line": [],
      stdin: Sa(function () {
        return Promise.resolve(prompt(""));
      }),
      "letter-unicode-regex":
        /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/,
      "numeral-unicode-regex":
        /(?:[0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D58-\u0D5E\u0D66-\u0D78\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]|\uD800[\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDEE1-\uDEFB\uDF20-\uDF23\uDF41\uDF4A\uDFD1-\uDFD5]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDC58-\uDC5F\uDC79-\uDC7F\uDCA7-\uDCAF\uDCFB-\uDCFF\uDD16-\uDD1B\uDDBC\uDDBD\uDDC0-\uDDCF\uDDD2-\uDDFF\uDE40-\uDE48\uDE7D\uDE7E\uDE9D-\uDE9F\uDEEB-\uDEEF\uDF58-\uDF5F\uDF78-\uDF7F\uDFA9-\uDFAF]|\uD803[\uDCFA-\uDCFF\uDD30-\uDD39\uDE60-\uDE7E\uDF1D-\uDF26\uDF51-\uDF54\uDFC5-\uDFCB]|\uD804[\uDC52-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDDE1-\uDDF4\uDEF0-\uDEF9]|\uD805[\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF3B]|\uD806[\uDCE0-\uDCF2\uDD50-\uDD59]|\uD807[\uDC50-\uDC6C\uDD50-\uDD59\uDDA0-\uDDA9\uDFC0-\uDFD4]|\uD809[\uDC00-\uDC6E]|\uD81A[\uDE60-\uDE69\uDEC0-\uDEC9\uDF50-\uDF59\uDF5B-\uDF61]|\uD81B[\uDE80-\uDE96]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDFCE-\uDFFF]|\uD838[\uDD40-\uDD49\uDEF0-\uDEF9]|\uD83A[\uDCC7-\uDCCF\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9])/,
      "space-unicode-regex":
        /[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/,
    },
    undefined,
    "internal"
  );
  var ro = da(NaN);
  var no = {
    true: true,
    false: false,
    "#true": true,
    "#false": false,
    "#t": true,
    "#f": false,
    nil: Pi,
    undefined: undefined,
    null: null,
    NaN: ro,
    "+nan.0": ro,
    "-nan.0": ro,
  };
  var io = new Ga(
    {
      eof: $a,
      undefined: undefined,
      "peek-char": ci(
        "peek-char",
        function () {
          var e =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : null;
          if (e === null) {
            e = Xa(this, "stdin");
          }
          mo("peek-char", e, "input-port");
          return e.peek_char();
        },
        "(peek-char port)\n\n            Function get character from string port or EOF object if no more\n            data in string port."
      ),
      "read-line": ci(
        "read-line",
        function () {
          var e =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : null;
          if (e === null) {
            e = Xa(this, "stdin");
          }
          mo("read-line", e, "input-port");
          return e.read_line();
        },
        "(read-char port)\n\n            Function read next character from input port."
      ),
      "read-char": ci(
        "read-char",
        function () {
          var e =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : null;
          if (e === null) {
            e = Xa(this, "stdin");
          }
          mo("read-char", e, "input-port");
          return e.read_char();
        },
        "(read-char port)\n\n            Function read next character from input port."
      ),
      read: ci(
        "read",
        (function () {
          var e = O(
            j.mark(function e() {
              var r,
                n,
                i,
                u,
                a,
                o,
                s,
                c,
                f = arguments;
              return j.wrap(
                function e(t) {
                  while (1) {
                    switch ((t.prev = t.next)) {
                      case 0:
                        r = f.length > 0 && f[0] !== undefined ? f[0] : null;
                        if (!sa.isString(r)) {
                          t.next = 30;
                          break;
                        }
                        n = false;
                        i = false;
                        t.prev = 4;
                        a = F(ti(r, this));
                      case 6:
                        t.next = 8;
                        return a.next();
                      case 8:
                        if (!(n = !(o = t.sent).done)) {
                          t.next = 14;
                          break;
                        }
                        s = o.value;
                        return t.abrupt("return", s);
                      case 11:
                        n = false;
                        t.next = 6;
                        break;
                      case 14:
                        t.next = 20;
                        break;
                      case 16:
                        t.prev = 16;
                        t.t0 = t["catch"](4);
                        i = true;
                        u = t.t0;
                      case 20:
                        t.prev = 20;
                        t.prev = 21;
                        if (!(n && a["return"] != null)) {
                          t.next = 25;
                          break;
                        }
                        t.next = 25;
                        return a["return"]();
                      case 25:
                        t.prev = 25;
                        if (!i) {
                          t.next = 28;
                          break;
                        }
                        throw u;
                      case 28:
                        return t.finish(25);
                      case 29:
                        return t.finish(20);
                      case 30:
                        if (r === null) {
                          c = Xa(this, "stdin");
                        } else {
                          c = r;
                        }
                        mo("read", c, "input-port");
                        return t.abrupt("return", c.read.call(this));
                      case 33:
                      case "end":
                        return t.stop();
                    }
                  }
                },
                e,
                this,
                [
                  [4, 16, 20, 30],
                  [21, , 25, 29],
                ]
              );
            })
          );
          function t() {
            return e.apply(this, arguments);
          }
          return t;
        })(),
        "(read [string])\n\n            Function if used with string will parse the string and return\n            list structure of LIPS code. If called without an argument it\n            will read string from standard input (using browser prompt or\n            user defined way) and call itself with that string (parse is)\n            function can be used together with eval to evaluate code from\n            string"
      ),
      pprint: ci(
        "pprint",
        function e(t) {
          if (t instanceof Ni) {
            t = new ps.Formatter(t.toString(true))["break"]().format();
            io.get("display").call(io, t);
          } else {
            io.get("write").call(io, t);
          }
          io.get("newline").call(io);
        },
        "(pprint expression)\n\n           Pretty print list expression, if called with non-pair it just call\n           print function with passed argument."
      ),
      print: ci(
        "print",
        function e() {
          var t = io.get("display");
          var r = io.get("newline");
          for (var n = arguments.length, i = new Array(n), u = 0; u < n; u++) {
            i[u] = arguments[u];
          }
          i.forEach(function (e) {
            t.call(io, e);
            r.call(io);
          });
        },
        "(print . args)\n\n            Function convert each argument to string and print the result to\n            standard output (by default it's console but it can be defined\n            it user code), the function call newline after printing each arg."
      ),
      format: ci(
        "format",
        function e(t) {
          for (
            var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;
            i < r;
            i++
          ) {
            n[i - 1] = arguments[i];
          }
          yo("format", t, "string");
          var u = /(~[as%~])/g;
          var a = t.match(/(~[as])/g);
          if (a && a.length > n.length) {
            throw new Error("Not enough arguments");
          }
          var o = 0;
          var s = io.get("repr");
          t = t.replace(u, function (e) {
            var t = e[1];
            if (t === "~") {
              return "~";
            } else if (t === "%") {
              return "\n";
            } else {
              var r = n[o++];
              if (t === "a") {
                return s(r);
              } else {
                return s(r, true);
              }
            }
          });
          a = t.match(/~([\S])/);
          if (a) {
            throw new Error(
              "format: Unrecognized escape seqence ".concat(a[1])
            );
          }
          return t;
        },
        "(format string n1 n2 ...)\n\n            Function accepts string template and replacing any escape sequences\n            by arguments:\n\n            * ~a value as if printed with display\n            * ~s value as if printed with write\n            * ~% newline character\n            * ~~ literal tilde '~' is inserted\n\n            if there missing arguments or other escape character it throw exception."
      ),
      display: ci(
        "display",
        function e(t) {
          var r =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : null;
          if (r === null) {
            r = Xa(this, "stdout");
          } else {
            yo("display", r, "output-port");
          }
          var n = io.get("repr")(t);
          r.write.call(io, n);
        },
        "(display arg [port])\n\n            Function send string to standard output or provied port."
      ),
      "display-error": ci(
        "display-error",
        function e() {
          var t = Xa(this, "stderr");
          var r = io.get("repr");
          for (var n = arguments.length, i = new Array(n), u = 0; u < n; u++) {
            i[u] = arguments[u];
          }
          var a = i.map(r).join(" ");
          t.write.call(io, a);
          io.get("newline")(t);
        },
        "(display-error . args)\n\n            Display error message."
      ),
      "%same-functions": ci(
        "%same-functions",
        function (e, t) {
          if (!vu(e)) {
            return false;
          }
          if (!vu(t)) {
            return false;
          }
          return Fu(e) === Fu(t);
        },
        "(%same-functions a b)\n\n            Helper function that check if two bound functions are the same"
      ),
      help: ci(
        new au("help", function (e, t) {
          var r = t.dynamic_scope,
            n = t.error;
          var i;
          if (e.car instanceof Ln) {
            i = e.car;
          } else if (e.car instanceof Ni && e.car.car instanceof Ln) {
            i = e.car.car;
          } else {
            var u = this;
            if (r) {
              r = this;
            }
            var a = Io(e.car, { env: u, error: n, dynamic_scope: r });
            if (a && a.__doc__) {
              return a.__doc__;
            }
            return;
          }
          var o;
          var s = this.get(i);
          o = s && s.__doc__;
          if (o) {
            return o;
          }
          var c = this.ref(i);
          if (c) {
            o = c.doc(i);
            if (o) {
              return o;
            }
          }
        }),
        "(help object)\n\n             Macro returns documentation for function or macro. You can save the function\n             or macro in variable and use it in context. But help for variable require\n             to pass the symbol itself."
      ),
      cons: ci(
        "cons",
        function e(t, r) {
          return new Ni(t, r);
        },
        "(cons left right)\n\n            Function return new Pair out of two arguments."
      ),
      car: ci(
        "car",
        function e(t) {
          yo("car", t, "pair");
          return t.car;
        },
        "(car pair)\n\n            Function returns car (head) of the list/pair."
      ),
      cdr: ci(
        "cdr",
        function e(t) {
          yo("cdr", t, "pair");
          return t.cdr;
        },
        "(cdr pair)\n\n            Function returns cdr (tail) of the list/pair."
      ),
      "set!": ci(
        new au("set!", function (e) {
          var u = this;
          var t =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            r = t.dynamic_scope,
            n = t.error;
          if (r) {
            r = this;
          }
          var i = this;
          var a;
          var o = Io(e.cdr.car, { env: this, dynamic_scope: r, error: n });
          o = Fo(o);
          function s(t, r, n) {
            if (gu(t)) {
              return t.then(function (e) {
                return s(t, e, n);
              });
            }
            if (gu(r)) {
              return r.then(function (e) {
                return s(t, e, n);
              });
            }
            if (gu(n)) {
              return n.then(function (e) {
                return s(t, r, e);
              });
            }
            i.get("set-obj!").call(i, t, r, n);
            return n;
          }
          if (e.car instanceof Ni && Ln.is(e.car.car, ".")) {
            var c = e.car.cdr.car;
            var f = e.car.cdr.cdr.car;
            var l = Io(c, { env: this, dynamic_scope: r, error: n });
            var h = Io(f, { env: this, dynamic_scope: r, error: n });
            return s(l, h, o);
          }
          if (!(e.car instanceof Ln)) {
            throw new Error(
              "set! first argument need to be a symbol or " +
                "dot accessor that evaluate to object."
            );
          }
          var p = e.car.valueOf();
          a = this.ref(e.car.__name__);
          return ni(o, function (e) {
            if (!a) {
              var t = p.split(".");
              if (t.length > 1) {
                var r = t.pop();
                var n = t.join(".");
                var i = u.get(n, { throwError: false });
                if (i) {
                  s(i, r, e);
                  return;
                }
              }
              throw new Error("Unbound variable `" + p + "'");
            }
            a.set(p, e);
          });
        }),
        "(set! name value)\n\n            Macro that can be used to set the value of the variable (mutate)\n            it search the scope chain until it finds first non emtpy slot and set it."
      ),
      "unset!": ci(
        new au("set!", function (e) {
          if (!(e.car instanceof Ln)) {
            throw new Error(
              "unset! first argument need to be a symbol or " +
                "dot accessor that evaluate to object."
            );
          }
          var t = e.car;
          var r = this.ref(t);
          if (r) {
            delete r.__env__[t.__name__];
          }
        }),
        "(unset! name)\n\n            Function delete specified name from environment."
      ),
      "set-car!": ci(
        "set-car!",
        function (e, t) {
          yo("set-car!", e, "pair");
          e.car = t;
        },
        "(set-car! obj value)\n\n            Function that set car (head) of the list/pair to specified value.\n            It can destroy the list. Old value is lost."
      ),
      "set-cdr!": ci(
        "set-cdr!",
        function (e, t) {
          yo("set-cdr!", e, "pair");
          e.cdr = t;
        },
        "(set-cdr! obj value)\n\n            Function that set cdr (tail) of the list/pair to specified value.\n            It can destroy the list. Old value is lost."
      ),
      "empty?": ci(
        "empty?",
        function (e) {
          return typeof e === "undefined" || e === Pi;
        },
        "(empty? object)\n\n            Function return true if value is undfined empty list."
      ),
      gensym: ci(
        "gensym",
        Mn,
        "(gensym)\n\n             Function generate unique symbol, to use with macros as meta name."
      ),
      load: ci(
        "load",
        function e(o, t) {
          yo("load", o, "string");
          var s = this;
          if (s.__name__ === "__frame__") {
            s = s.__parent__;
          }
          if (!(t instanceof Ga)) {
            if (s === io) {
              t = s;
            } else {
              t = this.get("**interaction-environment**");
            }
          }
          var c = "**module-path**";
          var f = io.get(c, { throwError: false });
          o = o.valueOf();
          if (!o.match(/.[^.]+$/)) {
            o += ".scm";
          }
          var r = o.match(/\.xcb$/);
          function l(e) {
            if (r) {
              e = ss(e);
            } else {
              if (Ao(e) === "buffer") {
                e = e.toString();
              }
              e = e.replace(/^#!.*/, "");
              if (e.match(/^\{/)) {
                e = ts(e);
              }
            }
            return No(e, t);
          }
          function n(e) {
            return jr
              .fetch(e)
              .then(function (e) {
                return r ? e.arrayBuffer() : e.text();
              })
              .then(function (e) {
                if (r) {
                  e = new Uint8Array(e);
                }
                return e;
              });
          }
          if (lo()) {
            return new Promise(
              (function () {
                var r = O(
                  j.mark(function e(r, n) {
                    var i, u, a;
                    return j.wrap(function e(t) {
                      while (1) {
                        switch ((t.prev = t.next)) {
                          case 0:
                            i = Tr("path");
                            if (!f) {
                              t.next = 6;
                              break;
                            }
                            f = f.valueOf();
                            o = i.join(f, o);
                            t.next = 12;
                            break;
                          case 6:
                            u = s.get("command-line", { throwError: false });
                            if (!u) {
                              t.next = 11;
                              break;
                            }
                            t.next = 10;
                            return u();
                          case 10:
                            a = t.sent;
                          case 11:
                            if (a && a !== Pi) {
                              process.cwd();
                              o = i.join(i.dirname(a.car.valueOf()), o);
                            }
                          case 12:
                            io.set(c, i.dirname(o));
                            Tr("fs").readFile(o, function (e, t) {
                              if (e) {
                                n(e);
                                io.set(c, f);
                              } else {
                                try {
                                  l(t)
                                    .then(function () {
                                      r();
                                      io.set(c, f);
                                    })
                                    ["catch"](n);
                                } catch (e) {
                                  n(e);
                                }
                              }
                            });
                          case 14:
                          case "end":
                            return t.stop();
                        }
                      }
                    }, e);
                  })
                );
                return function (e, t) {
                  return r.apply(this, arguments);
                };
              })()
            );
          }
          if (f) {
            f = f.valueOf();
            o = f + "/" + o.replace(/^\.?\/?/, "");
          }
          return n(o)
            .then(function (e) {
              io.set(c, o.replace(/\/[^/]*$/, ""));
              return l(e);
            })
            .then(function () {})
            ["finally"](function () {
              io.set(c, f);
            });
        },
        "(load filename)\n            (load filename environment)\n\n            Function fetch the file and evaluate its content as LIPS code,\n            If second argument is provided and it's environment the evaluation\n            will happen in that environment."
      ),
      do: ci(
        new au(
          "do",
          (function () {
            var r = O(
              j.mark(function e(r, n) {
                var i, u, a, o, s, c, f, l, h, p, _;
                return j.wrap(
                  function e(t) {
                    while (1) {
                      switch ((t.prev = t.next)) {
                        case 0:
                          (i = n.dynamic_scope), (u = n.error);
                          a = this;
                          if (i) {
                            i = a;
                          }
                          o = a.inherit("do");
                          s = r.car;
                          c = r.cdr.car;
                          f = r.cdr.cdr;
                          if (f !== Pi) {
                            f = new Ni(Ln("begin"), f);
                          }
                          l = { env: a, dynamic_scope: i, error: u };
                          h = s;
                        case 10:
                          if (!(h !== Pi)) {
                            t.next = 21;
                            break;
                          }
                          p = h.car;
                          t.t0 = o;
                          t.t1 = p.car;
                          t.next = 16;
                          return Io(p.cdr.car, l);
                        case 16:
                          t.t2 = t.sent;
                          t.t0.set.call(t.t0, t.t1, t.t2);
                          h = h.cdr;
                          t.next = 10;
                          break;
                        case 21:
                          l = { env: o, dynamic_scope: i, error: u };
                          _ = j.mark(function e() {
                            var r, n, i, u, a;
                            return j.wrap(function e(t) {
                              while (1) {
                                switch ((t.prev = t.next)) {
                                  case 0:
                                    if (!(f !== Pi)) {
                                      t.next = 3;
                                      break;
                                    }
                                    t.next = 3;
                                    return ps.evaluate(f, l);
                                  case 3:
                                    r = s;
                                    n = {};
                                  case 5:
                                    if (!(r !== Pi)) {
                                      t.next = 15;
                                      break;
                                    }
                                    i = r.car;
                                    if (!(i.cdr.cdr !== Pi)) {
                                      t.next = 12;
                                      break;
                                    }
                                    t.next = 10;
                                    return Io(i.cdr.cdr.car, l);
                                  case 10:
                                    u = t.sent;
                                    n[i.car.valueOf()] = u;
                                  case 12:
                                    r = r.cdr;
                                    t.next = 5;
                                    break;
                                  case 15:
                                    a = Object.getOwnPropertySymbols(n);
                                    Object.keys(n)
                                      .concat(a)
                                      .forEach(function (e) {
                                        o.set(e, n[e]);
                                      });
                                  case 17:
                                  case "end":
                                    return t.stop();
                                }
                              }
                            }, e);
                          });
                        case 23:
                          t.next = 25;
                          return Io(c.car, l);
                        case 25:
                          t.t3 = t.sent;
                          if (!(t.t3 === false)) {
                            t.next = 30;
                            break;
                          }
                          return t.delegateYield(_(), "t4", 28);
                        case 28:
                          t.next = 23;
                          break;
                        case 30:
                          if (!(c.cdr !== Pi)) {
                            t.next = 34;
                            break;
                          }
                          t.next = 33;
                          return Io(c.cdr.car, l);
                        case 33:
                          return t.abrupt("return", t.sent);
                        case 34:
                        case "end":
                          return t.stop();
                      }
                    }
                  },
                  e,
                  this
                );
              })
            );
            return function (e, t) {
              return r.apply(this, arguments);
            };
          })()
        ),
        "(do ((<var> <init> <next>)) (test expression) . body)\n\n             Iteration macro that evaluate the expression body in scope of the variables.\n             On Eeach loop it increase the variables according to next expression and run\n             test to check if the loop should continue. If test is signle call the macro\n             will not return anything. If the test is pair of expression and value the\n             macro will return that value after finish."
      ),
      if: ci(
        new au("if", function (r, e) {
          var n = e.dynamic_scope,
            i = e.error;
          if (n) {
            n = this;
          }
          var u = this;
          var t = function e(t) {
            if (t === false) {
              return Io(r.cdr.cdr.car, { env: u, dynamic_scope: n, error: i });
            } else {
              return Io(r.cdr.car, { env: u, dynamic_scope: n, error: i });
            }
          };
          if (r === Pi) {
            throw new Error("too few expressions for `if`");
          }
          var a = Io(r.car, { env: u, dynamic_scope: n, error: i });
          return ni(a, t);
        }),
        "(if cond true-expr false-expr)\n\n            Macro evaluate condition expression and if the value is true, it\n            evaluate and return true expression if not it evaluate and return\n            false expression"
      ),
      "let-env": new au(
        "let-env",
        function (t) {
          var e =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};
          var r = e.dynamic_scope,
            n = e.error;
          yo("let-env", t, "pair");
          var i = Io(t.car, { env: this, dynamic_scope: r, error: n });
          return ni(i, function (e) {
            yo("let-env", e, "environment");
            return Io(Ni(Ln("begin"), t.cdr), {
              env: e,
              dynamic_scope: r,
              error: n,
            });
          });
        },
        "(let-env env . body)\n\n            Special macro that evaluate body in context of given environment\n            object."
      ),
      letrec: ci(
        Wu(Symbol["for"]("letrec")),
        "(letrec ((a value-a) (b value-b)) body)\n\n             Macro that creates new environment, then evaluate and assign values to\n             names and then evaluate the body in context of that environment.\n             Values are evaluated sequentialy and next value can access to\n             previous values/names."
      ),
      "letrec*": ci(
        Wu(Symbol["for"]("letrec")),
        "(letrec* ((a value-a) (b value-b)) body)\n\n             Same as letrec but the order of execution of the binding is guaranteed,\n             so use can use recursive code as well as reference previous binding.\n             In LIPS both letrec and letrec* behave the same."
      ),
      "let*": ci(
        Wu(Symbol["for"]("let*")),
        "(let* ((a value-a) (b value-b)) body)\n\n             Macro similar to `let` but next argument get environment\n             from previous let variable, so they you can define one variable,\n             and use in next argument."
      ),
      let: ci(
        Wu(Symbol["for"]("let")),
        "(let ((a value-a) (b value-b)) body)\n\n             Macro that creates new environment, then evaluate and assign values to\n             names and then evaluate the body in context of that environment.\n             Values are evaluated sequentialy but you can't access\n             previous values/names when next are evaluated. You can only get them\n             from body of let expression."
      ),
      "begin*": ci(
        Qu("begin*", function (e) {
          return e.pop();
        }),
        "(begin* . expr)\n\n             This macro is parallel version of begin. It evaluate each expression and\n             if it's a promise it will evaluate it in parallel and return value\n             of last expression."
      ),
      begin: ci(
        new au("begin", function (e, t) {
          var n = Object.assign({}, t);
          var i = io.get("list->array")(e);
          if (n.dynamic_scope) {
            n.dynamic_scope = this;
          }
          n.env = this;
          var u;
          return (function t() {
            if (i.length) {
              var e = i.shift();
              var r = Io(e, n);
              return ni(r, function (e) {
                u = e;
                return t();
              });
            } else {
              return u;
            }
          })();
        }),
        "(begin . args)\n\n             Macro runs list of expression and return valuate of the list one.\n             It can be used in place where you can only have single exression,\n             like if expression."
      ),
      ignore: new au(
        "ignore",
        function (e, t) {
          var r = t.dynamic_scope,
            n = t.error;
          var i = { env: this, error: n };
          if (r) {
            i.dynamic_scope = this;
          }
          Io(new Ni(new Ln("begin"), e), i);
        },
        "(ignore expression)\n\n            Macro that will evaluate expression and swallow any promises that may\n            be created. It wil run and ignore any value that may be returned by\n            expression. The code should have side effects and/or when it's promise\n            it should resolve to undefined."
      ),
      "call/cc": ci(
        au.defmacro("call/cc", function (e) {
          var t =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};
          var r = Br({ env: this }, t);
          return ni(Io(e.car, r), function (e) {
            if (vu(e)) {
              return e(new Bo(null));
            }
          });
        }),
        "(call/cc proc)\n\n              TODO"
      ),
      define: ci(
        au.defmacro("define", function (r, e) {
          var n = this;
          if (r.car instanceof Ni && r.car.car instanceof Ln) {
            var t = new Ni(
              new Ln("define"),
              new Ni(
                r.car.car,
                new Ni(new Ni(new Ln("lambda"), new Ni(r.car.cdr, r.cdr)))
              )
            );
            return t;
          } else if (e.macro_expand) {
            return;
          }
          if (e.dynamic_scope) {
            e.dynamic_scope = this;
          }
          e.env = n;
          var i = r.cdr.car;
          var u;
          if (i instanceof Ni) {
            i = Io(i, e);
            u = true;
          } else if (i instanceof Ln) {
            i = n.get(i);
          }
          yo("define", r.car, "symbol");
          return ni(i, function (e) {
            if (n.__name__ === fu.__merge_env__) {
              n = n.__parent__;
            }
            if (u && ((vu(e) && Vu(e)) || e instanceof fu)) {
              e.__name__ = r.car.valueOf();
              if (e.__name__ instanceof sa) {
                e.__name__ = e.__name__.valueOf();
              }
            }
            var t;
            if (r.cdr.cdr instanceof Ni && sa.isString(r.cdr.cdr.car)) {
              t = r.cdr.cdr.car.valueOf();
            }
            n.set(r.car, e, t, true);
          });
        }),
        '(define name expression)\n             (define name expression "doc string")\n             (define (function-name . args) body)\n\n             Macro for defining values. It can be used to define variables,\n             or function. If first argument is list it will create function\n             with name beeing first element of the list. The macro evalute\n             code `(define function (lambda args body))`'
      ),
      "set-obj!": ci(
        "set-obj!",
        function (e, t, r) {
          var n = _(e);
          if (du(e) || (n !== "object" && n !== "function")) {
            var i = _o("set-obj!", Ao(e), ["object", "function"]);
            throw new Error(i);
          }
          yo("set-obj!", t, ["string", "symbol", "number"]);
          e = Fu(e);
          t = t.valueOf();
          if (arguments.length === 2) {
            delete e[t];
          } else if (Ki(e) && vu(r)) {
            e[t] = Fu(r);
            e[t][Uu] = true;
          } else if (vu(r) || bo(r) || r === Pi) {
            e[t] = r;
          } else {
            e[t] = r && !Ki(r) ? r.valueOf() : r;
          }
        },
        "(set-obj! obj key value)\n\n            Function set property of JavaScript object"
      ),
      "null-environment": ci(
        "null-environment",
        function () {
          return io.inherit("null");
        },
        "(null-environment)\n\n            Function return new base environment with std lib."
      ),
      values: ci(
        "values",
        function e() {
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }
          return Wa(r);
        },
        "(values a1 a2 ...)\n\n            If called with more then one elment it will create special\n            Values object that can be used in call-with-values function"
      ),
      "call-with-values": ci(
        "call-with-values",
        function (e, t) {
          yo("call-with-values", e, "function", 1);
          yo("call-with-values", t, "function", 2);
          var r = e();
          if (r instanceof Wa) {
            return t.apply(void 0, k(r.valueOf()));
          }
          return t(r);
        },
        "(call-with-values producer consumer)\n\n            Calls its producer argument with no values and a continuation that,\n            when passed some values, calls the consumer procedure with those\n            values as arguments."
      ),
      "current-environment": ci(
        "current-environment",
        function () {
          if (this.__name__ === "__frame__") {
            return this.__parent__;
          }
          return this;
        },
        "(current-environment)\n\n            Function return current environement."
      ),
      "parent.frame": ci(
        "parent.frame",
        function () {
          return uo;
        },
        "(parent.frame)\n\n            Return parent environment if called from inside function.\n            If no parent frame found it return nil."
      ),
      eval: ci(
        "eval",
        function (e, t) {
          var n = this;
          t = t || this.get("current-environment").call(this);
          return Io(e, {
            env: t,
            error: function e(t) {
              var e = io.get("display-error");
              e.call(n, t.message);
              if (t.code) {
                var r = t.code
                  .map(function (e, t) {
                    return "[".concat(t + 1, "]: ").concat(e);
                  })
                  .join("\n");
                e.call(n, r);
              }
            },
          });
        },
        "(eval expr)\n            (eval expr environment)\n\n            Function evalute LIPS Scheme code."
      ),
      lambda: new au(
        "lambda",
        function (l) {
          var e =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            h = e.dynamic_scope,
            p = e.error;
          var _ = this;
          var d;
          if (
            l.cdr instanceof Ni &&
            sa.isString(l.cdr.car) &&
            l.cdr.cdr !== Pi
          ) {
            d = l.cdr.car.valueOf();
          }
          function v() {
            var e;
            if (h) {
              if (!(this instanceof Ga)) {
                e = _;
              } else {
                e = this;
              }
            } else {
              e = _;
            }
            e = e.inherit("lambda");
            var t = l.car;
            var r = 0;
            var n;
            if (typeof this !== "undefined" && !(this instanceof Ga)) {
              if (this && !this.__instance__) {
                Object.defineProperty(this, "__instance__", {
                  enumerable: false,
                  get: function e() {
                    return true;
                  },
                  set: function e() {},
                  configurable: false,
                });
              }
              e.set("this", this);
            }
            for (
              var i = arguments.length, u = new Array(i), a = 0;
              a < i;
              a++
            ) {
              u[a] = arguments[a];
            }
            if (this instanceof Ga) {
              var o = { throwError: false };
              e.set("arguments", this.get("arguments", o));
              e.set("parent.frame", this.get("parent.frame", o));
            } else {
              var s = u.slice();
              s.callee = v;
              s.env = e;
              e.set("arguments", s);
            }
            if (t instanceof Ln || t !== Pi) {
              while (true) {
                if (t.car !== Pi) {
                  if (t instanceof Ln) {
                    n = Qa(Ni.fromArray(u.slice(r), false));
                    e.__env__[t.__name__] = n;
                    break;
                  } else {
                    n = u[r];
                    e.__env__[t.car.__name__] = n;
                  }
                }
                if (t.cdr === Pi) {
                  break;
                }
                r++;
                t = t.cdr;
              }
            }
            if (h) {
              h = e;
            }
            var c = d ? l.cdr.cdr : l.cdr;
            var f = new Ni(new Ln("begin"), c);
            return Io(f, { env: e, dynamic_scope: h, error: p });
          }
          var t = l.car instanceof Ni ? l.car.length() : null;
          v.__code__ = new Ni(new Ln("lambda"), l);
          v[qu] = true;
          if (!(l.car instanceof Ni)) {
            return ci(v, d, true);
          }
          return ci(zu(v, t), d, true);
        },
        "(lambda (a b) body)\n            (lambda args body)\n            (lambda (a b . rest) body)\n\n            Macro lambda create new anonymous function, if first element of the body\n            is string and there is more elements it will be documentation, that can\n            be read using (help fn)"
      ),
      macroexpand: new au("macroexpand", cu()),
      "macroexpand-1": new au("macroexpand-1", cu(true)),
      "define-macro": ci(
        new au(ou, function (o, e) {
          var s = e.dynamic_scope,
            c = e.error;
          if (o.car instanceof Ni && o.car.car instanceof Ln) {
            var t = o.car.car.__name__;
            var f;
            if (sa.isString(o.cdr.car) && o.cdr.cdr instanceof Ni) {
              f = o.cdr.car.valueOf();
            }
            var r = au.defmacro(
              t,
              function (e) {
                var t = new Ga({}, this, "defmacro");
                var r = o.car.cdr;
                var n = e;
                while (true) {
                  if (r === Pi) {
                    break;
                  }
                  if (r instanceof Ln) {
                    t.__env__[r.__name__] = n;
                    break;
                  } else if (r.car !== Pi) {
                    if (n === Pi) {
                      t.__env__[r.car.__name__] = Pi;
                    } else {
                      if (n.car instanceof Ni) {
                        n.car[Pu] = true;
                      }
                      t.__env__[r.car.__name__] = n.car;
                    }
                  }
                  if (r.cdr === Pi) {
                    break;
                  }
                  if (n !== Pi) {
                    n = n.cdr;
                  }
                  r = r.cdr;
                }
                if (s) {
                  s = t;
                }
                var i = { env: t, dynamic_scope: s, error: c };
                if (o.cdr instanceof Ni) {
                  var u = f ? o.cdr.cdr : o.cdr;
                  var a = u.reduce(function (e, t) {
                    return Io(t, i);
                  });
                  return ni(a, function (e) {
                    if (_(e) === "object") {
                      delete e[Pu];
                    }
                    return e;
                  });
                }
              },
              f,
              true
            );
            r.__code__ = new Ni(new Ln("define-macro"), o);
            this.set(t, r);
          }
        }),
        "(define-macro (name . args) body)\n\n             Meta macro, macro that create new macros, if return value is list structure\n             it will be evaluated when macro is invoked. You can use quasiquote ` and\n             unquote , and unquote-splicing ,@ inside to create expression that will be\n             evaluated on runtime. Macros works like this: if you pass any expression to\n             macro the arguments will not be evaluated unless macro itself evaluate it.\n             Because of this macro can manipulate expression (arguments) as lists."
      ),
      "syntax-rules": new au(
        "syntax-rules",
        function (m, e) {
          var y = e.dynamic_scope,
            g = e.error;
          var b = this;
          function w(e) {
            var t = [];
            while (e !== Pi) {
              var r = e.car;
              t.push(r.valueOf());
              e = e.cdr;
            }
            return t;
          }
          function t(e) {
            while (e !== Pi) {
              var t = e.car;
              if (!(t instanceof Ln)) {
                throw new Error("syntax-rules: wrong identifier");
              }
              e = e.cdr;
            }
          }
          if (m.car instanceof Ln) {
            t(m.cdr.car);
          } else {
            t(m.car);
          }
          var r = new fu(function (e, t) {
            var r = t.macro_expand;
            var n = b.inherit("syntax");
            if (y) {
              y = n;
            }
            var i = this;
            if (i.__name__ === fu.__merge_env__) {
              var u = Object.getOwnPropertySymbols(i.__env__);
              u.forEach(function (e) {
                i.__parent__.set(e, i.__env__[e]);
              });
              i = i.__parent__;
            }
            var a = { env: n, dynamic_scope: y, error: g };
            var o, s, c;
            if (m.car instanceof Ln) {
              o = m.car;
              c = w(m.cdr.car);
              s = m.cdr.cdr;
            } else {
              o = "...";
              c = w(m.car);
              s = m.cdr;
            }
            try {
              while (s !== Pi) {
                var f = s.car.car;
                var l = s.car.cdr.car;
                qr(f);
                var h = hu(f, e, c, o, { expansion: this, define: b });
                if (h) {
                  if (Mr()) {
                    console.log(JSON.stringify(Vi(h), true, 2));
                    console.log("PATTERN: " + f.toString(true));
                    console.log("MACRO: " + e.toString(true));
                  }
                  var p = [];
                  var _ = _u({
                    bindings: h,
                    expr: l,
                    symbols: c,
                    scope: n,
                    lex_scope: i,
                    names: p,
                    ellipsis: o,
                  });
                  qr("OUPUT>>> " + _.toString());
                  if (_) {
                    l = _;
                  }
                  var d = i.merge(n, fu.__merge_env__);
                  if (r) {
                    return { expr: l, scope: d };
                  }
                  var v = Io(l, Br(Br({}, a), {}, { env: d }));
                  return pu(v, p);
                }
                s = s.cdr;
              }
            } catch (e) {
              e.message += " in macro: ".concat(m.toString(true));
              throw e;
            }
            throw new Error("Invalid Syntax ".concat(e.toString(true)));
          }, b);
          r.__code__ = m;
          return r;
        },
        "(syntax-rules () (pattern expression) ...)\n\n            Base of Hygienic macro, it will return new syntax expander\n            that works like lisp macros."
      ),
      quote: ci(
        new au("quote", function (e) {
          return Qa(e.car);
        }),
        "(quote expression)\n\n             Macro that return single lips expression as data (it don't evaluate its\n             argument). It will return list of pairs if put in front of lips code.\n             And if put in fron of symbol it will return that symbol not value\n             associated with that name."
      ),
      "unquote-splicing": ci(
        "unquote-splicing",
        function () {
          throw new Error(
            "You can't call `unquote-splicing` outside of quasiquote"
          );
        },
        "(unquote-splicing code)\n\n            Special form to be used in quasiquote macro, parser is processing special\n            characters ,@ and create call to this pseudo function. It can be used\n            to evalute expression inside and return the value without parenthesis.\n            the value will be joined to the output list structure."
      ),
      unquote: ci(
        "unquote",
        function () {
          throw new Error("You can't call `unquote` outside of quasiquote");
        },
        "(unquote code)\n\n            Special form to be used in quasiquote macro, parser is processing special\n            characters , and create call to this pseudo function. It can be used\n            to evalute expression inside and return the value, the output is inserted\n            into list structure created by queasiquote."
      ),
      quasiquote: au.defmacro(
        "quasiquote",
        function (e, t) {
          var o = t.dynamic_scope,
            s = t.error;
          var c = this;
          if (o) {
            o = c;
          }
          function u(e) {
            return e instanceof Ni || Li(e) || Array.isArray(e);
          }
          function f(e, t) {
            var r =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : u;
            if (e instanceof Ni) {
              var n = e.car;
              var i = e.cdr;
              if (r(n)) {
                n = t(n);
              }
              if (r(i)) {
                i = t(i);
              }
              if (gu(n) || gu(i)) {
                return $n([n, i]).then(function (e) {
                  var t = A(e, 2),
                    r = t[0],
                    n = t[1];
                  return new Ni(r, n);
                });
              } else {
                return new Ni(n, i);
              }
            }
            return e;
          }
          function a(e, t) {
            if (e instanceof Ni) {
              if (t !== Pi) {
                e.append(t);
              }
            } else {
              e = new Ni(e, t);
            }
            return e;
          }
          function r(e) {
            return !!e.filter(function (e) {
              return (
                e instanceof Ni && Ln.is(e.car, /^(unquote|unquote-splicing)$/)
              );
            }).length;
          }
          function l(e, n, i) {
            return e.reduce(function (e, t) {
              if (!(t instanceof Ni)) {
                e.push(t);
                return e;
              }
              if (Ln.is(t.car, "unquote-splicing")) {
                var r;
                if (n + 1 < i) {
                  r = d(t.cdr, n + 1, i);
                } else {
                  r = Io(t.cdr.car, { env: c, dynamic_scope: o, error: s });
                }
                if (!(r instanceof Ni)) {
                  throw new Error("Expecting list ".concat(Ao(t), " found"));
                }
                return e.concat(r.to_array());
              }
              e.push(d(t, n, i));
              return e;
            }, []);
          }
          function h(n, i, u) {
            var a = {};
            i++;
            Object.keys(n).forEach(function (e) {
              var t = n[e];
              if (t instanceof Ni) {
                if (Ln.is(t.car, "unquote-splicing")) {
                  throw new Error(
                    "You can't call `unquote-splicing` " + "inside object"
                  );
                }
                var r;
                if (i < u) {
                  r = d(t.cdr.car, i, u);
                } else {
                  r = Io(t.cdr.car, { env: c, dynamic_scope: o, error: s });
                }
                a[e] = r;
              } else {
                a[e] = t;
              }
            });
            if (Object.isFrozen(n)) {
              Object.freeze(a);
            }
            return a;
          }
          function p(i, e, t) {
            if (e < t) {
              return new Ni(new Ni(i.car.car, d(i.car.cdr, e, t)), Pi);
            }
            var n = [];
            return (function e(t) {
              var r = Io(t.car, { env: c, dynamic_scope: o, error: s });
              n.push(r);
              if (t.cdr instanceof Ni) {
                return e(t.cdr);
              }
              return ni(n, function (r) {
                if (
                  r.some(function (e) {
                    return !(e instanceof Ni);
                  })
                ) {
                  if (
                    i.cdr instanceof Ni &&
                    Ln.is(i.cdr.car, ".") &&
                    i.cdr.cdr instanceof Ni &&
                    i.cdr.cdr.cdr === Pi
                  ) {
                    return i.cdr.cdr.car;
                  }
                  if (!(i.cdr === Pi || i.cdr instanceof Ni)) {
                    var e = "You can't splice atom inside list";
                    throw new Error(e);
                  }
                  if (r.length > 1) {
                    var t = "You can't splice multiple atoms inside list";
                    throw new Error(t);
                  }
                  if (!(i.cdr instanceof Ni && r[0] === Pi)) {
                    return r[0];
                  }
                }
                r = r.map(function (e) {
                  if (_.has(e)) {
                    return e.clone();
                  } else {
                    _.add(e);
                    return e;
                  }
                });
                var n = d(i.cdr, 0, 1);
                if (n === Pi && r[0] === Pi) {
                  return undefined;
                }
                return ni(n, function (e) {
                  if (r[0] === Pi) {
                    return e;
                  }
                  if (r.length === 1) {
                    return a(r[0], e);
                  }
                  var t = r.reduce(function (e, t) {
                    return a(e, t);
                  });
                  return a(t, e);
                });
              });
            })(i.car.cdr);
          }
          var _ = new Set();
          function d(e, t, r) {
            if (e instanceof Ni) {
              if (e.car instanceof Ni) {
                if (Ln.is(e.car.car, "unquote-splicing")) {
                  return p(e, t + 1, r);
                }
                if (Ln.is(e.car.car, "unquote")) {
                  if (
                    t + 2 === r &&
                    e.car.cdr instanceof Ni &&
                    e.car.cdr.car instanceof Ni &&
                    Ln.is(e.car.cdr.car.car, "unquote-splicing")
                  ) {
                    var n = e.car.cdr;
                    return new Ni(
                      new Ni(new Ln("unquote"), p(n, t + 2, r)),
                      Pi
                    );
                  } else if (e.car.cdr instanceof Ni && e.car.cdr.cdr !== Pi) {
                    if (e.car.cdr.car instanceof Ni) {
                      var i = [];
                      return (function t(r) {
                        if (r === Pi) {
                          return Ni.fromArray(i);
                        }
                        return ni(
                          Io(r.car, { env: c, dynamic_scope: o, error: s }),
                          function (e) {
                            i.push(e);
                            return t(r.cdr);
                          }
                        );
                      })(e.car.cdr);
                    } else {
                      return e.car.cdr;
                    }
                  }
                }
              }
              if (Ln.is(e.car, "quasiquote")) {
                var u = d(e.cdr, t, r + 1);
                return new Ni(e.car, u);
              }
              if (Ln.is(e.car, "quote")) {
                return new Ni(e.car, d(e.cdr, t, r));
              }
              if (Ln.is(e.car, "unquote")) {
                t++;
                if (t < r) {
                  return new Ni(new Ln("unquote"), d(e.cdr, t, r));
                }
                if (t > r) {
                  throw new Error(
                    "You can't call `unquote` outside " + "of quasiquote"
                  );
                }
                if (e.cdr instanceof Ni) {
                  if (e.cdr.cdr !== Pi) {
                    if (e.cdr.car instanceof Ni) {
                      var a = [];
                      return (function t(r) {
                        if (r === Pi) {
                          return Ni.fromArray(a);
                        }
                        return ni(
                          Io(r.car, { env: c, dynamic_scope: o, error: s }),
                          function (e) {
                            a.push(e);
                            return t(r.cdr);
                          }
                        );
                      })(e.cdr);
                    } else {
                      return e.cdr;
                    }
                  } else {
                    return Io(e.cdr.car, {
                      env: c,
                      dynamic_scope: o,
                      error: s,
                    });
                  }
                } else {
                  return e.cdr;
                }
              }
              return f(e, function (e) {
                return d(e, t, r);
              });
            } else if (Li(e)) {
              return h(e, t, r);
            } else if (e instanceof Array) {
              return l(e, t, r);
            }
            return e;
          }
          function n(e) {
            if (e instanceof Ni) {
              delete e[Pu];
              if (!e.haveCycles("car")) {
                n(e.car);
              }
              if (!e.haveCycles("cdr")) {
                n(e.cdr);
              }
            }
          }
          if (Li(e.car) && !r(Object.values(e.car))) {
            return Qa(e.car);
          }
          if (Array.isArray(e.car) && !r(e.car)) {
            return Qa(e.car);
          }
          if (
            e.car instanceof Ni &&
            !e.car.find("unquote") &&
            !e.car.find("unquote-splicing") &&
            !e.car.find("quasiquote")
          ) {
            return Qa(e.car);
          }
          var i = d(e.car, 0, 1);
          return ni(i, function (e) {
            n(e);
            return Qa(e);
          });
        },
        "(quasiquote list ,value ,@value)\n\n            Similar macro to `quote` but inside it you can use special\n            expressions unquote abbreviated to , that will evaluate expresion inside\n            and return its value or unquote-splicing abbreviated to ,@ that will\n            evaluate expression but return value without parenthesis (it will join)\n            the list with its value. Best used with macros but it can be used outside"
      ),
      clone: ci(
        "clone",
        function e(t) {
          yo("clone", t, "pair");
          return t.clone();
        },
        "(clone list)\n\n            Function return clone of the list."
      ),
      append: ci(
        "append",
        function e() {
          var t;
          for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
            n[i] = arguments[i];
          }
          n = n.map(function (e) {
            if (e instanceof Ni) {
              return e.clone();
            }
            return e;
          });
          return (t = io.get("append!")).call.apply(t, [this].concat(k(n)));
        },
        "(append item ...)\n\n            Function will create new list with eac argument appended to the end.\n            It will always return new list and not modify it's arguments."
      ),
      "append!": ci(
        "append!",
        function () {
          var r = io.get("list?");
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
            t[n] = arguments[n];
          }
          return t.reduce(function (e, t) {
            yo("append!", e, ["nil", "pair"]);
            if ((t instanceof Ni || t === Pi) && !r(t)) {
              throw new Error("append!: Invalid argument, value is not a list");
            }
            if (du(t)) {
              return e;
            }
            if (e === Pi) {
              if (t === Pi) {
                return Pi;
              }
              return t;
            }
            return e.append(t);
          }, Pi);
        },
        "(append! arg1 ...)\n\n             Destructive version of append, it modify the list in place. It return\n             new list where each argument is appened to the end. It may modify\n             lists added as arguments."
      ),
      reverse: ci(
        "reverse",
        function e(t) {
          yo("reverse", t, ["array", "pair", "nil"]);
          if (t === Pi) {
            return Pi;
          }
          if (t instanceof Ni) {
            var r = io.get("list->array")(t).reverse();
            return io.get("array->list")(r);
          } else if (!(t instanceof Array)) {
            throw new Error(_o("reverse", Ao(t), "array or pair"));
          } else {
            return t.reverse();
          }
        },
        "(reverse list)\n\n            Function will reverse the list or array. If value is not a list\n            or array it will throw exception."
      ),
      nth: ci(
        "nth",
        function e(t, r) {
          yo("nth", t, "number");
          yo("nth", r, ["array", "pair"]);
          if (r instanceof Ni) {
            var n = r;
            var i = 0;
            while (i < t) {
              if (!n.cdr || n.cdr === Pi || n.haveCycles("cdr")) {
                return Pi;
              }
              n = n.cdr;
              i++;
            }
            return n.car;
          } else if (r instanceof Array) {
            return r[t];
          } else {
            throw new Error(_o("nth", Ao(r), "array or pair", 2));
          }
        },
        "(nth index obj)\n\n            Function return nth element of the list or array. If used with different\n            value it will throw exception"
      ),
      list: ci(
        "list",
        function e() {
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }
          return r.reverse().reduce(function (e, t) {
            return new Ni(t, e);
          }, Pi);
        },
        "(list . args)\n\n            Function create new list out of its arguments."
      ),
      substring: ci(
        "substring",
        function e(t, r, n) {
          yo("substring", t, "string");
          yo("substring", r, "number");
          yo("substring", n, ["number", "undefined"]);
          return t.substring(r.valueOf(), n && n.valueOf());
        },
        "(substring string start end)\n\n            Function return part of the string starting at start ending with end."
      ),
      concat: ci(
        "concat",
        function e() {
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }
          r.forEach(function (e, t) {
            return yo("concat", e, "string", t + 1);
          });
          return r.join("");
        },
        "(concat . strings)\n\n            Function create new string by joining its arguments"
      ),
      join: ci(
        "join",
        function e(t, r) {
          yo("join", t, "string");
          yo("join", r, ["pair", "nil"]);
          return io.get("list->array")(r).join(t);
        },
        "(join separator list)\n\n            Function return string by joining elements of the list"
      ),
      split: ci(
        "split",
        function e(t, r) {
          yo("split", t, ["regex", "string"]);
          yo("split", r, "string");
          return io.get("array->list")(r.split(t));
        },
        "(split separator string)\n\n            Function create list by splitting string by separatar that can\n            be a string or regular expression."
      ),
      replace: ci(
        "replace",
        function e(t, r, n) {
          yo("replace", t, ["regex", "string"]);
          yo("replace", r, ["string", "function"]);
          yo("replace", n, "string");
          return n.replace(t, r);
        },
        "(replace pattern replacement string)\n\n            Function change pattern to replacement inside string. Pattern can be string\n            or regex and replacement can be function or string."
      ),
      match: ci(
        "match",
        function e(t, r) {
          yo("match", t, ["regex", "string"]);
          yo("match", r, "string");
          var n = r.match(t);
          return n ? io.get("array->list")(n) : false;
        },
        "(match pattern string)\n\n            function return match object from JavaScript as list or #f if not match."
      ),
      search: ci(
        "search",
        function e(t, r) {
          yo("search", t, ["regex", "string"]);
          yo("search", r, "string");
          return r.search(t);
        },
        "(search pattern string)\n\n            Function return first found index of the pattern inside a string"
      ),
      repr: ci(
        "repr",
        function e(t, r) {
          return Zi(t, r);
        },
        "(repr obj)\n\n            Function return string LIPS representation of an object as string."
      ),
      "escape-regex": ci(
        "escape-regex",
        function (e) {
          yo("escape-regex", e, "string");
          return kn(e.valueOf());
        },
        "(escape-regex string)\n\n            Function return new string where all special operators used in regex,\n            are escaped with slash so they can be used in RegExp constructor\n            to match literal string"
      ),
      env: ci(
        "env",
        function e(e) {
          e = e || this;
          var t = Object.keys(e.__env__).map(Ln);
          var r;
          if (t.length) {
            r = Ni.fromArray(t);
          } else {
            r = Pi;
          }
          if (e.__parent__ instanceof Ga) {
            return io.get("env")(e.__parent__).append(r);
          }
          return r;
        },
        "(env)\n            (env obj)\n\n            Function return list of values (functions, macros and variables)\n            inside environment and it's parents."
      ),
      new: ci(
        "new",
        function (e) {
          for (
            var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1;
            n < t;
            n++
          ) {
            r[n - 1] = arguments[n];
          }
          var i = p(
            Fu(e),
            k(
              r.map(function (e) {
                return Eu(e);
              })
            )
          );
          return i;
        },
        "(new obj . args)\n\n            Function create new JavaScript instance of an object."
      ),
      typecheck: ci(
        yo,
        "(typecheck label value type [position])\n\n             Function check type and throw exception if type don't match.\n             Type can be string or list of strings. Position optional argument\n             is used to created proper error message."
      ),
      "unset-special!": ci(
        "unset-special!",
        function (e) {
          yo("remove-special!", e, "string");
          delete Jn.remove(e.valueOf());
        },
        "(unset-special! name)\n\n            Function remove special symbol from parser. Added by `set-special!`,\n            name must be a string."
      ),
      "set-special!": ci(
        "set-special!",
        function (e, t) {
          var r =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : Jn.LITERAL;
          yo("set-special!", e, "string", 1);
          yo("set-special!", t, "symbol", 2);
          Jn.append(e.valueOf(), t, r);
        },
        '(set-special! symbol name [type])\n\n            Add special symbol to the list of transforming operators by the parser.\n            e.g.: `(add-special! "#" \'x)` will allow to use `#(1 2 3)` and it will be\n            transformed into (x (1 2 3)) so you can write x macro that will process\n            the list. 3rd argument is optional and it can be constant value\n            lips.specials.SPLICE if this constant is used it will transform\n            `#(1 2 3)` into (x 1 2 3) that is required by # that define vectors.'
      ),
      get: Ka,
      ".": Ka,
      unbind: ci(
        Fu,
        "(unbind fn)\n\n             Function remove bidning from function so you can get props from it."
      ),
      type: ci(
        Ao,
        "(type object)\n\n             Function return type of an object as string."
      ),
      debugger: ci(
        "debugger",
        function () {
          debugger;
        },
        "(debugger)\n\n            Function stop JavaScript code in debugger."
      ),
      in: ci(
        "in",
        function (e, t) {
          if (e instanceof Ln || e instanceof sa || e instanceof da) {
            e = e.valueOf();
          }
          return e in Eu(t);
        },
        "(in key value)\n\n            Function use is in operator to check if value is in object."
      ),
      instanceof: ci(
        "instanceof",
        function (e, t) {
          return t instanceof Fu(e);
        },
        "(instanceof type obj)\n\n            Function check of object is instance of object."
      ),
      "prototype?": ci(
        "prototype?",
        Ki,
        "(prototype? obj)\n\n             Function check if value is JavaScript Object prototype."
      ),
      "macro?": ci(
        "macro?",
        function (e) {
          return e instanceof au;
        },
        "(macro? expression)\n\n            Function check if value is a macro."
      ),
      "function?": ci(
        "function?",
        vu,
        "(function? expression)\n\n             Function check if value is a function."
      ),
      "real?": ci(
        "real?",
        function (e) {
          if (Ao(e) !== "number") {
            return false;
          }
          if (e instanceof da) {
            return e.isFloat();
          }
          return da.isFloat(e);
        },
        "(real? number)\n\n            Function check if value is real number."
      ),
      "number?": ci(
        "number?",
        function (e) {
          return Number.isNaN(e) || da.isNumber(e);
        },
        "(number? expression)\n\n            Function check if value is a number or NaN value."
      ),
      "string?": ci(
        "string?",
        function (e) {
          return sa.isString(e);
        },
        "(string? expression)\n\n            Function check if value is a string."
      ),
      "pair?": ci(
        "pair?",
        function (e) {
          return e instanceof Ni;
        },
        "(pair? expression)\n\n            Function check if value is a pair or list structure."
      ),
      "regex?": ci(
        "regex?",
        function (e) {
          return e instanceof RegExp;
        },
        "(regex? expression)\n\n            Function check if value is regular expression."
      ),
      "null?": ci(
        "null?",
        function (e) {
          return du(e);
        },
        "(null? expression)\n\n            Function check if value is nulish."
      ),
      "boolean?": ci(
        "boolean?",
        function (e) {
          return typeof e === "boolean";
        },
        "(boolean? expression)\n\n            Function check if value is boolean."
      ),
      "symbol?": ci(
        "symbol?",
        function (e) {
          return e instanceof Ln;
        },
        "(symbol? expression)\n\n            Function check if value is LIPS symbol"
      ),
      "array?": ci(
        "array?",
        function (e) {
          return e instanceof Array;
        },
        "(array? expression)\n\n            Function check if value is an arrray."
      ),
      "object?": ci(
        "object?",
        function (e) {
          return (
            e !== Pi &&
            e !== null &&
            !(e instanceof oa) &&
            !(e instanceof RegExp) &&
            !(e instanceof sa) &&
            !(e instanceof Ni) &&
            !(e instanceof da) &&
            _(e) === "object" &&
            !(e instanceof Array)
          );
        },
        "(object? expression)\n\n            Function check if value is an plain object."
      ),
      flatten: ci(
        "flatten",
        function e(t) {
          yo("flatten", t, "pair");
          return t.flatten();
        },
        "(flatten list)\n\n            Return shallow list from tree structure (pairs)."
      ),
      "array->list": ci(
        "array->list",
        function (e) {
          yo("array->list", e, "array");
          return Ni.fromArray(e);
        },
        "(array->list array)\n\n            Function convert JavaScript array to LIPS list."
      ),
      "tree->array": ci(
        "tree->array",
        Ri("tree->array", true),
        "(tree->array list)\n\n             Function convert LIPS list structure into JavaScript array."
      ),
      "list->array": ci(
        "list->array",
        Ri("list->array"),
        "(list->array list)\n\n             Function convert LIPS list into JavaScript array."
      ),
      apply: ci(
        "apply",
        function e(t) {
          for (
            var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;
            i < r;
            i++
          ) {
            n[i - 1] = arguments[i];
          }
          yo("apply", t, "function", 1);
          var u = n.pop();
          yo("apply", u, ["pair", "nil"], n.length + 2);
          n = n.concat(io.get("list->array").call(this, u));
          return t.apply(this, Oo(t, n));
        },
        "(apply fn list)\n\n            Function that call function with list of arguments."
      ),
      length: ci(
        "length",
        function e(t) {
          if (!t || t === Pi) {
            return 0;
          }
          if (t instanceof Ni) {
            return t.length();
          }
          if ("length" in t) {
            return t.length;
          }
        },
        "(length expression)\n\n            Function return length of the object, the object can be list\n            or any object that have length property."
      ),
      "string->number": ci(
        "string->number",
        function (e) {
          var t =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 10;
          yo("string->number", e, "string", 1);
          yo("string->number", t, "number", 2);
          e = e.valueOf();
          t = t.valueOf();
          if (e.match(fn) || e.match(on)) {
            return dn(e, t);
          } else if (e.match(ln) || e.match(an)) {
            return yn(e, t);
          } else {
            var r = (t === 10 && !e.match(/e/i)) || t === 16;
            if ((e.match(cn) && r) || e.match(sn)) {
              return vn(e, t);
            }
            if (e.match(Wr)) {
              return wn(e);
            }
          }
          return false;
        },
        "(string->number number [radix])\n\n           Function convert string to number."
      ),
      try: ci(
        new au("try", function (t, e) {
          var c = this;
          var f = e.dynamic_scope,
            l = e.error;
          return new Promise(function (i, n) {
            var u, a;
            if (Ln.is(t.cdr.car.car, "catch")) {
              u = t.cdr.car;
              if (
                t.cdr.cdr instanceof Ni &&
                Ln.is(t.cdr.cdr.car.car, "finally")
              ) {
                a = t.cdr.cdr.car;
              }
            } else if (Ln.is(t.cdr.car.car, "finally")) {
              a = t.cdr.car;
            }
            if (!(a || u)) {
              throw new Error("try: invalid syntax");
            }
            var o = i;
            if (a) {
              o = function e(t, r) {
                o = n;
                ni(Io(new Ni(new Ln("begin"), a.cdr), s), function () {
                  r(t);
                });
              };
            }
            var s = {
              env: c,
              error: function e(t) {
                var r = c.inherit("try");
                if (u) {
                  r.set(u.cdr.car.car, t);
                  var n = { env: r, error: l };
                  if (f) {
                    n.dynamic_scope = c;
                  }
                  ni(Io(new Ni(new Ln("begin"), u.cdr.cdr), n), function (e) {
                    o(e, i);
                  });
                } else {
                  o(t, l);
                }
              },
            };
            if (f) {
              s.dynamic_scope = c;
            }
            var e = Io(t.car, s);
            if (gu(e)) {
              e.then(function (e) {
                o(e, i);
              })["catch"](s.error);
            } else {
              o(e, i);
            }
          });
        }),
        "(try expr (catch (e) code))\n             (try expr (catch (e) code) (finally code))\n             (try expr (finally code))\n\n             Macro execute user code and catch exception. If catch is provided\n             it's executed when expression expr throw error. If finally is provide\n             it's always executed at the end."
      ),
      raise: ci(
        "raise",
        function (e) {
          throw e;
        },
        "(raise obj)\n\n            Throws new exception with given object."
      ),
      throw: ci(
        "throw",
        function (e) {
          throw new Error(e);
        },
        "(throw string)\n\n            Throws new expection."
      ),
      find: ci(
        "find",
        function t(r, n) {
          yo("find", r, ["regex", "function"]);
          yo("find", n, ["pair", "nil"]);
          if (du(n)) {
            return Pi;
          }
          var e = si("find", r);
          return ni(e(n.car), function (e) {
            if (e && e !== Pi) {
              return n.car;
            }
            return t(r, n.cdr);
          });
        },
        "(find fn list)\n            (find regex list)\n\n            Higher order Function find first value for which function return true.\n            If called with regex it will create matcher function."
      ),
      "for-each": ci(
        "for-each",
        function (e) {
          var t;
          yo("for-each", e, "function");
          for (
            var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1;
            i < r;
            i++
          ) {
            n[i - 1] = arguments[i];
          }
          n.forEach(function (e, t) {
            yo("for-each", e, ["pair", "nil"], t + 1);
          });
          var u = (t = io.get("map")).call.apply(t, [this, e].concat(n));
          if (gu(u)) {
            return u.then(function () {});
          }
        },
        "(for-each fn . lists)\n\n            Higher order function that call function `fn` by for each\n            value of the argument. If you provide more then one list as argument\n            it will take each value from each list and call `fn` function\n            with that many argument as number of list arguments."
      ),
      map: ci(
        "map",
        function e(r) {
          var n = this;
          for (
            var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), u = 1;
            u < t;
            u++
          ) {
            i[u - 1] = arguments[u];
          }
          yo("map", r, "function");
          var a = io.get("list?");
          i.forEach(function (e, t) {
            yo("map", e, ["pair", "nil"], t + 1);
            if (e instanceof Ni && !a.call(n, e)) {
              throw new Error("map: argument ".concat(t + 1, " is not a list"));
            }
          });
          if (i.length === 0) {
            return Pi;
          }
          if (
            i.some(function (e) {
              return e === Pi;
            })
          ) {
            return Pi;
          }
          var o = i.map(function (e) {
            return e.car;
          });
          var s = this.get("parent.frame");
          var c = this.newFrame(r, o);
          c.set("parent.frame", s);
          return ni(r.call.apply(r, [c].concat(k(o))), function (t) {
            return ni(
              e.call.apply(
                e,
                [n, r].concat(
                  k(
                    i.map(function (e) {
                      return e.cdr;
                    })
                  )
                )
              ),
              function (e) {
                return new Ni(t, e);
              }
            );
          });
        },
        "(map fn . lists)\n\n            Higher order function that call function `fn` by for each\n            value of the argument. If you provide more then one list as argument\n            it will take each value from each list and call `fn` function\n            with that many argument as number of list arguments. The return\n            values of the function call is acumulated in result list and\n            returned by the call to map."
      ),
      "list?": ci(
        "list?",
        function (e) {
          var t = e;
          while (true) {
            if (t === Pi) {
              return true;
            }
            if (!(t instanceof Ni)) {
              return false;
            }
            if (t.haveCycles("cdr")) {
              return false;
            }
            t = t.cdr;
          }
        },
        '(list? obj)\n\n            Function test if value is proper linked list structure.\n            The car of each pair can be any value. It return false on cycles."'
      ),
      some: ci(
        "some",
        function t(r, n) {
          yo("some", r, "function");
          yo("some", n, ["pair", "nil"]);
          if (du(n)) {
            return false;
          } else {
            return ni(r(n.car), function (e) {
              return e || t(r, n.cdr);
            });
          }
        },
        "(some fn list)\n\n            Higher order function that call argument on each element of the list.\n            It stops when function fn return true for a value if so it will\n            return true. If none of the values give true, the function return false"
      ),
      fold: ci(
        "fold",
        ea("fold", function (e, t, r) {
          for (
            var n = arguments.length, i = new Array(n > 3 ? n - 3 : 0), u = 3;
            u < n;
            u++
          ) {
            i[u - 3] = arguments[u];
          }
          yo("fold", t, "function");
          i.forEach(function (e, t) {
            yo("fold", e, ["pair", "nil"], t + 1);
          });
          if (
            i.some(function (e) {
              return e === Pi;
            })
          ) {
            return r;
          }
          var a = e.call.apply(
            e,
            [this, t, r].concat(
              k(
                i.map(function (e) {
                  return e.cdr;
                })
              )
            )
          );
          return ni(a, function (e) {
            return t.apply(
              void 0,
              k(
                i.map(function (e) {
                  return e.car;
                })
              ).concat([e])
            );
          });
        }),
        "(fold fn init . lists)\n\n             Function fold is reverse of the reduce. it call function `fn`\n             on each elements of the list and return single value.\n             e.g. it call (fn a1 b1 (fn a2 b2 (fn a3 b3 '())))\n             for: (fold fn '() alist blist)"
      ),
      pluck: ci(
        "pluck",
        function e() {
          for (var t = arguments.length, u = new Array(t), r = 0; r < t; r++) {
            u[r] = arguments[r];
          }
          return function (t) {
            u = u.map(function (e) {
              return e instanceof Ln ? e.__name__ : e;
            });
            if (u.length === 0) {
              return Pi;
            } else if (u.length === 1) {
              var e = u,
                r = A(e, 1),
                n = r[0];
              return t[n];
            }
            var i = {};
            u.forEach(function (e) {
              i[e] = t[e];
            });
            return i;
          };
        },
        "(pluck . string)\n\n            If called with single string it will return function that will return\n            key from object. If called with more then one argument function will\n            return new object by taking all properties from given object."
      ),
      reduce: ci(
        "reduce",
        ea("reduce", function (t, r, e) {
          var n = this;
          for (
            var i = arguments.length, u = new Array(i > 3 ? i - 3 : 0), a = 3;
            a < i;
            a++
          ) {
            u[a - 3] = arguments[a];
          }
          yo("reduce", r, "function");
          u.forEach(function (e, t) {
            yo("reduce", e, ["pair", "nil"], t + 1);
          });
          if (
            u.some(function (e) {
              return e === Pi;
            })
          ) {
            return e;
          }
          return ni(
            r.apply(
              void 0,
              k(
                u.map(function (e) {
                  return e.car;
                })
              ).concat([e])
            ),
            function (e) {
              return t.call.apply(
                t,
                [n, r, e].concat(
                  k(
                    u.map(function (e) {
                      return e.cdr;
                    })
                  )
                )
              );
            }
          );
        }),
        "(reduce fn init list . lists)\n\n             Higher order function take each element of the list and call\n             the function with result of previous call or init and next element\n             on the list until each element is processed and return single value\n             as result of last call to `fn` function.\n             e.g. it call (fn a3 b3 (fn a2 b2 (fn a1 b1 init)))\n             for (reduce fn init alist blist)"
      ),
      filter: ci(
        "filter",
        function e(t, r) {
          yo("filter", t, ["regex", "function"]);
          yo("filter", r, ["pair", "nil"]);
          var i = io.get("list->array")(r);
          var u = [];
          var a = si("filter", t);
          return (function t(r) {
            function e(e) {
              if (e && e !== Pi) {
                u.push(n);
              }
              return t(++r);
            }
            if (r === i.length) {
              return Ni.fromArray(u);
            }
            var n = i[r];
            return ni(a(n), e);
          })(0);
        },
        "(filter fn list)\n            (filter regex list)\n\n            Higher order function that call `fn` for each element of the list\n            and return list for only those elements for which funtion return\n            true value. If called with regex it will create matcher function."
      ),
      compose: ci(
        Xu,
        "(compose . fns)\n\n             Higher order function and create new function that apply all functions\n             From right to left and return it's value. Reverse of compose.\n             e.g.:\n             ((compose (curry + 2) (curry * 3)) 3)\n             11\n            "
      ),
      pipe: ci(
        Ku,
        "(pipe . fns)\n\n             Higher order function and create new function that apply all functions\n             From left to right and return it's value. Reverse of compose.\n             e.g.:\n             ((pipe (curry + 2) (curry * 3)) 3)\n             15"
      ),
      curry: ci(
        ua,
        "(curry fn . args)\n\n             Higher order function that create curried version of the function.\n             The result function will have parially applied arguments and it\n             will keep returning functions until all arguments are added\n\n             e.g.:\n             (define (add a b c d) (+ a b c d))\n             (define add1 (curry add 1))\n             (define add12 (add 2))\n             (display (add12 3 4))"
      ),
      gcd: ci(
        "gcd",
        function e() {
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }
          vo("lcm", r, "number");
          return r.reduce(function (e, t) {
            return e.gcd(t);
          });
        },
        "(gcd n1 n2 ...)\n\n            Function return the greatest common divisor of their arguments."
      ),
      lcm: ci(
        "lcm",
        function e() {
          for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
            r[n] = arguments[n];
          }
          vo("lcm", r, "number");
          var i = r.length,
            u = eu(r[0]);
          for (var a = 1; a < i; a++) {
            var o = eu(r[a]),
              s = u;
            while (u && o) {
              u > o ? (u %= o) : (o %= u);
            }
            u = eu(s * r[a]) / (u + o);
          }
          return da(u);
        },
        "(lcm n1 n2 ...)\n\n            Function return the least common multiple of their arguments."
      ),
      "odd?": ci(
        "odd?",
        ra(function (e) {
          return da(e).isOdd();
        }),
        "(odd? number)\n\n             Function check if number os odd."
      ),
      "even?": ci(
        "even?",
        ra(function (e) {
          return da(e).isEven();
        }),
        "(even? number)\n\n             Function check if number is even."
      ),
      "*": ci(
        "*",
        ia(function (e, t) {
          return da(e).mul(t);
        }, da(1)),
        "(* . numbers)\n\n        Multiplicate all numbers passed as arguments. If single value is passed\n        it will return that value."
      ),
      "+": ci(
        "+",
        ia(function (e, t) {
          return da(e).add(t);
        }, da(0)),
        "(+ . numbers)\n\n        Sum all numbers passed as arguments. If single value is passed it will\n        return that value."
      ),
      "-": ci(
        "-",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          if (t.length === 0) {
            throw new Error("-: procedure require at least one argument");
          }
          vo("-", t, "number");
          if (t.length === 1) {
            return da(t[0]).sub();
          }
          if (t.length) {
            return t.reduce(
              na(function (e, t) {
                return da(e).sub(t);
              })
            );
          }
        },
        "(- n1 n2 ...)\n            (- n)\n\n            Substract number passed as argument. If only one argument is passed\n            it will negate the value."
      ),
      "/": ci(
        "/",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          if (t.length === 0) {
            throw new Error("/: procedure require at least one argument");
          }
          vo("/", t, "number");
          if (t.length === 1) {
            return da(1).div(t[0]);
          }
          return t.reduce(
            na(function (e, t) {
              return da(e).div(t);
            })
          );
        },
        "(/ n1 n2 ...)\n            (/ n)\n\n            Divide number passed as arguments one by one. If single argument\n            is passed it will calculate (/ 1 n1)."
      ),
      abs: ci(
        "abs",
        ra(function (e) {
          return da(e).abs();
        }),
        "(abs number)\n\n             Function create absolute value from number."
      ),
      truncate: ci(
        "truncate",
        function (e) {
          yo("truncate", e, "number");
          if (da.isFloat(e)) {
            if (e instanceof da) {
              e = e.valueOf();
            }
            return Ea(uu(e));
          }
          return e;
        },
        "(truncate n)\n\n            Function return integer value from real number."
      ),
      sqrt: ci(
        "sqrt",
        ra(function (e) {
          return da(e).sqrt();
        }),
        "(sqrt number)\n\n             Function return square root of the number."
      ),
      "**": ci(
        "**",
        na(function (e, t) {
          e = da(e);
          t = da(t);
          if (t.cmp(0) === -1) {
            return Ea(1).div(e).pow(t.sub());
          }
          return e.pow(t);
        }),
        "(** a b)\n\n            Function calculate number a to to the power of b."
      ),
      "1+": ci(
        "1+",
        ra(function (e) {
          return da(e).add(1);
        }),
        "(1+ number)\n\n             Function add 1 to the number and return result."
      ),
      "1-": ci(
        ra(function (e) {
          return da(e).sub(1);
        }),
        "(1- number)\n\n             Function substract 1 from the number and return result."
      ),
      "%": ci(
        "%",
        function (e, t) {
          vo("%", [e, t], "number");
          return da(e).rem(t);
        },
        "(% n1 n2)\n\n             Function get reminder of it's arguments."
      ),
      "==": ci(
        "==",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          vo("==", t, "number");
          return tu(function (e, t) {
            return da(e).cmp(t) === 0;
          }, t);
        },
        "(== x1 x2 ...)\n\n            Function compare its numerical arguments and check if they are equal"
      ),
      ">": ci(
        ">",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          vo(">", t, "number");
          return tu(function (e, t) {
            return da(e).cmp(t) === 1;
          }, t);
        },
        "(> x1 x2 ...)\n\n            Function compare its numerical arguments and check if they are\n            monotonically increasing"
      ),
      "<": ci(
        "<",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          vo("<", t, "number");
          return tu(function (e, t) {
            return da(e).cmp(t) === -1;
          }, t);
        },
        "(< x1 x2 ...)\n\n            Function compare its numerical arguments and check if they are\n            monotonically decreasing"
      ),
      "<=": ci(
        "<=",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          vo("<=", t, "number");
          return tu(function (e, t) {
            return [0, -1].includes(da(e).cmp(t));
          }, t);
        },
        "(<= x1 x2 ...)\n\n            Function compare its numerical arguments and check if they are\n            monotonically nonincreasing"
      ),
      ">=": ci(
        ">=",
        function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
            t[r] = arguments[r];
          }
          vo(">=", t, "number");
          return tu(function (e, t) {
            return [0, 1].includes(da(e).cmp(t));
          }, t);
        },
        "(>= x1 x2 ...)\n\n            Function compare its numerical arguments and check if they are\n            monotonically nondecreasing"
      ),
      "eq?": ci(
        "eq?",
        ru,
        "(eq? a b)\n\n             Function compare two values if they are identical."
      ),
      or: ci(
        new au("or", function (e, t) {
          var i = t.dynamic_scope,
            u = t.error;
          var a = io.get("list->array")(e);
          var o = this;
          if (i) {
            i = o;
          }
          if (!a.length) {
            return false;
          }
          var s;
          return (function t() {
            function e(e) {
              s = e;
              if (s !== false) {
                return s;
              } else {
                return t();
              }
            }
            if (!a.length) {
              if (s !== false) {
                return s;
              } else {
                return false;
              }
            } else {
              var r = a.shift();
              var n = Io(r, { env: o, dynamic_scope: i, error: u });
              return ni(n, e);
            }
          })();
        }),
        "(or . expressions)\n\n             Macro execute the values one by one and return the one that is truthy value.\n             If there are no expression that evaluate to true it return false."
      ),
      and: ci(
        new au("and", function (e) {
          var t =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            i = t.dynamic_scope,
            u = t.error;
          var a = io.get("list->array")(e);
          var o = this;
          if (i) {
            i = o;
          }
          if (!a.length) {
            return true;
          }
          var s;
          return (function t() {
            function e(e) {
              s = e;
              if (s === false) {
                return false;
              } else {
                return t();
              }
            }
            if (!a.length) {
              if (s !== false) {
                return s;
              } else {
                return false;
              }
            } else {
              var r = a.shift();
              var n = Io(r, { env: o, dynamic_scope: i, error: u });
              return ni(n, e);
            }
          })();
        }),
        "(and . expressions)\n\n             Macro evalute each expression in sequence if any value return false it will\n             return false. If each value return true it will return the last value.\n             If it's called without arguments it will return true."
      ),
      "|": ci(
        "|",
        function (e, t) {
          return da(e).or(t);
        },
        "(| a b)\n\n            Function calculate or bit operation."
      ),
      "&": ci(
        "&",
        function (e, t) {
          return da(e).and(t);
        },
        "(& a b)\n\n            Function calculate and bit operation."
      ),
      "~": ci(
        "~",
        function (e) {
          return da(e).neg();
        },
        "(~ number)\n\n            Function negate the value."
      ),
      ">>": ci(
        ">>",
        function (e, t) {
          return da(e).shr(t);
        },
        "(>> a b)\n\n            Function right shit the value a by value b."
      ),
      "<<": ci(
        "<<",
        function (e, t) {
          return da(e).shl(t);
        },
        "(<< a b)\n\n            Function left shit the value a by value b."
      ),
      not: ci(
        "not",
        function e(t) {
          if (du(t)) {
            return true;
          }
          return !t;
        },
        "(not object)\n\n            Function return negation of the argument."
      ),
    },
    undefined,
    "global"
  );
  var uo = io.inherit("user-env");
  function ao(e, t) {
    e.constant("**internal-env**", t);
    e.doc(
      "**internal-env**",
      "**internal-env**\n\n            Constant used to hide stdin, stdout and stderr so they don't interfere\n            with variables with the same name. Constants are internal type\n            of variables that can't be redefined, defining variable with same name\n            will throw an error."
    );
    io.set("**interaction-environment**", e);
  }
  ao(uo, to);
  io.doc(
    "**interaction-environment**",
    "**interaction-environment**\n\n        Internal dynamic, global variable used to find interpreter environment.\n        It's used so the read and write functions can locate **internal-env**\n        that contain references to stdin, stdout and stderr."
  );
  (function () {
    var e = { ceil: "ceiling" };
    ["floor", "round", "ceil"].forEach(function (t) {
      var r = e[t] ? e[t] : t;
      io.set(
        r,
        ci(
          r,
          function (e) {
            yo(r, e, "number");
            if (e instanceof da) {
              return e[t]();
            }
          },
          "("
            .concat(r, " number)\n\n                Function calculate ")
            .concat(r, " of a number.")
        )
      );
    });
  })();
  function oo(e) {
    if (e.length === 1) {
      return e[0];
    } else {
      var t = [];
      var r = oo(e.slice(1));
      for (var n = 0; n < r.length; n++) {
        for (var i = 0; i < e[0].length; i++) {
          t.push(e[0][i] + r[n]);
        }
      }
      return t;
    }
  }
  function so(e, t, r) {
    var n = [];
    for (var i = t; i <= r; ++i) {
      var u = [];
      for (var a = 0; a < i; ++a) {
        u.push(e);
      }
      n = n.concat(oo(u));
    }
    return n;
  }
  so(["d", "a"], 2, 5).forEach(function (e) {
    var t = e.split("");
    var r = t.slice().reverse();
    var n =
      t
        .map(function (e) {
          return "(c".concat(e, "r");
        })
        .join(" ") +
      " arg" +
      ")".repeat(t.length);
    var i = "c" + e + "r";
    io.set(
      i,
      ci(
        i,
        function (e) {
          return r.reduce(function (e, t) {
            yo(i, e, "pair");
            if (t === "a") {
              return e.car;
            } else {
              return e.cdr;
            }
          }, e);
        },
        "(".concat(i, " arg)\n\n            Function calculate ").concat(n)
      )
    );
  });
  function co(e, t) {
    var r = e.split(Rr.sep).filter(Boolean);
    for (var n = r.length; n--; ) {
      var i;
      var u = (i = Rr).join.apply(i, ["/"].concat(k(r.slice(0, n + 1))));
      if (t(u)) {
        return u;
      }
    }
  }
  function fo(e) {
    return co(e, function (e) {
      return Nr.existsSync(Rr.join(e, "node_modules"));
    });
  }
  function lo() {
    return typeof global !== "undefined" && global.global === global;
  }
  function ho() {
    return po.apply(this, arguments);
  }
  function po() {
    po = O(
      j.mark(function e() {
        var r, n, i, u, a;
        return j.wrap(function e(t) {
          while (1) {
            switch ((t.prev = t.next)) {
              case 0:
                t.next = 2;
                return Promise.resolve().then(function () {
                  return ds;
                });
              case 2:
                r = t.sent;
                n = r.createRequire;
                Tr = n(
                  typeof document === "undefined" &&
                    typeof location === "undefined"
                    ? new (require("u" + "rl").URL)("file:" + a).href
                    : typeof document === "undefined"
                    ? location.href
                    : (document.currentScript && document.currentScript.src) ||
                      new URL("lips.js", document.baseURI).href
                );
                t.next = 7;
                return Promise.resolve().then(function () {
                  return ds;
                });
              case 7:
                Nr = t.sent;
                t.next = 10;
                return Promise.resolve().then(function () {
                  return js;
                });
              case 10:
                Rr = t.sent;
                io.set("global", global);
                io.set("self", global);
                io.set("window", undefined);
                i = new URL(
                  typeof document === "undefined" &&
                  typeof location === "undefined"
                    ? new (require("u" + "rl").URL)("file:" + a).href
                    : typeof document === "undefined"
                    ? location.href
                    : (document.currentScript && document.currentScript.src) ||
                      new URL("lips.js", document.baseURI).href
                );
                u = Rr.dirname(i.pathname);
                a = Rr.basename(i.pathname);
                io.set("__dirname", u);
                io.set("__filename", a);
                io.set(
                  "require.resolve",
                  ci(
                    "require.resolve",
                    function (e) {
                      yo("require.resolve", e, "string");
                      var t = e.valueOf();
                      return Tr.resolve(t);
                    },
                    "(require.resolve path)\n\n           Return path relative the current module."
                  )
                );
                io.set(
                  "require",
                  ci(
                    "require",
                    function (t) {
                      yo("require", t, "string");
                      t = t.valueOf();
                      var e = process.cwd();
                      var r;
                      try {
                        if (t.match(/^\s*\./)) {
                          r = Tr(Rr.join(e, t));
                        } else {
                          var n = fo(e);
                          if (n) {
                            r = Tr(Rr.join(n, "node_modules", t));
                          } else {
                            r = Tr(t);
                          }
                        }
                      } catch (e) {
                        r = Tr(t);
                      }
                      return Au(r, global);
                    },
                    "(require module)\n\n            Function to be used inside Node.js to import the module."
                  )
                );
              case 21:
              case "end":
                return t.stop();
            }
          }
        }, e);
      })
    );
    return po.apply(this, arguments);
  }
  if (lo()) {
    ho();
  } else if (typeof window !== "undefined" && window === jr) {
    io.set("window", window);
    io.set("global", undefined);
    io.set("self", window);
  } else if (
    typeof self !== "undefined" &&
    typeof WorkerGlobalScope !== "undefined"
  ) {
    io.set("self", self);
    io.set("window", undefined);
    io.set("global", undefined);
  }
  function _o(e, t, r) {
    var n =
      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var i = e ? " in expression `".concat(e, "`") : "";
    if (n !== null) {
      i += " (argument ".concat(n, ")");
    }
    if (vu(r)) {
      return "Invalid type got ".concat(t).concat(i);
    }
    if (r instanceof Array) {
      if (r.length === 1) {
        r = r[0];
      } else {
        var u = r[r.length - 1];
        r = r.slice(0, -1).join(", ") + " or " + u;
      }
    }
    return "Expecting ".concat(r, ", got ").concat(t).concat(i);
  }
  function vo(r, e, n) {
    e.forEach(function (e, t) {
      yo(r, e, n, t + 1);
    });
  }
  function mo(e, t, r) {
    yo(e, t, r);
    if (t.__type__ === Ma) {
      throw new Error(_o(e, "binary-port", "textual-port"));
    }
  }
  function yo(e, t, r) {
    var n =
      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    e = e.valueOf();
    var i = Ao(t).toLowerCase();
    if (vu(r)) {
      if (!r(t)) {
        throw new Error(_o(e, i, r, n));
      }
      return;
    }
    var u = false;
    if (r instanceof Ni) {
      r = r.to_array();
    }
    if (r instanceof Array) {
      r = r.map(function (e) {
        return e.valueOf();
      });
    }
    if (r instanceof Array) {
      r = r.map(function (e) {
        return e.valueOf().toLowerCase();
      });
      if (r.includes(i)) {
        u = true;
      }
    } else {
      r = r.valueOf().toLowerCase();
    }
    if (!u && i !== r) {
      throw new Error(_o(e, i, r, n));
    }
  }
  function go(e) {
    var t = _(e);
    return (
      ["string", "function"].includes(t) ||
      _(e) === "symbol" ||
      e instanceof Yn ||
      e instanceof Ln ||
      e instanceof da ||
      e instanceof sa ||
      e instanceof RegExp
    );
  }
  function bo(e) {
    return e instanceof da || e instanceof sa || e instanceof oa;
  }
  function wo(e, t) {
    if (e === null) {
      return false;
    }
    return _(e) === "object" && t in Object.getOwnPropertySymbols(e);
  }
  function Do(e, t) {
    if (wo(e, t) || wo(e.__proto__, t)) {
      return vu(e[t]);
    }
  }
  function Eo(r) {
    var n = new WeakMap();
    return function (e) {
      var t = n.get(e);
      if (!t) {
        t = r(e);
      }
      return t;
    };
  }
  Ao = Eo(Ao);
  function Ao(e) {
    var t = Pr.get(e);
    if (t) {
      return t;
    }
    if (_(e) === "object") {
      for (var r = 0, n = Object.entries(Ir); r < n.length; r++) {
        var i = A(n[r], 2),
          u = i[0],
          a = i[1];
        if (e instanceof a) {
          return u;
        }
      }
      if (e.__instance__) {
        e.__instance__ = false;
        if (e.__instance__) {
          if (vu(e.toType)) {
            return e.toType();
          }
          return "instance";
        }
      }
      if (e.constructor) {
        if (e.constructor.__class__) {
          return e.constructor.__class__;
        }
        if (e.constructor === Object) {
          if (Do(e, Symbol.iterator)) {
            return "iterator";
          }
          if (Do(e, Symbol.asyncIterator)) {
            return "async-iterator";
          }
        }
        if (e.constructor.name === "") {
          return "object";
        }
        return e.constructor.name.toLowerCase();
      }
    }
    return _(e);
  }
  function Fo(e) {
    var t = [];
    r(e);
    if (t.length) {
      return u(e);
    }
    return e;
    function r(e) {
      if (gu(e)) {
        t.push(e);
      } else if (e instanceof Ni) {
        if (!e.haveCycles("car")) {
          r(e.car);
        }
        if (!e.haveCycles("cdr")) {
          r(e.cdr);
        }
      } else if (e instanceof Array) {
        e.forEach(r);
      }
    }
    function n(e) {
      return i.apply(this, arguments);
    }
    function i() {
      i = O(
        j.mark(function e(r) {
          var n;
          return j.wrap(function e(t) {
            while (1) {
              switch ((t.prev = t.next)) {
                case 0:
                  t.t0 = Ni;
                  if (!r.haveCycles("car")) {
                    t.next = 5;
                    break;
                  }
                  t.t1 = r.car;
                  t.next = 8;
                  break;
                case 5:
                  t.next = 7;
                  return u(r.car);
                case 7:
                  t.t1 = t.sent;
                case 8:
                  t.t2 = t.t1;
                  if (!r.haveCycles("cdr")) {
                    t.next = 13;
                    break;
                  }
                  t.t3 = r.cdr;
                  t.next = 16;
                  break;
                case 13:
                  t.next = 15;
                  return u(r.cdr);
                case 15:
                  t.t3 = t.sent;
                case 16:
                  t.t4 = t.t3;
                  n = new t.t0(t.t2, t.t4);
                  if (r[Pu]) {
                    n[Pu] = true;
                  }
                  return t.abrupt("return", n);
                case 20:
                case "end":
                  return t.stop();
              }
            }
          }, e);
        })
      );
      return i.apply(this, arguments);
    }
    function u(e) {
      if (e instanceof Array) {
        return $n(e.map(u));
      }
      if (e instanceof Ni && t.length) {
        return n(e);
      }
      return e;
    }
  }
  function xo(e, t) {
    var r = t.env,
      n = t.dynamic_scope,
      i = t.error;
    var u = [];
    var a = e;
    Xi(a);
    function o() {
      return u;
    }
    return (function t() {
      if (a instanceof Ni) {
        var e = Io(a.car, { env: r, dynamic_scope: n, error: i });
        if (n) {
          e = ni(e, function (e) {
            if (Hu(e)) {
              return e.bind(n);
            }
            return e;
          });
        }
        return ni(Fo(e), function (e) {
          u.push(e);
          if (a.haveCycles("cdr")) {
            return o();
          }
          a = a.cdr;
          return t();
        });
      } else if (a === Pi) {
        return o();
      } else {
        throw new Error("Syntax Error: improper list found in apply");
      }
    })();
  }
  function Co(e, t, r) {
    var n = e.invoke(t, r);
    return ni(Fo(n), function (e) {
      if (e instanceof Ni) {
        e.markCycles();
      }
      return Qa(e);
    });
  }
  function ko(e, t, r) {
    function n(e) {
      if (e instanceof Ni) {
        e.markCycles();
        return e;
      }
      return Qa(e);
    }
    var i = e.invoke(t, r);
    return ni(Fo(i), function e(t) {
      if (!t || (t && t[Pu]) || go(t)) {
        return t;
      } else {
        return ni(Io(t, r), n);
      }
    });
  }
  function Oo(e, t) {
    if (ku(e) && !Cu(e) && (!Ou(e) || Bu(e))) {
      t = t.map(Eu);
    }
    if (!Gu(e) && t.some(Yi) && !Yi(e) && !Mi(e)) {
      var r = [],
        n = t.length;
      var i = function e() {
        var i = t[n];
        if (Yi(i)) {
          u = function e() {
            for (
              var t = arguments.length, r = new Array(t), n = 0;
              n < t;
              n++
            ) {
              r[n] = arguments[n];
            }
            return ni(i.apply(this, r), Eu);
          };
          $u(u, "__bound__", true);
          $u(u, "__fn__", i);
          u.prototype = i.prototype;
          r[n] = u;
        } else {
          r[n] = i;
        }
      };
      while (n--) {
        var u;
        i();
      }
      t = r;
    }
    return t;
  }
  function So(i, e) {
    var t =
        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      u = t.env,
      a = t.dynamic_scope,
      r = t.error,
      o = r === void 0 ? function () {} : r;
    e = xo(e, { env: u, dynamic_scope: a, error: o });
    return ni(e, function (e) {
      if (Gu(i)) {
        i = Fu(i);
      }
      e = Oo(i, e);
      var t = e.slice();
      var r = (a || u).newFrame(i, t);
      var n = Fo(i.apply(r, e));
      return ni(
        n,
        function (e) {
          if (e instanceof Ni) {
            e.markCycles();
            return Qa(e);
          }
          return wu(e);
        },
        o
      );
    });
  }
  var Bo = (function () {
    function t(e) {
      y(this, t);
      this.__value__ = e;
    }
    b(t, [
      {
        key: "invoke",
        value: function e() {
          if (this.__value__ === null) {
            throw new Error("Continuations are not implemented yet");
          }
        },
      },
      {
        key: "toString",
        value: function e() {
          return "#<Continuation>";
        },
      },
    ]);
    return t;
  })();
  var jo = function e() {};
  function Io(t) {
    var e =
        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      r = e.env,
      n = e.dynamic_scope,
      i = e.error,
      u = i === void 0 ? jo : i;
    try {
      if (n === true) {
        r = n = r || io;
      } else if (r === true) {
        r = n = io;
      } else {
        r = r || io;
      }
      var a = { env: r, dynamic_scope: n, error: u };
      var o;
      if (du(t)) {
        return t;
      }
      if (t instanceof Ln) {
        return r.get(t);
      }
      if (!(t instanceof Ni)) {
        return t;
      }
      var s = t.car;
      var c = t.cdr;
      if (s instanceof Ni) {
        o = Fo(Io(s, a));
        if (gu(o)) {
          return o.then(function (e) {
            return Io(new Ni(e, t.cdr), a);
          });
        } else if (!yu(o)) {
          throw new Error(
            Ao(o) +
              " " +
              r.get("repr")(o) +
              " is not callable while evaluating " +
              t.toString()
          );
        }
      }
      if (s instanceof Ln) {
        o = r.get(s);
      } else if (vu(s)) {
        o = s;
      }
      var f;
      if (o instanceof fu) {
        f = Co(o, t, a);
      } else if (o instanceof au) {
        f = ko(o, c, a);
      } else if (vu(o)) {
        f = So(o, c, a);
      } else if (mu(o)) {
        f = o.invoke();
      } else if (t instanceof Ni) {
        o = s && s.toString();
        throw new Error("".concat(Ao(s), " ").concat(o, " is not a function"));
      } else {
        return t;
      }
      var l = r.get(Symbol["for"]("__promise__"), { throwError: false });
      if (l === true && gu(f)) {
        f = f.then(function (e) {
          if (e instanceof Ni && !o[Pu]) {
            return Io(e, a);
          }
          return e;
        });
        return new Yn(f);
      }
      return f;
    } catch (e) {
      u && u.call(r, e, t);
    }
  }
  var Po = Ro(function (e) {
    return e;
  });
  var No = Ro(function (e, t) {
    return t;
  });
  function Ro(_) {
    return (function () {
      var n = O(
        j.mark(function e(r, n, i) {
          var u, a, o, s, c, f, l, h, p;
          return j.wrap(
            function e(t) {
              while (1) {
                switch ((t.prev = t.next)) {
                  case 0:
                    if (i === true) {
                      n = i = n || uo;
                    } else if (n === true) {
                      n = i = uo;
                    } else {
                      n = n || uo;
                    }
                    u = [];
                    a = Array.isArray(r) ? r : ti(r);
                    o = false;
                    s = false;
                    t.prev = 5;
                    f = F(a);
                  case 7:
                    t.next = 9;
                    return f.next();
                  case 9:
                    if (!(o = !(l = t.sent).done)) {
                      t.next = 27;
                      break;
                    }
                    h = l.value;
                    p = Io(h, {
                      env: n,
                      dynamic_scope: i,
                      error: function e(t, r) {
                        if (t && t.message) {
                          if (t.message.match(/^Error:/)) {
                            var n = /^(Error:)\s*([^:]+:\s*)/;
                            t.message = t.message.replace(n, "$1 $2");
                          }
                          if (r) {
                            if (!(t.__code__ instanceof Array)) {
                              t.__code__ = [];
                            }
                            t.__code__.push(r.toString(true));
                          }
                        }
                        throw t;
                      },
                    });
                    if (gu(p)) {
                      t.next = 16;
                      break;
                    }
                    u.push(_(h, p));
                    t.next = 24;
                    break;
                  case 16:
                    t.t0 = u;
                    t.t1 = _;
                    t.t2 = h;
                    t.next = 21;
                    return p;
                  case 21:
                    t.t3 = t.sent;
                    t.t4 = (0, t.t1)(t.t2, t.t3);
                    t.t0.push.call(t.t0, t.t4);
                  case 24:
                    o = false;
                    t.next = 7;
                    break;
                  case 27:
                    t.next = 33;
                    break;
                  case 29:
                    t.prev = 29;
                    t.t5 = t["catch"](5);
                    s = true;
                    c = t.t5;
                  case 33:
                    t.prev = 33;
                    t.prev = 34;
                    if (!(o && f["return"] != null)) {
                      t.next = 38;
                      break;
                    }
                    t.next = 38;
                    return f["return"]();
                  case 38:
                    t.prev = 38;
                    if (!s) {
                      t.next = 41;
                      break;
                    }
                    throw c;
                  case 41:
                    return t.finish(38);
                  case 42:
                    return t.finish(33);
                  case 43:
                    return t.abrupt("return", u);
                  case 44:
                  case "end":
                    return t.stop();
                }
              }
            },
            e,
            null,
            [
              [5, 29, 33, 43],
              [34, , 38, 42],
            ]
          );
        })
      );
      function e(e, t, r) {
        return n.apply(this, arguments);
      }
      return e;
    })();
  }
  function To(e) {
    var t = { "[": "]", "(": ")" };
    var r;
    if (typeof e === "string") {
      r = Nn(e);
    } else {
      r = e.map(function (e) {
        return e && e.token ? e.token : e;
      });
    }
    var n = Object.keys(t);
    var i = Object.values(t).concat(n);
    r = r.filter(function (e) {
      return i.includes(e);
    });
    var u = new On();
    var a = Cr(r),
      o;
    try {
      for (a.s(); !(o = a.n()).done; ) {
        var s = o.value;
        if (n.includes(s)) {
          u.push(s);
        } else if (!u.is_empty()) {
          var c = u.top();
          var f = t[c];
          if (s === f) {
            u.pop();
          } else {
            throw new Error("Syntax error: missing closing ".concat(f));
          }
        } else {
          throw new Error("Syntax error: not matched closing ".concat(s));
        }
      }
    } catch (e) {
      a.e(e);
    } finally {
      a.f();
    }
    return u.is_empty();
  }
  function Lo(e) {
    var t = "(" + e.toString() + ")()";
    var r = window.URL || window.webkitURL;
    var n;
    try {
      n = new Blob([t], { type: "application/javascript" });
    } catch (e) {
      var i =
        window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;
      n = new i();
      n.append(t);
      n = n.getBlob();
    }
    return new jr.Worker(r.createObjectURL(n));
  }
  function Uo() {
    return ps.version.match(/^(\{\{VER\}\}|DEV)$/);
  }
  function qo() {
    if (lo()) {
      return;
    }
    var e;
    if (document.currentScript) {
      e = document.currentScript;
    } else {
      var t = document.querySelectorAll("script");
      if (!t.length) {
        return;
      }
      e = t[t.length - 1];
    }
    var r = e.getAttribute("src");
    return r;
  }
  var Mo = qo();
  function Yo() {
    var e =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    var t = "dist/std.xcb";
    if (e === "") {
      if (Mo) {
        e = Mo.replace(/[^/]*$/, "std.xcb");
      } else if (Uo()) {
        e = "https://cdn.jsdelivr.net/gh/jcubic/lips@devel/".concat(t);
      } else {
        e = "https://cdn.jsdelivr.net/npm/@jcubic/lips@"
          .concat(ps.version, "/")
          .concat(t);
      }
    }
    var r = io.get("load");
    return r.call(uo, e, io);
  }
  function $o(e) {
    this.url = e;
    var a = (this.worker = Lo(function () {
      var a;
      var o;
      self.addEventListener("message", function (e) {
        var r = e.data;
        var t = r.id;
        if (r.type !== "RPC" || t === null) {
          return;
        }
        function n(e) {
          self.postMessage({ id: t, type: "RPC", result: e });
        }
        function i(e) {
          self.postMessage({ id: t, type: "RPC", error: e });
        }
        if (r.method === "eval") {
          if (!o) {
            i("Worker RPC: LIPS not initilized, call init first");
            return;
          }
          o.then(function () {
            var e = r.params[0];
            var t = r.params[1];
            a.exec(e, t)
              .then(function (e) {
                e = e.map(function (e) {
                  return e && e.valueOf();
                });
                n(e);
              })
              ["catch"](function (e) {
                i(e);
              });
          });
        } else if (r.method === "init") {
          var u = r.params[0];
          if (typeof u !== "string") {
            i("Worker RPC: url is not a string");
          } else {
            importScripts("".concat(u, "/dist/lips.min.js"));
            a = new ps.Interpreter("worker");
            o = Yo(u);
            o.then(function () {
              n(true);
            });
          }
        }
      });
    }));
    this.rpc = (function () {
      var n = 0;
      return function e(t, r) {
        var u = ++n;
        return new Promise(function (n, i) {
          a.addEventListener("message", function e(t) {
            var r = t.data;
            if (r && r.type === "RPC" && r.id === u) {
              if (r.error) {
                i(r.error);
              } else {
                n(r.result);
              }
              a.removeEventListener("message", e);
            }
          });
          a.postMessage({ type: "RPC", method: t, id: u, params: r });
        });
      };
    })();
    this.rpc("init", [e])["catch"](function (e) {
      console.error(e);
    });
    this.exec = function (e) {
      var t =
        arguments.length > 1 && arguments[1] !== undefined
          ? arguments[1]
          : false;
      return this.rpc("eval", [e, t]);
    };
  }
  var zo = {
    pair: function e(t) {
      var r = A(t, 2),
        n = r[0],
        i = r[1];
      return Ni(n, i);
    },
    number: function e(t) {
      if (sa.isString(t)) {
        return da([t, 10]);
      }
      return da(t);
    },
    regex: function e(t) {
      var r = A(t, 2),
        n = r[0],
        i = r[1];
      return new RegExp(n, i);
    },
    nil: function e() {
      return Pi;
    },
    symbol: function e(t) {
      if (sa.isString(t)) {
        return Ln(t);
      } else if (Array.isArray(t)) {
        return Ln(Symbol["for"](t[0]));
      }
    },
    string: sa,
    character: oa,
  };
  var Vo = Object.keys(zo);
  var Jo = {};
  for (var Go = 0, Ho = Object.entries(Vo); Go < Ho.length; Go++) {
    var Wo = A(Ho[Go], 2),
      Qo = Wo[0],
      Zo = Wo[1];
    Jo[Zo] = +Qo;
  }
  function Ko(e) {
    return Jo[e];
  }
  function Xo(e) {
    return Vo[e];
  }
  function es(e) {
    return JSON.stringify(e, function (e, t) {
      var r = this[e];
      if (r) {
        if (r instanceof RegExp) {
          return { "@": Ko("regex"), "#": [r.source, r.flags] };
        }
        var n = Ko(r.constructor.__class__);
        if (!bu(n)) {
          return { "@": n, "#": r.serialize() };
        }
      }
      return t;
    });
  }
  function ts(e) {
    return JSON.parse(e, function (e, t) {
      if (t && _(t) === "object") {
        if (!bu(t["@"])) {
          var r = Xo(t["@"]);
          if (zo[r]) {
            return zo[r](t["#"]);
          }
        }
      }
      return t;
    });
  }
  var rs = (function () {
    var e = {
      pair: Ni,
      symbol: Ln,
      number: da,
      string: sa,
      character: oa,
      nil: Pi.constructor,
      regex: RegExp,
    };
    function t(e, t) {
      return { deserialize: t, Class: e };
    }
    var r = new Qt();
    var u = {};
    for (var n = 0, i = Object.entries(zo); n < i.length; n++) {
      var a = A(i[n], 2),
        o = a[0],
        s = a[1];
      var c = e[o];
      u[o] = t(c, s);
    }
    var f = 43311;
    Object.keys(u).forEach(function (e) {
      var t = u[e];
      if (typeof t === "function") {
        var r = t;
        tr({
          Class: r,
          tag: f,
          encode: function e(t, r) {
            r(t.serialize());
          },
          decode: function e(t) {
            return new r(t);
          },
        });
      } else {
        var n = t.deserialize,
          i = t.Class;
        tr({
          Class: i,
          tag: f,
          encode: function e(t, r) {
            if (t instanceof RegExp) {
              return r([t.source, t.flags]);
            }
            r(t.serialize());
          },
          decode: function e(t) {
            return n(t);
          },
        });
      }
      f++;
    });
    return r;
  })();
  function ns() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {
      t[r] = arguments[r];
    }
    if (t.length > 1) {
      var n = t.reduce(function (e, t) {
        return e + t.length;
      }, 0);
      var i = new Uint8Array(n);
      var u = 0;
      t.forEach(function (e) {
        i.set(e, u);
        u += e.length;
      });
      return i;
    } else if (t.length) {
      return t[0];
    }
  }
  function is() {
    var e = 1;
    var t = new TextEncoder("utf-8");
    return t.encode("LIPS".concat(e.toString().padStart(3, " ")));
  }
  var us = 7;
  function as(e) {
    var t = new TextDecoder("utf-8");
    var r = t.decode(e.slice(0, us));
    var n = r.substring(0, 4);
    if (n === "LIPS") {
      var i = r.match(/^(....).*([0-9]+)$/);
      if (i) {
        return { type: i[1], version: Number(i[2]) };
      }
    }
    return { type: "unknown" };
  }
  function os(e) {
    var t = is();
    var r = rs.encode(e);
    return ns(t, br(r, { magic: false }));
  }
  function ss(e) {
    var t = as(e),
      r = t.type,
      n = t.version;
    if (r === "LIPS" && n === 1) {
      var i = wr(e.slice(us), { magic: false });
      return rs.decode(i);
    } else {
      throw new Error("Invalid file format ".concat(r));
    }
  }
  function cs(e) {
    console.error(e.message || e);
    if (e.code) {
      console.error(
        e.code.map(function (e, t) {
          return "[".concat(t + 1, "]: ").concat(e);
        })
      );
    }
  }
  function fs() {
    var a = ["text/x-lips", "text/x-scheme"];
    var o;
    function s(r) {
      return new Promise(function (t) {
        var e = r.getAttribute("src");
        if (e) {
          return fetch(e)
            .then(function (e) {
              return e.text();
            })
            .then(No)
            .then(t)
            ["catch"](function (e) {
              cs(e);
              t();
            });
        } else {
          return No(r.innerHTML)
            .then(t)
            ["catch"](function (e) {
              cs(e);
              t();
            });
        }
      });
    }
    function e() {
      return new Promise(function (i) {
        var u = Array.from(document.querySelectorAll("script"));
        return (function e() {
          var t = u.shift();
          if (!t) {
            i();
          } else {
            var r = t.getAttribute("type");
            if (a.includes(r)) {
              var n = t.getAttribute("bootstrap");
              if (!o && typeof n === "string") {
                return Yo(n)
                  .then(function () {
                    return s(t);
                  })
                  .then(e);
              } else {
                return s(t).then(e);
              }
            } else if (r && r.match(/lips|lisp/)) {
              console.warn("Expecting " + a.join(" or ") + " found " + r);
            }
            return e();
          }
        })();
      });
    }
    if (!window.document) {
      return Promise.resolve();
    } else if (ls) {
      var t = ls;
      var r = t.getAttribute("bootstrap");
      if (typeof r === "string") {
        return Yo(r).then(function () {
          o = true;
          return e();
        });
      }
    }
    return e();
  }
  var ls =
    typeof window !== "undefined" && window.document && document.currentScript;
  if (typeof window !== "undefined") {
    Ur(window, fs);
  }
  var hs = (function () {
    var e = sa("Mon, 15 Nov 2021 19:33:52 +0000").valueOf();
    var t = e === "{{" + "DATE}}" ? new Date() : new Date(e);
    var r = function e(t) {
      return t.toString().padStart(2, "0");
    };
    var n = t.getFullYear();
    var i = [n, r(t.getMonth() + 1), r(t.getDate())].join("-");
    var u =
      "\n  __ __                          __\n / / \\ \\       _    _  ___  ___  \\ \\\n| |   \\ \\     | |  | || . \\/ __>  | |\n| |    > \\    | |_ | ||  _/\\__ \\  | |\n| |   / ^ \\   |___||_||_|  <___/  | |\n \\_\\ /_/ \\_\\                     /_/\n\nLIPS Interpreter 1.0.0-beta.16 ("
        .concat(i, ") <https://lips.js.org>\nCopyright (c) 2018-")
        .concat(
          n,
          " Jakub T. Jankiewicz\n\nType (env) to see environment with functions macros and variables. You can also\nuse (help name) to display help for specic function or macro, (apropos name)\nto display list of matched names in environment and (dir object) to list\nproperties of an object.\n"
        )
        .replace(/^.*\n/, "");
    return u;
  })();
  ai(di, "__class__", "ahead");
  ai(Ni, "__class__", "pair");
  ai(Ii, "__class__", "nil");
  ai(vi, "__class__", "pattern");
  ai(_i, "__class__", "formatter");
  ai(au, "__class__", "macro");
  ai(fu, "__class__", "syntax");
  ai(Ga, "__class__", "environment");
  ai(Sa, "__class__", "input-port");
  ai(Ba, "__class__", "output-port");
  ai(ja, "__class__", "output-port");
  ai(Ia, "__class__", "output-string-port");
  ai(Na, "__class__", "input-string-port");
  ai(La, "__class__", "input-file-port");
  ai(Pa, "__class__", "output-file-port");
  ai(Ja, "__class__", "lips-error");
  [da, Da, ka, Ea, Oa].forEach(function (e) {
    ai(e, "__class__", "number");
  });
  ai(oa, "__class__", "character");
  ai(Ln, "__class__", "symbol");
  ai(sa, "__class__", "string");
  ai(Yn, "__class__", "promise");
  var ps = {
    version: "1.0.0-beta.16",
    banner: hs,
    date: "Mon, 15 Nov 2021 19:33:52 +0000",
    exec: No,
    parse: Xu(oi, ti),
    tokenize: Nn,
    evaluate: Io,
    compile: Po,
    serialize: es,
    unserialize: ts,
    serialize_bin: os,
    unserialize_bin: ss,
    bootstrap: Yo,
    Environment: Ga,
    env: uo,
    Worker: $o,
    Interpreter: Va,
    balanced_parenthesis: To,
    balancedParenthesis: To,
    balanced: To,
    Macro: au,
    Syntax: fu,
    Pair: Ni,
    Values: Wa,
    QuotedPromise: Yn,
    Error: Ja,
    quote: Qa,
    InputPort: Sa,
    OutputPort: Ba,
    BufferedOutputPort: ja,
    InputFilePort: La,
    OutputFilePort: Pa,
    InputStringPort: Na,
    OutputStringPort: Ia,
    InputByteVectorPort: Ra,
    OutputByteVectorPort: Ta,
    InputBinaryFilePort: Ua,
    OutputBinaryFilePort: qa,
    Formatter: _i,
    Parser: Xn,
    Lexer: Zn,
    specials: Jn,
    repr: Ti,
    nil: Pi,
    eof: $a,
    LSymbol: Ln,
    LNumber: da,
    LFloat: Ea,
    LComplex: Da,
    LRational: ka,
    LBigInteger: Oa,
    LCharacter: oa,
    LString: sa,
    rationalize: xa,
  };
  io.set("lips", ps);
  var _s = {};
  var ds = Object.freeze({ __proto__: null, default: _s });
  function vs(e, t) {
    var r = 0;
    for (var n = e.length - 1; n >= 0; n--) {
      var i = e[n];
      if (i === ".") {
        e.splice(n, 1);
      } else if (i === "..") {
        e.splice(n, 1);
        r++;
      } else if (r) {
        e.splice(n, 1);
        r--;
      }
    }
    if (t) {
      for (; r--; r) {
        e.unshift("..");
      }
    }
    return e;
  }
  var ms = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  var ys = function (e) {
    return ms.exec(e).slice(1);
  };
  function gs() {
    var e = "",
      t = false;
    for (var r = arguments.length - 1; r >= -1 && !t; r--) {
      var n = r >= 0 ? arguments[r] : "/";
      if (typeof n !== "string") {
        throw new TypeError("Arguments to path.resolve must be strings");
      } else if (!n) {
        continue;
      }
      e = n + "/" + e;
      t = n.charAt(0) === "/";
    }
    e = vs(
      Ss(e.split("/"), function (e) {
        return !!e;
      }),
      !t
    ).join("/");
    return (t ? "/" : "") + e || ".";
  }
  function bs(e) {
    var t = ws(e),
      r = Bs(e, -1) === "/";
    e = vs(
      Ss(e.split("/"), function (e) {
        return !!e;
      }),
      !t
    ).join("/");
    if (!e && !t) {
      e = ".";
    }
    if (e && r) {
      e += "/";
    }
    return (t ? "/" : "") + e;
  }
  function ws(e) {
    return e.charAt(0) === "/";
  }
  function Ds() {
    var e = Array.prototype.slice.call(arguments, 0);
    return bs(
      Ss(e, function (e, t) {
        if (typeof e !== "string") {
          throw new TypeError("Arguments to path.join must be strings");
        }
        return e;
      }).join("/")
    );
  }
  function Es(e, t) {
    e = gs(e).substr(1);
    t = gs(t).substr(1);
    function r(e) {
      var t = 0;
      for (; t < e.length; t++) {
        if (e[t] !== "") break;
      }
      var r = e.length - 1;
      for (; r >= 0; r--) {
        if (e[r] !== "") break;
      }
      if (t > r) return [];
      return e.slice(t, r - t + 1);
    }
    var n = r(e.split("/"));
    var i = r(t.split("/"));
    var u = Math.min(n.length, i.length);
    var a = u;
    for (var o = 0; o < u; o++) {
      if (n[o] !== i[o]) {
        a = o;
        break;
      }
    }
    var s = [];
    for (var o = a; o < n.length; o++) {
      s.push("..");
    }
    s = s.concat(i.slice(a));
    return s.join("/");
  }
  var As = "/";
  var Fs = ":";
  function xs(e) {
    var t = ys(e),
      r = t[0],
      n = t[1];
    if (!r && !n) {
      return ".";
    }
    if (n) {
      n = n.substr(0, n.length - 1);
    }
    return r + n;
  }
  function Cs(e, t) {
    var r = ys(e)[2];
    if (t && r.substr(-1 * t.length) === t) {
      r = r.substr(0, r.length - t.length);
    }
    return r;
  }
  function ks(e) {
    return ys(e)[3];
  }
  var Os = {
    extname: ks,
    basename: Cs,
    dirname: xs,
    sep: As,
    delimiter: Fs,
    relative: Es,
    join: Ds,
    isAbsolute: ws,
    normalize: bs,
    resolve: gs,
  };
  function Ss(e, t) {
    if (e.filter) return e.filter(t);
    var r = [];
    for (var n = 0; n < e.length; n++) {
      if (t(e[n], n, e)) r.push(e[n]);
    }
    return r;
  }
  var Bs =
    "ab".substr(-1) === "b"
      ? function (e, t, r) {
          return e.substr(t, r);
        }
      : function (e, t, r) {
          if (t < 0) t = e.length + t;
          return e.substr(t, r);
        };
  var js = Object.freeze({
    __proto__: null,
    resolve: gs,
    normalize: bs,
    isAbsolute: ws,
    join: Ds,
    relative: Es,
    sep: As,
    delimiter: Fs,
    dirname: xs,
    basename: Cs,
    extname: ks,
    default: Os,
  });
  return ps;
});
